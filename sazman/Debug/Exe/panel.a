;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;ï¿½ Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 6/30/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#define xtal 11059200
;
;// 1 Wire Bus interface functions
;#include <1wire.h>
;#include <stdio.h>
;#include <ds1307.h>
;#include <testfont.c>
;/****************************************************************************
;Font created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Font name: New font
;Fixed font width: 8 pixels
;Font height: 8 pixels
;First character: 0x20
;Last character: 0x7F
;
;Exported font data size:
;772 bytes for displays organized as horizontal rows of bytes
;772 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char she[]=
;{
;0x08, /* Fixed font width */
;0x08, /* Font height */
;0x20, /* First character */
;0x60, /* Number of characters in font */
;
;#ifndef _GLCD_DATA_BYTEY_
;/* Font data for displays organized as
;   horizontal rows of bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0x10, 0x28, 0x00, 0x54, 0x7D, 0x05, 0x05, 0x07,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x35, ASCII Character: '5' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x37, ASCII Character: '7' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;#else
;/* Font data for displays organized as
;   rows of vertical bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0xF0, 0x80, 0xF8, 0x12, 0x19, 0x12, 0x18, 0x00,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x35, ASCII Character: '5' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x37, ASCII Character: '7' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;
;#endif
;};
;
;#include <string.h>
;// DS1820 Temperature Sensor functions
;#include <ds18b20.h>
;//#include <bfreeze.c>
;// maximum number of DS1820 devices
;// connected to the 1 Wire bus
;#define MAX_DS1820 8
;// number of DS1820 devices
;// connected to the 1 Wire bus
;unsigned char ds1820_devices;
;// DS1820 devices ROM code storage area,
;// 9 bytes are used for each device
;// (see the w1_search function description in the help)
;unsigned char ds1820_rom_codes[MAX_DS1820][9];
;
;// Graphic Display functions
;#include <glcd.h>
;#include <delay.h>
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Declare your global variables here
;#include <defines.c>
;//float temp=0;
;//char i=0;
;//char a=0;
;//char buffer[16];
;
;char c=1;
;//char j=250;
;char _hour=0;
;char _min=0;
;char _sec=0;
;char _wday,_year,_month,_day;
;int sh_year;
;char _weekday[7][4]={{"Sat"},{"Sun"},{"Mon"},{"Tue"},{"Wed"},{"Thu"},{"Fri"}};

	.DSEG
;char lastsec=0;
;char strsec[12];
;bit a=1;
;
;//#define led1 PORTD.6;
;
;#define led PORTD.6
;#define up PIND.5
;#define down PIND.4
;#define menu PIND.3
;
;typedef unsigned char byte;
;typedef unsigned int  word;
;
;
;
;         bit blank=false;
;         byte selection,j;
;         char str[10];
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 003A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 003B // Reinitialize Timer1 value
; 0000 003C TCNT1H=0x5740 >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 003D TCNT1L=0x5740 & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 003E // Place your code here
; 0000 003F 
; 0000 0040 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;
;
;void main(void)
; 0000 0045 {
;PCODE: $00000016 VOL: 0
; 0000 0046 
; 0000 0047 
; 0000 0048 // Declare your local variables here
; 0000 0049 // Variable used to store graphic display
; 0000 004A // controller initialization data
; 0000 004B GLCDINIT_t glcd_init_data;
; 0000 004C 
; 0000 004D // Input/Output Ports initialization
; 0000 004E // Port A initialization
; 0000 004F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0050 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000017 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0051 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0052 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0053 
; 0000 0054 // Port B initialization
; 0000 0055 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0056 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0057 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0058 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0059 
; 0000 005A // Port C initialization
; 0000 005B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 005C DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 005D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 005E PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 005F 
; 0000 0060 // Port D initialization
; 0000 0061 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0062 DDRD=(0<<DDD7) | (1<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0063 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0064 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0065 
; 0000 0066 // Timer/Counter 0 initialization
; 0000 0067 // Clock source: System Clock
; 0000 0068 // Clock value: Timer 0 Stopped
; 0000 0069 // Mode: Normal top=0xFF
; 0000 006A // OC0 output: Disconnected
; 0000 006B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 006C TCNT0=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 006D OCR0=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 006E 
; 0000 006F // Timer/Counter 1 initialization
; 0000 0070 // Clock source: System Clock
; 0000 0071 // Clock value: 43.200 kHz
; 0000 0072 // Mode: Normal top=0xFFFF
; 0000 0073 // OC1A output: Disconnected
; 0000 0074 // OC1B output: Disconnected
; 0000 0075 // Noise Canceler: Off
; 0000 0076 // Input Capture on Falling Edge
; 0000 0077 // Timer Period: 1 s
; 0000 0078 // Timer1 Overflow Interrupt: On
; 0000 0079 // Input Capture Interrupt: Off
; 0000 007A // Compare A Match Interrupt: Off
; 0000 007B // Compare B Match Interrupt: Off
; 0000 007C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 007D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 007E TCNT1H=0x57;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 007F TCNT1L=0x40;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0080 ICR1H=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0081 ICR1L=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0082 OCR1AH=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0083 OCR1AL=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0084 OCR1BH=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0085 OCR1BL=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0086 
; 0000 0087 // Timer/Counter 2 initialization
; 0000 0088 // Clock source: System Clock
; 0000 0089 // Clock value: Timer2 Stopped
; 0000 008A // Mode: Normal top=0xFF
; 0000 008B // OC2 output: Disconnected
; 0000 008C ASSR=0<<AS2;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 008D TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 008E TCNT2=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 008F OCR2=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0090 
; 0000 0091 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0092 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0093 
; 0000 0094 // External Interrupt(s) initialization
; 0000 0095 // INT0: Off
; 0000 0096 // INT1: Off
; 0000 0097 // INT2: Off
; 0000 0098 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0099 MCUCSR=(0<<ISC2);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 009A 
; 0000 009B // USART initialization
; 0000 009C // USART disabled
; 0000 009D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 009E 
; 0000 009F // Analog Comparator initialization
; 0000 00A0 // Analog Comparator: Off
; 0000 00A1 // The Analog Comparator's positive input is
; 0000 00A2 // connected to the AIN0 pin
; 0000 00A3 // The Analog Comparator's negative input is
; 0000 00A4 // connected to the AIN1 pin
; 0000 00A5 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 00A6 SFIOR=(0<<ACME);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 00A7 
; 0000 00A8 // ADC initialization
; 0000 00A9 // ADC disabled
; 0000 00AA ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 00AB 
; 0000 00AC // SPI initialization
; 0000 00AD // SPI disabled
; 0000 00AE SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 00AF 
; 0000 00B0 // TWI initialization
; 0000 00B1 // TWI disabled
; 0000 00B2 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00B3 
; 0000 00B4 // 1 Wire Bus initialization
; 0000 00B5 // 1 Wire Data port: PORTB
; 0000 00B6 // 1 Wire Data bit: 0
; 0000 00B7 // Note: 1 Wire port settings are specified in the
; 0000 00B8 // Project|Configure|C Compiler|Libraries|1 Wire menu.
; 0000 00B9 w1_init();
;PCODE: $0000005C VOL: 0
; 0000 00BA 
; 0000 00BB // Determine the number of DS1820 devices
; 0000 00BC // connected to the 1 Wire bus
; 0000 00BD ds1820_devices=w1_search(0xf0,ds1820_rom_codes);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00BE 
; 0000 00BF // Graphic Display Controller initialization
; 0000 00C0 // The ST7920 connections are specified in the
; 0000 00C1 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0000 00C2 // E - PORTA Bit 0
; 0000 00C3 // R /W - PORTA Bit 1
; 0000 00C4 // RS - PORTA Bit 2
; 0000 00C5 // /RST - PORTA Bit 3
; 0000 00C6 // DB4 - PORTA Bit 4
; 0000 00C7 // DB5 - PORTA Bit 5
; 0000 00C8 // DB6 - PORTA Bit 6
; 0000 00C9 // DB7 - PORTA Bit 7
; 0000 00CA 
; 0000 00CB // Specify the current font for displaying text
; 0000 00CC glcd_init_data.font=font5x7;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00CD // No function is used for reading
; 0000 00CE // image data from external memory
; 0000 00CF glcd_init_data.readxmem=NULL;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00D0 // No function is used for writing
; 0000 00D1 // image data to external memory
; 0000 00D2 glcd_init_data.writexmem=NULL;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00D3 
; 0000 00D4 glcd_init(&glcd_init_data);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00D5 
; 0000 00D6 // Global enable interrupts
; 0000 00D7 #asm("sei")
;PCODE: $0000006A VOL: 0
	sei
;PCODE: $0000006B VOL: 0
; 0000 00D8 glcd_cleargraphics();
;PCODE: $0000006C VOL: 0
; 0000 00D9 rtc_init(0,0,0);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00DA //rtc_set_time(13,43,0);
; 0000 00DB //rtc_set_date(2,21,06,00);
; 0000 00DC while (1)
;PCODE: $00000073 VOL: 0
; 0000 00DD {
; 0000 00DE       //glcd_clear();
; 0000 00DF       //delay_ms(1000);
; 0000 00E0       rtc_init(0,0,0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00E1       rtc_get_time(&_hour,&_min,&_sec);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00E2       sprintf(strsec,"%02d:%02d:%02d",_hour,_min,_sec);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00E3       //if(PIND.5==0){
; 0000 00E4       lcd_gotoxy(0,1);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00E5       lcd_puts(strsec);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00E6       rtc_get_date(&_wday,&_day,&_month,&_year);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00E7       _wday--;
;PCODE: $000000A0 VOL: 0
; 0000 00E8       sh_year=_year+1400;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00E9       sprintf(strsec,"%4d/%02d/%02d",sh_year,_month,_day);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00EA       lcd_gotoxy(0,0);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00EB       lcd_puts(strsec);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00EC       //_weekday[]="s";
; 0000 00ED       //if (_sec==2) a^;
; 0000 00EE       //glcd_display(a);
; 0000 00EF       if (_wday>6)_wday=0;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00F0       strcpy(strsec,_weekday[_wday]);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00F1       lcd_gotoxy(11,0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00F2       lcd_puts(strsec);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00F3 
; 0000 00F4       if(menu==0){
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00F5         selection=0;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00F6         delay_ms(50);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00F7         if(menu==0){
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00F8             while(menu==0){
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00F9             }
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00FA 
; 0000 00FB             while(1){
;PCODE: $000000E1 VOL: 0
; 0000 00FC                 delay_ms(50);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00FD                 j++;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00FE                 if (j==10){
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00FF                     blank=!blank;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0100                     j=0;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0101                 }
; 0000 0102                 strcpyf(str,"          ");
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0103                 sh_year=1400+_year;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0104                 if (selection==1 & blank==0)sprintf(str,"%04d/",sh_year);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0105                 else if(selection==1 & blank==1) strcpyf(str,"    ");
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0106                 else if(selection!=1) sprintf(str,"%04d/",sh_year);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0107                 lcd_gotoxy(0,0);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0108                 lcd_puts(str);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0109 
; 0000 010A                 if (selection==2 & blank==0)sprintf(str,"%02d/",_month);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 010B                 else if(selection==2 & blank==1) strcpyf(str,"  ");
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 010C                 else if(selection!=2) sprintf(str,"%02d",_month);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 010D                 lcd_gotoxy(5,0);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 010E                 lcd_puts(str);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 010F 
; 0000 0110                 if (selection==3 & blank==0)sprintf(str,"%02d",_day);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 0111                 else if(selection==3 & blank==1) strcpyf(str,"  ");
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0112                 else if(selection!=3) sprintf(str,"%02d",_day);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0113                 lcd_gotoxy(8,0);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 0114                 lcd_puts(str);
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0115 
; 0000 0116                 if (selection==4 & blank==0) strcpy(str,_weekday[_wday]);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 0117                 else if(selection==4 & blank==1) strcpyf(str,"   ");
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0118                 else if(selection!=4)strcpy(str,_weekday[_wday]);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 0119                 lcd_gotoxy(11,0);
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 011A                 lcd_puts(str);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 011B                 //sprintf(str,"%02d",_wday);
; 0000 011C                 //lcd_gotoxy(11,1);
; 0000 011D                 //lcd_puts(str);
; 0000 011E 
; 0000 011F                 if (selection==5 & blank==0)sprintf(str,"%02d:",_hour);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 0120                 else if(selection==5 & blank==1) strcpyf(str,"  ");
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0121                 else if(selection!=5) sprintf(str,"%02d",_hour);
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0122                 lcd_gotoxy(0,1);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0123                 lcd_puts(str);
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0124 
; 0000 0125                 if (selection==6 & blank==0)sprintf(str,"%02d:",_min);
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0126                 else if(selection==6 & blank==1) strcpyf(str,"  ");
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0127                 else if(selection!=6) sprintf(str,"%02d:",_min);
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 0128                 lcd_gotoxy(3,1);
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0129                 lcd_puts(str);
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 012A 
; 0000 012B                 if (selection==7 & blank==0)sprintf(str,"%02d",_sec);
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 012C                 else if(selection==7 & blank==1) strcpyf(str,"  ");
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 012D                 else if(selection!=7) sprintf(str,"%02d",_sec);
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 012E                 lcd_gotoxy(6,1);
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 012F                 lcd_puts(str);
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0130 
; 0000 0131                 if(up==0) {
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0132                     delay_ms(200);
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 0133                     if(up==0) {
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 0134                         blank=0;
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0135                         j=0;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0136                         if(selection==1)_year++;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 0137                         if(selection==2)_month++;
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 0138                         if(selection==3)_day++;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 0139                         if(selection==4)_wday++;
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 013A                         if(selection==5)_hour++;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 013B                         if(selection==6)_min++;
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
; 0000 013C                         if(selection==7)_sec++;
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 013D                     }
;PCODE: $000002E9 VOL: 0
; 0000 013E                 }
;PCODE: $000002EA VOL: 0
; 0000 013F 
; 0000 0140                 if(down==0) {
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 0141                     delay_ms(200);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 0142                     if(down==0) {
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 0143                         blank=0;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 0144                         j=0;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 0145                         if(selection==1) _year--;
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 0146                         if(selection==2)_month--;
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 0147                         if(selection==3)_day--;
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 0148                         if(selection==4)_wday--;
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 0149                         if(selection==5)_hour--;
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 014A                         if(selection==6)_min--;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 014B                         if(selection==7)_sec--;
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 014C                     }
;PCODE: $0000031C VOL: 0
; 0000 014D                 }
;PCODE: $0000031D VOL: 0
; 0000 014E 
; 0000 014F                 if (_year>99 & _year<101)_year=0;
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0000 0150                 if (_year>101)_year=99;
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 0151 
; 0000 0152                 if (_month>12 & _month<14)_month=1;
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 0153                 if (_month>14 )_month=12;
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 0154 
; 0000 0155                 if (_day>30 & _day<32)_day=0;
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 0156                 if (_day>32)_day=31;
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 0157 
; 0000 0158                 if (_wday>6 & _wday<8) _wday=0;
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0159                 if (_wday>8)_wday=6;
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 015A 
; 0000 015B                 if (_hour>23 & _hour<25)_hour=0;
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
; 0000 015C                 if (_hour>25)_hour=23;
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0000 015D 
; 0000 015E                 if (_min>59 & _min<61)_min=0;
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 015F                 if (_min>61)_min=59;
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 0160 
; 0000 0161                 if (_sec>59 & _sec<61)_sec=0;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
; 0000 0162                 if (_sec>61)_sec=59;
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 0163 
; 0000 0164 
; 0000 0165 
; 0000 0166                 if(menu==0) {
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
; 0000 0167                     delay_ms(100);
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 0168                     if(menu==1) {
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 0169                         selection++;
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 016A                         if(selection==8){
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 016B                            //rtc_init(0,0,0);
; 0000 016C                            delay_ms(100);
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 016D                            rtc_set_time(_hour,_min,_sec);
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 016E                            delay_ms(100);
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
; 0000 016F                            rtc_set_date(_wday,_day,_month,_year);
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0170                            glcd_clear();
;PCODE: $000003B5 VOL: 0
; 0000 0171                            lcd_puts("all saved");
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 0172                            delay_ms(3000);
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 0173                            glcd_clear();
;PCODE: $000003BB VOL: 0
; 0000 0174 
; 0000 0175                            break;
;PCODE: $000003BC VOL: 0
; 0000 0176                         }
; 0000 0177                     }
;PCODE: $000003BD VOL: 0
; 0000 0178                 }
;PCODE: $000003BE VOL: 0
; 0000 0179 
; 0000 017A             }
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 017B         }
; 0000 017C       }
;PCODE: $000003C2 VOL: 0
; 0000 017D 
; 0000 017E 
; 0000 017F   // Place your code here
; 0000 0180       //lcd_clear();
; 0000 0181       //delay_ms(500);
; 0000 0182 
; 0000 0183       /*
; 0000 0184       a=w1_init();
; 0000 0185       if (a>0) {
; 0000 0186       lcd_gotoxy(0,0);
; 0000 0187       lcd_puts("HI Ehsan");
; 0000 0188       lcd_gotoxy(0,1);
; 0000 0189         temp=ds18b20_temperature(0);
; 0000 018A         sprintf(buffer,"Temp=%2.1f%`C",temp,223);
; 0000 018B         lcd_puts(buffer);
; 0000 018C       }
; 0000 018D       delay_ms(500);
; 0000 018E       lcd_clear();
; 0000 018F       lcd_gotoxy(0,0);
; 0000 0190       glcd_putimagef(0,0,bfreeze,0);
; 0000 0191       delay_ms(2000);
; 0000 0192       glcd_putimagef(0,0,bfreeze,3);
; 0000 0193       delay_ms(2000);
; 0000 0194       lcd_clear();*/
; 0000 0195 
; 0000 0196       }
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 0197 }
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0

	.DSEG
_0x57:
	.BYTE 0xA
;
