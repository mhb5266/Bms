C51 COMPILER V7.50   12864                                                                 12/25/2012 18:25:21 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE 12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lpcreg.h"
   2          #include <intrins.h>    
   3          #include <12864.h>
   4          extern unsigned char g_ucTempbuf[20]; 
   5          uchar code dis1[] = {"曙光电子科技"};
   6          uchar code dis2[] = {"RFID刷卡系统"};
   7          uchar code dis3[] = {"主控芯片RC522 "};
   8          uchar code dis4[] = {"请您刷卡上车！ "};
   9          uchar code table3[]={"卡号:"};
  10          uchar code table4[]={"卡类型:"};
  11          uchar code table5[]={"消费:"};
  12          uchar code table6[]={"余额:"};
  13          uchar code table7[]={"元:"};
  14          
  15          /*******************************************************************/
  16          /*                                                                 */
  17          /*  延时函数                                                       */
  18          /*                                                                 */
  19          /*******************************************************************/
  20          void delay(int ms)
  21          {
  22   1          while(ms--)
  23   1              {
  24   2            uchar i;
  25   2                for(i=0;i<250;i++)  
  26   2                 {
  27   3                  _nop_();                       
  28   3                      _nop_();
  29   3                      _nop_();
  30   3                      _nop_();
  31   3                 }
  32   2              }
  33   1      }               
  34          /*******************************************************************/
  35          /*                                                                 */
  36          /*检查LCD忙状态                                                    */
  37          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
  38          /*                                                                 */
  39          /*******************************************************************/
  40          bit lcd_busy()
  41           {                          
  42   1          bit result;
  43   1          LCD_RS = 0;
  44   1          LCD_RW = 1;
  45   1          LCD_EN = 1;
  46   1          delayNOP();
  47   1          result = (bit)(P0&0x80);
  48   1          LCD_EN = 0;
  49   1          return(result); 
  50   1       }
  51          /*******************************************************************/
  52          /*                                                                 */
  53          /*写指令数据到LCD                                                  */
  54          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  55          /*                                                                 */
C51 COMPILER V7.50   12864                                                                 12/25/2012 18:25:21 PAGE 2   

  56          /*******************************************************************/
  57          void lcd_wcmd(uchar cmd)
  58          {                          
  59   1         while(lcd_busy());
  60   1          LCD_RS = 0;
  61   1          LCD_RW = 0;
  62   1          LCD_EN = 0;
  63   1          _nop_();
  64   1          _nop_(); 
  65   1          P0 = cmd;
  66   1          delayNOP();
  67   1          LCD_EN = 1;//下降沿写入
  68   1          delayNOP();
  69   1          LCD_EN = 0;  
  70   1      }
  71          /*******************************************************************/
  72          /*                                                                 */
  73          /*写显示数据到LCD                                                  */
  74          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
  75          /*                                                                 */
  76          /*******************************************************************/
  77          void lcd_wdat(uchar dat)
  78          {                          
  79   1         while(lcd_busy());
  80   1          LCD_RS = 1;
  81   1          LCD_RW = 0;
  82   1          LCD_EN = 0;
  83   1          P0 = dat;
  84   1          delayNOP();
  85   1          LCD_EN = 1;
  86   1          delayNOP();
  87   1          LCD_EN = 0; 
  88   1      }
  89          /*******************************************************************/
  90          /*                                                                 */
  91          /*  LCD初始化设定                                                  */
  92          /*                                                                 */
  93          /*******************************************************************/
  94          void lcd_init()
  95          { 
  96   1      
  97   1          LCD_PSB = 1;         //并口方式
  98   1          
  99   1          lcd_wcmd(0x34);      //扩充指令操作
 100   1          delay(5);
 101   1          lcd_wcmd(0x30);      //基本指令操作
 102   1          delay(5);
 103   1          lcd_wcmd(0x0C);      //显示开，关光标
 104   1          delay(5);
 105   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 106   1          delay(5);
 107   1      }
 108          
 109          void display_welcome2()
 110          {
 111   1              uchar i;
 112   1          delay(10);                 //延时
 113   1          //wela=0;
 114   1              //dula=0;         
 115   1        
 116   1          lcd_pos(0,0);             //设置显示位置为第一行的第1个字符
 117   1           i = 0;
C51 COMPILER V7.50   12864                                                                 12/25/2012 18:25:21 PAGE 3   

 118   1          while(dis1[i] != '\0')
 119   1           {                         //显示字符
 120   2             lcd_wdat(dis1[i]);
 121   2             i++;
 122   2           }
 123   1          lcd_pos(1,0);             //设置显示位置为第二行的第1个字符
 124   1           i = 0;
 125   1          while(dis2[i] != '\0')
 126   1           {
 127   2             lcd_wdat(dis2[i]);      //显示字符
 128   2             i++;
 129   2           }
 130   1               lcd_pos(2,0);             //设置显示位置为第三行的第1个字符
 131   1           i = 0;
 132   1          while(dis3[i] != '\0')
 133   1           {
 134   2             lcd_wdat(dis3[i]);      //显示字符
 135   2             i++;
 136   2           }
 137   1               lcd_pos(3,0);             //设置显示位置为第四行的第1个字符
 138   1           i = 0;
 139   1          while(dis4[i] != '\0')
 140   1           {
 141   2             lcd_wdat(dis4[i]);      //显示字符
 142   2             i++;
 143   2           }
 144   1        //while(1);
 145   1      
 146   1      
 147   1      }
 148          /*********************************************************/
 149          /*                                                                                                               */
 150          /* 延时x*0.14ms子程序                                                                    */
 151          /*                                                       */
 152          /*********************************************************/
 153          
 154          /*void delay0(uchar x)    //x*0.14MS
 155          {
 156            uchar i;
 157            while(x--)
 158           {
 159            for (i = 0; i<13; i++) {}
 160           }
 161          }*/
 162          /*********************************************************/
 163          /*                                                       */
 164          /* 设定显示位置                                          */
 165          /*                                                       */
 166          /*********************************************************/
 167          void lcd_pos(uchar X,uchar Y)
 168          {                          
 169   1         uchar  pos;
 170   1         if (X==0)
 171   1           {X=0x80;}
 172   1         else if (X==1)
 173   1           {X=0x90;}
 174   1         else if (X==2)
 175   1           {X=0x88;}
 176   1         else if (X==3)
 177   1           {X=0x98;}
 178   1         pos = X+Y ;  
 179   1         lcd_wcmd(pos);     //显示地址
C51 COMPILER V7.50   12864                                                                 12/25/2012 18:25:21 PAGE 4   

 180   1      }
 181          
 182          void LCD_Data(unsigned char LCDbyte )
 183          {
 184   1               unsigned char count;
 185   1               count=(LCDbyte&0xf0)>>4;
 186   1               if (count>0x9) lcd_wdat(count%9+0x40);
 187   1               else lcd_wdat(count+0x30);
 188   1               count=LCDbyte&0x0f;
 189   1               if (count>9) lcd_wdat(count%9+0x40);
 190   1               else lcd_wdat(count+0x30);
 191   1      }
 192          
 193          void display_type()//寻到卡后显示出该卡的类型
 194          {
 195   1              unsigned char num;
 196   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 197   1          delay(5);
 198   1          lcd_pos(0,0);             //设置显示位置为第四行的第1个字符
 199   1              for(num=0;num<8;num++)    //第一行要显示的11个字符
 200   1              {
 201   2              lcd_wdat(table4[num]);  
 202   2              }
 203   1      
 204   1              for(num=0;num<2;num++)//第一行要显示的11个字符
 205   1              {
 206   2                      lcd_pos(0,num+4);
 207   2                      LCD_Data(g_ucTempbuf[num]);//写数字
 208   2              }
 209   1      }
 210          
 211          void display_cardnum()
 212          {
 213   1              unsigned char num;
 214   1          //lcd_wcmd(0x01);      //清除LCD的显示内容
 215   1          delay(5);
 216   1          lcd_pos(1,0);             //设置显示位置为第四行的第1个字符
 217   1              for(num=0;num<6;num++)    //第一行要显示的11个字符
 218   1              {
 219   2              lcd_wdat(table3[num]);  
 220   2              }
 221   1      
 222   1              for(num=0;num<4;num++)//第一行要显示的11个字符
 223   1              {
 224   2                      lcd_pos(1,num+3);
 225   2                      LCD_Data(g_ucTempbuf[num]);//写数字
 226   2              }
 227   1      }
 228          void display_xiaofeicarddat()//消费
 229          {
 230   1          unsigned char num;
 231   1              lcd_pos(2,0);             //设置显示位置为第四行的第1个字符
 232   1              for(num=0;num<6;num++)    //第一行要显示的11个字符
 233   1              {
 234   2              lcd_wdat(table5[num]);  
 235   2              }
 236   1          lcd_pos(2,7);             //设置显示位置为第四行的第1个字符
 237   1              for(num=0;num<2;num++)    //第一行要显示的11个字符
 238   1              {
 239   2              lcd_wdat(table7[num]);  
 240   2              }
 241   1      
C51 COMPILER V7.50   12864                                                                 12/25/2012 18:25:21 PAGE 5   

 242   1              for(num=0;num<1;num++)//第一行要显示的11个字符
 243   1              {
 244   2                      lcd_pos(2,num+3);
 245   2                      LCD_Data(0x01);//消费
 246   2              }
 247   1      }
 248          
 249          void display_carddat()    //余额
 250          {
 251   1              unsigned char num;
 252   1      
 253   1          lcd_pos(3,0);     
 254   1              for(num=0;num<6;num++)    //第一行要显示的11个字符
 255   1              {
 256   2              lcd_wdat(table6[num]);  
 257   2              }
 258   1          lcd_pos(3,7);             //设置显示位置为第四行的第1个字符
 259   1              for(num=0;num<2;num++)    //第一行要显示的11个字符
 260   1              {
 261   2              lcd_wdat(table7[num]);  
 262   2              }
 263   1                 //设置显示位置为第四行的第1个字符
 264   1              
 265   1              lcd_pos(3,3);
 266   1                      LCD_Data(g_ucTempbuf[3]);//写数字,余额
 267   1      
 268   1          /*for(num=0;num<4;num++)//第一行要显示的11个字符
 269   1              {
 270   1              lcd_pos(3,num+3);
 271   1                      LCD_Data(g_ucTempbuf[3]);//写数字,余额
 272   1              }*/
 273   1         /*lcd_pos(3,0);
 274   1          for(num=8;num<16;num++)//第一行要显示的11个字符
 275   1              {
 276   1                      LCD_Data(g_ucTempbuf[num]);//写数字
 277   1              }*/
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    544    ----
   CONSTANT SIZE    =     87    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
