
AVRASM ver. 2.1.30  K:\project\tm1637\codevision\New folder\Debug\List\clock.asm Tue Jun 04 14:09:55 2019

K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1088): warning: Register r5 already defined by the .DEF directive
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1089): warning: Register r4 already defined by the .DEF directive
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1090): warning: Register r7 already defined by the .DEF directive
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1091): warning: Register r6 already defined by the .DEF directive
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Update_Time=R5
                 	.DEF _ClockPoint=R4
                 	.DEF _second=R7
                 	.DEF _minute=R6
                 	.DEF _hour=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 00be 	JMP  _timer2_ovf_isr
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _Table_7s:
00002a 063f
00002b 4f5b
00002c 6d66
00002d 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
00002e 6f7f
00002f 7c77
000030 5e39
000031 7179      	.DB  0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71
000032 763d
000033 0e30
000034 5438
000035 735c      	.DB  0x3D,0x76,0x30,0xE,0x38,0x54,0x5C,0x73
000036 1c50
000037 3e78
000038 4000
000039 0f08      	.DB  0x50,0x1C,0x78,0x3E,0x0,0x40,0x8,0xF
00003a 7b39
00003b 675f
00003c 6e58
00003d 3063      	.DB  0x39,0x7B,0x5F,0x67,0x58,0x6E,0x63,0x30
00003e 1074      	.DB  0x74,0x10
                 _s1:
00003f 7564
000040 6f6e
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1131): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x64,0x75,0x6E,0x6F,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000042 0000
000043 0000      	.DB  0x0,0x0,0x0,0x0
000044 0000      	.DB  0x0,0x0
                 
                 _0x3:
000045 7564
000046 6f6e      	.DB  0x64,0x75,0x6E,0x6F
                 _0x0:
000047 7564
000048 6f6e
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1141): warning: .cseg .db misalignment - padding zero byte
000049 0000      	.DB  0x64,0x75,0x6E,0x6F,0x0
                 _0x2000003:
00004a 012c      	.DB  0x2C,0x1
                 _0x2000004:
K:\project\tm1637\codevision\New folder\Debug\List\clock.asm(1145): warning: .cseg .db misalignment - padding zero byte
00004b 0007      	.DB  0x7
                 
                 __GLOBAL_INI_TBL:
00004c 0006      	.DW  0x06
00004d 0004      	.DW  0x04
00004e 0084      	.DW  __REG_VARS*2
                 
00004f 0004      	.DW  0x04
000050 0169      	.DW  _s2
000051 008a      	.DW  _0x3*2
                 
000052 0005      	.DW  0x05
000053 0160      	.DW  _0x4
000054 008e      	.DW  _0x0*2
                 
000055 0002      	.DW  0x02
000056 0166      	.DW  __scrolldelay
000057 0094      	.DW  _0x2000003*2
                 
000058 0001      	.DW  0x01
000059 0168      	.DW  __brightness
00005a 0096      	.DW  _0x2000004*2
                 
                 _0xFFFFFFFF:
00005b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005c 94f8      	CLI
00005d 27ee      	CLR  R30
00005e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005f e0f1      	LDI  R31,1
000060 bffb      	OUT  GICR,R31
000061 bfeb      	OUT  GICR,R30
000062 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000063 e08d      	LDI  R24,(14-2)+1
000064 e0a2      	LDI  R26,2
000065 27bb      	CLR  R27
                 __CLEAR_REG:
000066 93ed      	ST   X+,R30
000067 958a      	DEC  R24
000068 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000069 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006a e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006c 93ed      	ST   X+,R30
00006d 9701      	SBIW R24,1
00006e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006f e9e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000070 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000071 9185      	LPM  R24,Z+
000072 9195      	LPM  R25,Z+
000073 9700      	SBIW R24,0
000074 f061      	BREQ __GLOBAL_INI_END
000075 91a5      	LPM  R26,Z+
000076 91b5      	LPM  R27,Z+
000077 9005      	LPM  R0,Z+
000078 9015      	LPM  R1,Z+
000079 01bf      	MOVW R22,R30
00007a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007b 9005      	LPM  R0,Z+
00007c 920d      	ST   X+,R0
00007d 9701      	SBIW R24,1
00007e f7e1      	BRNE __GLOBAL_INI_LOOP
00007f 01fb      	MOVW R30,R22
000080 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000081 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000082 bfed      	OUT  SPL,R30
000083 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000084 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000085 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000086 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000087 940c 0089 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <tm1637.h>
                 ;
                 ;#asm
                  .equ __tm1637_port=0X1b; //PORTA
                  .equ __clk_bit=0;
                  .equ __dio_bit=1;
                 ; 0000 0008 #endasm
                 ;//PORTD=0x12;
                 ;//PORTC=0x15;
                 ;//PORTB=0x18;
                 ;//PORTA=0x1b;
                 ;_Bool Update_Time=0;
                 ;_Bool ClockPoint=0;
                 ;signed char second=0,minute=0,hour=0;
                 ;flash unsigned char s1[]={"duno"};
                 ;unsigned char s2[]={"duno"};
                 
                 	.DSEG
                 ;void main(void)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0014 ASSR=0x08;
000089 e0e8      	LDI  R30,LOW(8)
00008a bde2      	OUT  0x22,R30
                 ; 0000 0015 TCCR2=0x05;
00008b e0e5      	LDI  R30,LOW(5)
00008c bde5      	OUT  0x25,R30
                 ; 0000 0016 TCNT2=0x00;
00008d e0e0      	LDI  R30,LOW(0)
00008e bde4      	OUT  0x24,R30
                 ; 0000 0017 OCR2=0x00;
00008f bde3      	OUT  0x23,R30
                 ; 0000 0018 TIMSK=0x40;
000090 e4e0      	LDI  R30,LOW(64)
000091 bfe9      	OUT  0x39,R30
                 ; 0000 0019 #asm("sei")
000092 9478      	sei
                 ; 0000 001A 
                 ; 0000 001B tm1637_init();
000093 d161      	RCALL _tm1637_init
                 ; 0000 001C tm1637_putsf(s1);
000094 e7ae      	LDI  R26,LOW(_s1*2)
000095 e0b0      	LDI  R27,HIGH(_s1*2)
000096 d1c1      	RCALL _tm1637_putsf
                 ; 0000 001D tm1637_puts(s2);
000097 e6a9      	LDI  R26,LOW(_s2)
000098 e0b1      	LDI  R27,HIGH(_s2)
000099 d1a9      	RCALL _tm1637_puts
                 ; 0000 001E tm1637_putsf("duno");
                +
00009a e8ae     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00009b e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00009c d1bb      	RCALL _tm1637_putsf
                 ; 0000 001F tm1637_puts("duno");
                +
00009d e6a0     +LDI R26 , LOW ( _0x4 + ( 0 ) )
00009e e0b1     +LDI R27 , HIGH ( _0x4 + ( 0 ) )
                 	__POINTW2MN _0x4,0
00009f d1a3      	RCALL _tm1637_puts
                 ; 0000 0020 while (1)
                 _0x5:
                 ; 0000 0021       {
                 ; 0000 0022         if(Update_Time)
0000a0 2055      	TST  R5
0000a1 f0d1      	BREQ _0x8
                 ; 0000 0023         {
                 ; 0000 0024         Update_Time =0;
0000a2 2455      	CLR  R5
                 ; 0000 0025             if(ClockPoint)
0000a3 2044      	TST  R4
0000a4 f011      	BREQ _0x9
                 ; 0000 0026             {
                 ; 0000 0027             tm1637_point(POINT_ON);
0000a5 e0a1      	LDI  R26,LOW(1)
0000a6 c001      	RJMP _0xF
                 ; 0000 0028             }else
                 _0x9:
                 ; 0000 0029             {
                 ; 0000 002A             tm1637_point(POINT_OFF);
0000a7 e0a0      	LDI  R26,LOW(0)
                 _0xF:
0000a8 d163      	RCALL _tm1637_point
                 ; 0000 002B             };
                 ; 0000 002C         tm1637_display_all(hour/10,hour%10,minute/10,minute%10);
0000a9 940e 02b0 	CALL SUBOPT_0x0
0000ab 940e 02ed 	CALL __DIVW21
0000ad 93ea      	ST   -Y,R30
0000ae 940e 02b0 	CALL SUBOPT_0x0
0000b0 940e 02f2 	CALL __MODW21
0000b2 940e 02b7 	CALL SUBOPT_0x1
0000b4 940e 02ed 	CALL __DIVW21
0000b6 940e 02b7 	CALL SUBOPT_0x1
0000b8 940e 02f2 	CALL __MODW21
0000ba 2fae      	MOV  R26,R30
0000bb d157      	RCALL _tm1637_display_all
                 ; 0000 002D         }
                 ; 0000 002E       }
                 _0x8:
0000bc cfe3      	RJMP _0x5
                 ; 0000 002F }
                 _0xB:
0000bd cfff      	RJMP _0xB
                 ; .FEND
                 
                 	.DSEG
                 _0x4:
000160           	.BYTE 0x5
                 ;//*************************************************************************
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0032 {
                 
                 	.CSEG
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
0000be 93ea      	ST   -Y,R30
0000bf b7ef      	IN   R30,SREG
0000c0 93ea      	ST   -Y,R30
                 ; 0000 0033 Update_Time =1;
0000c1 e0e1      	LDI  R30,LOW(1)
0000c2 2e5e      	MOV  R5,R30
                 ; 0000 0034 ClockPoint =~ClockPoint;
0000c3 9440      	COM  R4
                 ; 0000 0035 second++;
0000c4 9473      	INC  R7
                 ; 0000 0036     if (second > 59)
0000c5 e3eb      	LDI  R30,LOW(59)
0000c6 15e7      	CP   R30,R7
0000c7 f454      	BRGE _0xC
                 ; 0000 0037     {
                 ; 0000 0038     second=0;
0000c8 2477      	CLR  R7
                 ; 0000 0039     minute++;
0000c9 9463      	INC  R6
                 ; 0000 003A             if (minute>59)
0000ca 15e6      	CP   R30,R6
0000cb f434      	BRGE _0xD
                 ; 0000 003B             {
                 ; 0000 003C             minute=0;
0000cc 2466      	CLR  R6
                 ; 0000 003D             hour++;
0000cd 9493      	INC  R9
                 ; 0000 003E                     if(hour>23)
0000ce e1e7      	LDI  R30,LOW(23)
0000cf 15e9      	CP   R30,R9
0000d0 f40c      	BRGE _0xE
                 ; 0000 003F                     {
                 ; 0000 0040                     hour=0;
0000d1 2499      	CLR  R9
                 ; 0000 0041                     }
                 ; 0000 0042             }
                 _0xE:
                 ; 0000 0043     }
                 _0xD:
                 ; 0000 0044 }
                 _0xC:
0000d2 91e9      	LD   R30,Y+
0000d3 bfef      	OUT  SREG,R30
0000d4 91e9      	LD   R30,Y+
0000d5 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 _Tm1637_table_str:
                 ; .FSTART _Tm1637_table_str
0000d6 93aa      	ST   -Y,R26
0000d7 931a      	ST   -Y,R17
0000d8 81e9      	LDD  R30,Y+1
0000d9 e0f0      	LDI  R31,0
0000da 33e0      	CPI  R30,LOW(0x30)
0000db e0a0      	LDI  R26,HIGH(0x30)
0000dc 07fa      	CPC  R31,R26
0000dd f411      	BRNE _0x2000008
0000de e010      	LDI  R17,LOW(0)
0000df c113      	RJMP _0x2000007
                 _0x2000008:
0000e0 33e1      	CPI  R30,LOW(0x31)
0000e1 e0a0      	LDI  R26,HIGH(0x31)
0000e2 07fa      	CPC  R31,R26
0000e3 f411      	BRNE _0x2000009
0000e4 e011      	LDI  R17,LOW(1)
0000e5 c10d      	RJMP _0x2000007
                 _0x2000009:
0000e6 33e2      	CPI  R30,LOW(0x32)
0000e7 e0a0      	LDI  R26,HIGH(0x32)
0000e8 07fa      	CPC  R31,R26
0000e9 f411      	BRNE _0x200000A
0000ea e012      	LDI  R17,LOW(2)
0000eb c107      	RJMP _0x2000007
                 _0x200000A:
0000ec 33e3      	CPI  R30,LOW(0x33)
0000ed e0a0      	LDI  R26,HIGH(0x33)
0000ee 07fa      	CPC  R31,R26
0000ef f411      	BRNE _0x200000B
0000f0 e013      	LDI  R17,LOW(3)
0000f1 c101      	RJMP _0x2000007
                 _0x200000B:
0000f2 33e4      	CPI  R30,LOW(0x34)
0000f3 e0a0      	LDI  R26,HIGH(0x34)
0000f4 07fa      	CPC  R31,R26
0000f5 f411      	BRNE _0x200000C
0000f6 e014      	LDI  R17,LOW(4)
0000f7 c0fb      	RJMP _0x2000007
                 _0x200000C:
0000f8 33e5      	CPI  R30,LOW(0x35)
0000f9 e0a0      	LDI  R26,HIGH(0x35)
0000fa 07fa      	CPC  R31,R26
0000fb f411      	BRNE _0x200000D
0000fc e015      	LDI  R17,LOW(5)
0000fd c0f5      	RJMP _0x2000007
                 _0x200000D:
0000fe 33e6      	CPI  R30,LOW(0x36)
0000ff e0a0      	LDI  R26,HIGH(0x36)
000100 07fa      	CPC  R31,R26
000101 f411      	BRNE _0x200000E
000102 e016      	LDI  R17,LOW(6)
000103 c0ef      	RJMP _0x2000007
                 _0x200000E:
000104 33e7      	CPI  R30,LOW(0x37)
000105 e0a0      	LDI  R26,HIGH(0x37)
000106 07fa      	CPC  R31,R26
000107 f411      	BRNE _0x200000F
000108 e017      	LDI  R17,LOW(7)
000109 c0e9      	RJMP _0x2000007
                 _0x200000F:
00010a 33e8      	CPI  R30,LOW(0x38)
00010b e0a0      	LDI  R26,HIGH(0x38)
00010c 07fa      	CPC  R31,R26
00010d f411      	BRNE _0x2000010
00010e e018      	LDI  R17,LOW(8)
00010f c0e3      	RJMP _0x2000007
                 _0x2000010:
000110 33e9      	CPI  R30,LOW(0x39)
000111 e0a0      	LDI  R26,HIGH(0x39)
000112 07fa      	CPC  R31,R26
000113 f411      	BRNE _0x2000011
000114 e019      	LDI  R17,LOW(9)
000115 c0dd      	RJMP _0x2000007
                 _0x2000011:
000116 34e1      	CPI  R30,LOW(0x41)
000117 e0a0      	LDI  R26,HIGH(0x41)
000118 07fa      	CPC  R31,R26
000119 f411      	BRNE _0x2000012
00011a e01a      	LDI  R17,LOW(10)
00011b c0d7      	RJMP _0x2000007
                 _0x2000012:
00011c 36e1      	CPI  R30,LOW(0x61)
00011d e0a0      	LDI  R26,HIGH(0x61)
00011e 07fa      	CPC  R31,R26
00011f f411      	BRNE _0x2000013
000120 e212      	LDI  R17,LOW(34)
000121 c0d1      	RJMP _0x2000007
                 _0x2000013:
000122 34e2      	CPI  R30,LOW(0x42)
000123 e0a0      	LDI  R26,HIGH(0x42)
000124 07fa      	CPC  R31,R26
000125 f411      	BRNE _0x2000014
000126 e01b      	LDI  R17,LOW(11)
000127 c0cb      	RJMP _0x2000007
                 _0x2000014:
000128 36e2      	CPI  R30,LOW(0x62)
000129 e0a0      	LDI  R26,HIGH(0x62)
00012a 07fa      	CPC  R31,R26
00012b f411      	BRNE _0x2000015
00012c e01b      	LDI  R17,LOW(11)
00012d c0c5      	RJMP _0x2000007
                 _0x2000015:
00012e 34e3      	CPI  R30,LOW(0x43)
00012f e0a0      	LDI  R26,HIGH(0x43)
000130 07fa      	CPC  R31,R26
000131 f411      	BRNE _0x2000016
000132 e01c      	LDI  R17,LOW(12)
000133 c0bf      	RJMP _0x2000007
                 _0x2000016:
000134 36e3      	CPI  R30,LOW(0x63)
000135 e0a0      	LDI  R26,HIGH(0x63)
000136 07fa      	CPC  R31,R26
000137 f411      	BRNE _0x2000017
000138 e214      	LDI  R17,LOW(36)
000139 c0b9      	RJMP _0x2000007
                 _0x2000017:
00013a 34e4      	CPI  R30,LOW(0x44)
00013b e0a0      	LDI  R26,HIGH(0x44)
00013c 07fa      	CPC  R31,R26
00013d f411      	BRNE _0x2000018
00013e e01d      	LDI  R17,LOW(13)
00013f c0b3      	RJMP _0x2000007
                 _0x2000018:
000140 36e4      	CPI  R30,LOW(0x64)
000141 e0a0      	LDI  R26,HIGH(0x64)
000142 07fa      	CPC  R31,R26
000143 f411      	BRNE _0x2000019
000144 e01d      	LDI  R17,LOW(13)
000145 c0ad      	RJMP _0x2000007
                 _0x2000019:
000146 34e5      	CPI  R30,LOW(0x45)
000147 e0a0      	LDI  R26,HIGH(0x45)
000148 07fa      	CPC  R31,R26
000149 f411      	BRNE _0x200001A
00014a e01e      	LDI  R17,LOW(14)
00014b c0a7      	RJMP _0x2000007
                 _0x200001A:
00014c 34e6      	CPI  R30,LOW(0x46)
00014d e0a0      	LDI  R26,HIGH(0x46)
00014e 07fa      	CPC  R31,R26
00014f f411      	BRNE _0x200001B
000150 e01f      	LDI  R17,LOW(15)
000151 c0a1      	RJMP _0x2000007
                 _0x200001B:
000152 34e7      	CPI  R30,LOW(0x47)
000153 e0a0      	LDI  R26,HIGH(0x47)
000154 07fa      	CPC  R31,R26
000155 f411      	BRNE _0x200001C
000156 e110      	LDI  R17,LOW(16)
000157 c09b      	RJMP _0x2000007
                 _0x200001C:
000158 34e8      	CPI  R30,LOW(0x48)
000159 e0a0      	LDI  R26,HIGH(0x48)
00015a 07fa      	CPC  R31,R26
00015b f411      	BRNE _0x200001D
00015c e111      	LDI  R17,LOW(17)
00015d c095      	RJMP _0x2000007
                 _0x200001D:
00015e 34e9      	CPI  R30,LOW(0x49)
00015f e0a0      	LDI  R26,HIGH(0x49)
000160 07fa      	CPC  R31,R26
000161 f411      	BRNE _0x200001E
000162 e112      	LDI  R17,LOW(18)
000163 c08f      	RJMP _0x2000007
                 _0x200001E:
000164 34ea      	CPI  R30,LOW(0x4A)
000165 e0a0      	LDI  R26,HIGH(0x4A)
000166 07fa      	CPC  R31,R26
000167 f411      	BRNE _0x200001F
000168 e113      	LDI  R17,LOW(19)
000169 c089      	RJMP _0x2000007
                 _0x200001F:
00016a 34ec      	CPI  R30,LOW(0x4C)
00016b e0a0      	LDI  R26,HIGH(0x4C)
00016c 07fa      	CPC  R31,R26
00016d f411      	BRNE _0x2000020
00016e e114      	LDI  R17,LOW(20)
00016f c083      	RJMP _0x2000007
                 _0x2000020:
000170 35e5      	CPI  R30,LOW(0x55)
000171 e0a0      	LDI  R26,HIGH(0x55)
000172 07fa      	CPC  R31,R26
000173 f411      	BRNE _0x2000021
000174 e11b      	LDI  R17,LOW(27)
000175 c07d      	RJMP _0x2000007
                 _0x2000021:
000176 35e3      	CPI  R30,LOW(0x53)
000177 e0a0      	LDI  R26,HIGH(0x53)
000178 07fa      	CPC  R31,R26
000179 f411      	BRNE _0x2000022
00017a e015      	LDI  R17,LOW(5)
00017b c077      	RJMP _0x2000007
                 _0x2000022:
00017c 37e9      	CPI  R30,LOW(0x79)
00017d e0a0      	LDI  R26,HIGH(0x79)
00017e 07fa      	CPC  R31,R26
00017f f411      	BRNE _0x2000023
000180 e215      	LDI  R17,LOW(37)
000181 c071      	RJMP _0x2000007
                 _0x2000023:
000182 35e9      	CPI  R30,LOW(0x59)
000183 e0a0      	LDI  R26,HIGH(0x59)
000184 07fa      	CPC  R31,R26
000185 f411      	BRNE _0x2000024
000186 e215      	LDI  R17,LOW(37)
000187 c06b      	RJMP _0x2000007
                 _0x2000024:
000188 36ee      	CPI  R30,LOW(0x6E)
000189 e0a0      	LDI  R26,HIGH(0x6E)
00018a 07fa      	CPC  R31,R26
00018b f411      	BRNE _0x2000025
00018c e115      	LDI  R17,LOW(21)
00018d c065      	RJMP _0x2000007
                 _0x2000025:
00018e 34ef      	CPI  R30,LOW(0x4F)
00018f e0a0      	LDI  R26,HIGH(0x4F)
000190 07fa      	CPC  R31,R26
000191 f411      	BRNE _0x2000026
000192 e010      	LDI  R17,LOW(0)
000193 c05f      	RJMP _0x2000007
                 _0x2000026:
000194 36ef      	CPI  R30,LOW(0x6F)
000195 e0a0      	LDI  R26,HIGH(0x6F)
000196 07fa      	CPC  R31,R26
000197 f411      	BRNE _0x2000027
000198 e116      	LDI  R17,LOW(22)
000199 c059      	RJMP _0x2000007
                 _0x2000027:
00019a 37e0      	CPI  R30,LOW(0x70)
00019b e0a0      	LDI  R26,HIGH(0x70)
00019c 07fa      	CPC  R31,R26
00019d f411      	BRNE _0x2000028
00019e e117      	LDI  R17,LOW(23)
00019f c053      	RJMP _0x2000007
                 _0x2000028:
0001a0 37e1      	CPI  R30,LOW(0x71)
0001a1 e0a0      	LDI  R26,HIGH(0x71)
0001a2 07fa      	CPC  R31,R26
0001a3 f411      	BRNE _0x2000029
0001a4 e213      	LDI  R17,LOW(35)
0001a5 c04d      	RJMP _0x2000007
                 _0x2000029:
0001a6 37e2      	CPI  R30,LOW(0x72)
0001a7 e0a0      	LDI  R26,HIGH(0x72)
0001a8 07fa      	CPC  R31,R26
0001a9 f411      	BRNE _0x200002A
0001aa e118      	LDI  R17,LOW(24)
0001ab c047      	RJMP _0x2000007
                 _0x200002A:
0001ac 37e4      	CPI  R30,LOW(0x74)
0001ad e0a0      	LDI  R26,HIGH(0x74)
0001ae 07fa      	CPC  R31,R26
0001af f411      	BRNE _0x200002B
0001b0 e11a      	LDI  R17,LOW(26)
0001b1 c041      	RJMP _0x2000007
                 _0x200002B:
0001b2 37e5      	CPI  R30,LOW(0x75)
0001b3 e0a0      	LDI  R26,HIGH(0x75)
0001b4 07fa      	CPC  R31,R26
0001b5 f411      	BRNE _0x200002C
0001b6 e119      	LDI  R17,LOW(25)
0001b7 c03b      	RJMP _0x2000007
                 _0x200002C:
0001b8 36e5      	CPI  R30,LOW(0x65)
0001b9 e0a0      	LDI  R26,HIGH(0x65)
0001ba 07fa      	CPC  R31,R26
0001bb f411      	BRNE _0x200002D
0001bc e211      	LDI  R17,LOW(33)
0001bd c035      	RJMP _0x2000007
                 _0x200002D:
0001be 32e0      	CPI  R30,LOW(0x20)
0001bf e0a0      	LDI  R26,HIGH(0x20)
0001c0 07fa      	CPC  R31,R26
0001c1 f181      	BREQ _0x2000050
0001c2 32ed      	CPI  R30,LOW(0x2D)
0001c3 e0a0      	LDI  R26,HIGH(0x2D)
0001c4 07fa      	CPC  R31,R26
0001c5 f411      	BRNE _0x200002F
0001c6 e11d      	LDI  R17,LOW(29)
0001c7 c02b      	RJMP _0x2000007
                 _0x200002F:
0001c8 35ef      	CPI  R30,LOW(0x5F)
0001c9 e0a0      	LDI  R26,HIGH(0x5F)
0001ca 07fa      	CPC  R31,R26
0001cb f411      	BRNE _0x2000030
0001cc e11e      	LDI  R17,LOW(30)
0001cd c025      	RJMP _0x2000007
                 _0x2000030:
0001ce 35ed      	CPI  R30,LOW(0x5D)
0001cf e0a0      	LDI  R26,HIGH(0x5D)
0001d0 07fa      	CPC  R31,R26
0001d1 f411      	BRNE _0x2000031
0001d2 e11f      	LDI  R17,LOW(31)
0001d3 c01f      	RJMP _0x2000007
                 _0x2000031:
0001d4 35eb      	CPI  R30,LOW(0x5B)
0001d5 e0a0      	LDI  R26,HIGH(0x5B)
0001d6 07fa      	CPC  R31,R26
0001d7 f411      	BRNE _0x2000032
0001d8 e210      	LDI  R17,LOW(32)
0001d9 c019      	RJMP _0x2000007
                 _0x2000032:
0001da 32ea      	CPI  R30,LOW(0x2A)
0001db e0a0      	LDI  R26,HIGH(0x2A)
0001dc 07fa      	CPC  R31,R26
0001dd f411      	BRNE _0x2000033
0001de e216      	LDI  R17,LOW(38)
0001df c013      	RJMP _0x2000007
                 _0x2000033:
0001e0 36ec      	CPI  R30,LOW(0x6C)
0001e1 e0a0      	LDI  R26,HIGH(0x6C)
0001e2 07fa      	CPC  R31,R26
0001e3 f411      	BRNE _0x2000034
0001e4 e217      	LDI  R17,LOW(39)
0001e5 c00d      	RJMP _0x2000007
                 _0x2000034:
0001e6 36e8      	CPI  R30,LOW(0x68)
0001e7 e0a0      	LDI  R26,HIGH(0x68)
0001e8 07fa      	CPC  R31,R26
0001e9 f411      	BRNE _0x2000035
0001ea e218      	LDI  R17,LOW(40)
0001eb c007      	RJMP _0x2000007
                 _0x2000035:
0001ec 36e9      	CPI  R30,LOW(0x69)
0001ed e0a0      	LDI  R26,HIGH(0x69)
0001ee 07fa      	CPC  R31,R26
0001ef f411      	BRNE _0x2000037
0001f0 e219      	LDI  R17,LOW(41)
0001f1 c001      	RJMP _0x2000007
                 _0x2000037:
                 _0x2000050:
0001f2 e11c      	LDI  R17,LOW(28)
                 _0x2000007:
0001f3 2fe1      	MOV  R30,R17
0001f4 c0b8      	RJMP _0x2040001
                 ; .FEND
                 _tm1637_init:
                 ; .FSTART _tm1637_init
0001f5 931a      	ST   -Y,R17
0001f6 91e0 0168 	LDS  R30,__brightness
0001f8 70e7      	ANDI R30,LOW(0x7)
0001f9 2f1e      	MOV  R17,R30
0001fa 3010      	CPI  R17,0
0001fb f009      	BREQ _0x2000038
0001fc 6018      	ORI  R17,LOW(8)
                 _0x2000038:
0001fd 5810      	SUBI R17,-LOW(128)
0001fe 9ad0      	 SBI __tm1637_port-1,__clk_bit 
0001ff 9ad1      	 SBI __tm1637_port-1,__dio_bit 
000200 e0e0      	LDI  R30,LOW(0)
000201 93ea      	ST   -Y,R30
000202 93ea      	ST   -Y,R30
000203 93ea      	ST   -Y,R30
000204 e0a0      	LDI  R26,LOW(0)
000205 d00d      	RCALL _tm1637_display_all
000206 d071      	RCALL _I2CStart
000207 2fa1      	MOV  R26,R17
000208 d08c      	RCALL _I2CWrByte
000209 d07d      	RCALL _I2CStop
00020a 9119      	LD   R17,Y+
00020b 9508      	RET
                 ; .FEND
                 _tm1637_point:
                 ; .FSTART _tm1637_point
00020c 93aa      	ST   -Y,R26
00020d 81e8      	LD   R30,Y
00020e 70e1      	ANDI R30,LOW(0x1)
00020f 93e0 0165 	STS  __point,R30
000211 9621      	ADIW R28,1
000212 9508      	RET
                 ; .FEND
                 _tm1637_display_all:
                 ; .FSTART _tm1637_display_all
000213 93aa      	ST   -Y,R26
000214 81eb      	LDD  R30,Y+3
000215 940e 02bf 	CALL SUBOPT_0x2
000217 820b      	STD  Y+3,R0
000218 81ea      	LDD  R30,Y+2
000219 940e 02bf 	CALL SUBOPT_0x2
00021b 820a      	STD  Y+2,R0
00021c 81e9      	LDD  R30,Y+1
00021d 940e 02bf 	CALL SUBOPT_0x2
00021f 8209      	STD  Y+1,R0
000220 81e8      	LD   R30,Y
000221 940e 02bf 	CALL SUBOPT_0x2
000223 8208      	ST   Y,R0
000224 91e0 0165 	LDS  R30,__point
000226 30e0      	CPI  R30,0
000227 f019      	BREQ _0x2000039
000228 81ea      	LDD  R30,Y+2
000229 68e0      	ORI  R30,0x80
00022a 83ea      	STD  Y+2,R30
                 _0x2000039:
00022b d04c      	RCALL _I2CStart
00022c e4a0      	LDI  R26,LOW(64)
00022d 940e 02c4 	CALL SUBOPT_0x3
00022f d057      	RCALL _I2CStop
000230 d047      	RCALL _I2CStart
000231 eca0      	LDI  R26,LOW(192)
000232 940e 02c4 	CALL SUBOPT_0x3
000234 81ab      	LDD  R26,Y+3
000235 940e 02c4 	CALL SUBOPT_0x3
000237 81aa      	LDD  R26,Y+2
000238 940e 02c4 	CALL SUBOPT_0x3
00023a 81a9      	LDD  R26,Y+1
00023b 940e 02c4 	CALL SUBOPT_0x3
00023d 81a8      	LD   R26,Y
00023e 940e 02c4 	CALL SUBOPT_0x3
000240 d046      	RCALL _I2CStop
000241 9624      	ADIW R28,4
000242 9508      	RET
                 ; .FEND
                 _tm1637_puts:
                 ; .FSTART _tm1637_puts
000243 940e 02c8 	CALL SUBOPT_0x4
                 _0x2000040:
000245 3015      	CPI  R17,5
000246 f480      	BRSH _0x2000041
000247 940e 02cf 	CALL SUBOPT_0x5
000249 93ff      	PUSH R31
00024a 93ef      	PUSH R30
00024b 81ad      	LDD  R26,Y+5
00024c 81be      	LDD  R27,Y+5+1
00024d 27ee      	CLR  R30
00024e 0fa1      	ADD  R26,R17
00024f 1fbe      	ADC  R27,R30
000250 91ac      	LD   R26,X
000251 de84      	RCALL _Tm1637_table_str
000252 91af      	POP  R26
000253 91bf      	POP  R27
000254 93ec      	ST   X,R30
000255 5f1f      	SUBI R17,-1
000256 cfee      	RJMP _0x2000040
                 _0x2000041:
000257 c015      	RJMP _0x2040002
                 ; .FEND
                 _tm1637_putsf:
                 ; .FSTART _tm1637_putsf
000258 940e 02c8 	CALL SUBOPT_0x4
                 _0x2000043:
00025a 3015      	CPI  R17,5
00025b f488      	BRSH _0x2000044
00025c 940e 02cf 	CALL SUBOPT_0x5
00025e 93ff      	PUSH R31
00025f 93ef      	PUSH R30
000260 2fe1      	MOV  R30,R17
000261 81ad      	LDD  R26,Y+5
000262 81be      	LDD  R27,Y+5+1
000263 e0f0      	LDI  R31,0
000264 0fea      	ADD  R30,R26
000265 1ffb      	ADC  R31,R27
000266 91a4      	LPM  R26,Z
000267 de6e      	RCALL _Tm1637_table_str
000268 91af      	POP  R26
000269 91bf      	POP  R27
00026a 93ec      	ST   X,R30
00026b 5f1f      	SUBI R17,-1
00026c cfed      	RJMP _0x2000043
                 _0x2000044:
                 _0x2040002:
00026d 81e9      	LDD  R30,Y+1
00026e 93ea      	ST   -Y,R30
00026f 81eb      	LDD  R30,Y+3
000270 93ea      	ST   -Y,R30
000271 81ed      	LDD  R30,Y+5
000272 93ea      	ST   -Y,R30
000273 81af      	LDD  R26,Y+7
000274 df9e      	RCALL _tm1637_display_all
000275 8118      	LDD  R17,Y+0
000276 9627      	ADIW R28,7
000277 9508      	RET
                 ; .FEND
                 _I2CStart:
                 ; .FSTART _I2CStart
000278 9ad8      	 SBI __tm1637_port,__clk_bit 
000279 9ad9      	 SBI __tm1637_port,__dio_bit 
                +
00027a e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00027b 958a     +DEC R24
00027c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00027d 98d9      	 CBI __tm1637_port,__dio_bit 
00027e 9508      	RET
                 ; .FEND
                 _I2Cack:
                 ; .FSTART _I2Cack
00027f 98d8      	 CBI __tm1637_port,__clk_bit 
000280 98d9      	 CBI __tm1637_port,__dio_bit 
000281 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
000282 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000283 958a     +DEC R24
000284 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000285 98d8      	 CBI __tm1637_port,__clk_bit 
000286 9508      	RET
                 ; .FEND
                 _I2CStop:
                 ; .FSTART _I2CStop
000287 98d8      	 CBI __tm1637_port,__clk_bit 
                +
000288 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000289 958a     +DEC R24
00028a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00028b 98d9      	 CBI __tm1637_port,__dio_bit 
                +
00028c e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00028d 958a     +DEC R24
00028e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00028f 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
000290 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000291 958a     +DEC R24
000292 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000293 9ad9      	 SBI __tm1637_port,__dio_bit 
000294 9508      	RET
                 ; .FEND
                 _I2CWrByte:
                 ; .FSTART _I2CWrByte
000295 93aa      	ST   -Y,R26
000296 931a      	ST   -Y,R17
000297 e010      	LDI  R17,LOW(0)
                 _0x200004C:
000298 3018      	CPI  R17,8
000299 f498      	BRSH _0x200004D
00029a 98d8      	 CBI __tm1637_port,__clk_bit 
00029b 81e9      	LDD  R30,Y+1
00029c 70e1      	ANDI R30,LOW(0x1)
00029d f011      	BREQ _0x200004E
00029e 9ad9      	 SBI __tm1637_port,__dio_bit 
00029f c001      	RJMP _0x200004F
                 _0x200004E:
0002a0 98d9      	 CBI __tm1637_port,__dio_bit 
                 _0x200004F:
                +
0002a1 e088     +LDI R24 , LOW ( 8 )
                +__DELAY_USB_LOOP :
0002a2 958a     +DEC R24
0002a3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 8
0002a4 81e9      	LDD  R30,Y+1
0002a5 95e6      	LSR  R30
0002a6 83e9      	STD  Y+1,R30
0002a7 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
0002a8 e088     +LDI R24 , LOW ( 8 )
                +__DELAY_USB_LOOP :
0002a9 958a     +DEC R24
0002aa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 8
0002ab 5f1f      	SUBI R17,-1
0002ac cfeb      	RJMP _0x200004C
                 _0x200004D:
                 _0x2040001:
0002ad 8118      	LDD  R17,Y+0
0002ae 9622      	ADIW R28,2
0002af 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 __point:
000165           	.BYTE 0x1
                 __scrolldelay:
000166           	.BYTE 0x2
                 __brightness:
000168           	.BYTE 0x1
                 _s2:
000169           	.BYTE 0x5
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002b0 2da9      	MOV  R26,R9
0002b1 e0b0      	LDI  R27,0
0002b2 fda7      	SBRC R26,7
0002b3 efbf      	SER  R27
0002b4 e0ea      	LDI  R30,LOW(10)
0002b5 e0f0      	LDI  R31,HIGH(10)
0002b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
0002b7 93ea      	ST   -Y,R30
0002b8 2da6      	MOV  R26,R6
0002b9 e0b0      	LDI  R27,0
0002ba fda7      	SBRC R26,7
0002bb efbf      	SER  R27
0002bc e0ea      	LDI  R30,LOW(10)
0002bd e0f0      	LDI  R31,HIGH(10)
0002be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0002bf e0f0      	LDI  R31,0
0002c0 5aec      	SUBI R30,LOW(-_Table_7s*2)
0002c1 4fff      	SBCI R31,HIGH(-_Table_7s*2)
0002c2 9004      	LPM  R0,Z
0002c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
0002c4 940e 0295 	CALL _I2CWrByte
0002c6 940c 027f 	JMP  _I2Cack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0002c8 93ba      	ST   -Y,R27
0002c9 93aa      	ST   -Y,R26
0002ca 9724      	SBIW R28,4
0002cb 931a      	ST   -Y,R17
0002cc e010      	LDI  R17,0
0002cd e010      	LDI  R17,LOW(0)
0002ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0002cf 2fe1      	MOV  R30,R17
0002d0 e0f0      	LDI  R31,0
0002d1 01de      	MOVW R26,R28
0002d2 9611      	ADIW R26,1
0002d3 0fea      	ADD  R30,R26
0002d4 1ffb      	ADC  R31,R27
0002d5 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGW1:
0002d6 95f1      	NEG  R31
0002d7 95e1      	NEG  R30
0002d8 40f0      	SBCI R31,0
0002d9 9508      	RET
                 
                 __DIVW21U:
0002da 2400      	CLR  R0
0002db 2411      	CLR  R1
0002dc e190      	LDI  R25,16
                 __DIVW21U1:
0002dd 0faa      	LSL  R26
0002de 1fbb      	ROL  R27
0002df 1c00      	ROL  R0
0002e0 1c11      	ROL  R1
0002e1 1a0e      	SUB  R0,R30
0002e2 0a1f      	SBC  R1,R31
0002e3 f418      	BRCC __DIVW21U2
0002e4 0e0e      	ADD  R0,R30
0002e5 1e1f      	ADC  R1,R31
0002e6 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0002e7 60a1      	SBR  R26,1
                 __DIVW21U3:
0002e8 959a      	DEC  R25
0002e9 f799      	BRNE __DIVW21U1
0002ea 01fd      	MOVW R30,R26
0002eb 01d0      	MOVW R26,R0
0002ec 9508      	RET
                 
                 __DIVW21:
0002ed d012      	RCALL __CHKSIGNW
0002ee dfeb      	RCALL __DIVW21U
0002ef f40e      	BRTC __DIVW211
0002f0 dfe5      	RCALL __ANEGW1
                 __DIVW211:
0002f1 9508      	RET
                 
                 __MODW21:
0002f2 94e8      	CLT
0002f3 ffb7      	SBRS R27,7
0002f4 c004      	RJMP __MODW211
0002f5 95a0      	COM  R26
0002f6 95b0      	COM  R27
0002f7 9611      	ADIW R26,1
0002f8 9468      	SET
                 __MODW211:
0002f9 fdf7      	SBRC R31,7
0002fa dfdb      	RCALL __ANEGW1
0002fb dfde      	RCALL __DIVW21U
0002fc 01fd      	MOVW R30,R26
0002fd f40e      	BRTC __MODW212
0002fe dfd7      	RCALL __ANEGW1
                 __MODW212:
0002ff 9508      	RET
                 
                 __CHKSIGNW:
000300 94e8      	CLT
000301 fff7      	SBRS R31,7
000302 c002      	RJMP __CHKSW1
000303 dfd2      	RCALL __ANEGW1
000304 9468      	SET
                 __CHKSW1:
000305 ffb7      	SBRS R27,7
000306 c006      	RJMP __CHKSW2
000307 95a0      	COM  R26
000308 95b0      	COM  R27
000309 9611      	ADIW R26,1
00030a f800      	BLD  R0,0
00030b 9403      	INC  R0
00030c fa00      	BST  R0,0
                 __CHKSW2:
00030d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  17 r1 :   5 r2 :   0 r3 :   0 r4 :   2 r5 :   3 r6 :   4 r7 :   3 
r8 :   0 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  72 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   4 r26: 142 r27:  23 r28:   7 r29:   1 r30: 136 r31:  67 
x  :   6 y  :  52 z  :   9 
Registers used: 20 out of 35 (57.1%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   4 
adiw  :   7 and   :   0 andi  :   3 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  57 brpl  :   0 brsh  :   3 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  23 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   5 
cp    :   3 cpc   :  47 cpi   :  52 cpse  :   0 dec   :   9 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   4 jmp   :  23 ld    :   7 ldd   :  20 ldi   : 148 
lds   :   2 lpm   :  11 lsl   :   1 lsr   :   1 mov   :   9 movw  :   7 
mul   :   0 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   2 out   :  12 pop   :   4 push  :   4 rcall :  25 ret   :  18 
reti  :   1 rjmp  :  60 rol   :   3 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   9 sbic  :   0 sbis  :   0 sbiw  :   4 sbr   :   1 sbrc  :   3 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   2 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  26 std   :   5 sts   :   1 sub   :   1 subi  :   5 swap  :   0 
tst   :   2 wdr   :   0 
Instructions used: 60 out of 116 (51.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00061c   1464    100   1564   16384   9.5%
[.dseg] 0x000060 0x00016e      0     14     14    1024   1.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
