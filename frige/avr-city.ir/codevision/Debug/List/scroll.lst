
AVRASM ver. 2.1.30  C:\Users\Hossein\Desktop\avr-city.ir\codevision\Debug\List\scroll.asm Fri Jun 07 01:19:49 2019

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0056 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _Table_7s:
00002a 063f
00002b 4f5b
00002c 6d66
00002d 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
00002e 6f7f
00002f 7c77
000030 5e39
000031 7179      	.DB  0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71
000032 763d
000033 0e30
000034 5438
000035 735c      	.DB  0x3D,0x76,0x30,0xE,0x38,0x54,0x5C,0x73
000036 1c50
000037 3e78
000038 4000
000039 0f08      	.DB  0x50,0x1C,0x78,0x3E,0x0,0x40,0x8,0xF
00003a 7b39
00003b 675f
00003c 6e58
00003d 3063      	.DB  0x39,0x7B,0x5F,0x67,0x58,0x6E,0x63,0x30
00003e 1074      	.DB  0x74,0x10
                 
                 _0x0:
00003f 2020
000040 2020
000041 2d2d
000042 2d2d      	.DB  0x20,0x20,0x20,0x20,0x2D,0x2D,0x2D,0x2D
000043 4548
000044 4c4c
000045 2d4f
000046 2d2d      	.DB  0x48,0x45,0x4C,0x4C,0x4F,0x2D,0x2D,0x2D
000047 202d
000048 2020
000049 0020      	.DB  0x2D,0x20,0x20,0x20,0x20,0x0
                 _0x2000003:
00004a 012c      	.DB  0x2C,0x1
                 _0x2000004:
C:\Users\Hossein\Desktop\avr-city.ir\codevision\Debug\List\scroll.asm(1131): warning: .cseg .db misalignment - padding zero byte
00004b 0007      	.DB  0x7
                 
                 __GLOBAL_INI_TBL:
00004c 0016      	.DW  0x16
00004d 0160      	.DW  _0x6
00004e 007e      	.DW  _0x0*2
                 
00004f 0002      	.DW  0x02
000050 0177      	.DW  __scrolldelay
000051 0094      	.DW  _0x2000003*2
                 
000052 0001      	.DW  0x01
000053 0179      	.DW  __brightness
000054 0096      	.DW  _0x2000004*2
                 
                 _0xFFFFFFFF:
000055 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000056 94f8      	CLI
000057 27ee      	CLR  R30
000058 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000059 e0f1      	LDI  R31,1
00005a bffb      	OUT  GICR,R31
00005b bfeb      	OUT  GICR,R30
00005c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005d e08d      	LDI  R24,(14-2)+1
00005e e0a2      	LDI  R26,2
00005f 27bb      	CLR  R27
                 __CLEAR_REG:
000060 93ed      	ST   X+,R30
000061 958a      	DEC  R24
000062 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000063 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000064 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000065 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000066 93ed      	ST   X+,R30
000067 9701      	SBIW R24,1
000068 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000069 e9e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006b 9185      	LPM  R24,Z+
00006c 9195      	LPM  R25,Z+
00006d 9700      	SBIW R24,0
00006e f061      	BREQ __GLOBAL_INI_END
00006f 91a5      	LPM  R26,Z+
000070 91b5      	LPM  R27,Z+
000071 9005      	LPM  R0,Z+
000072 9015      	LPM  R1,Z+
000073 01bf      	MOVW R22,R30
000074 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000075 9005      	LPM  R0,Z+
000076 920d      	ST   X+,R0
000077 9701      	SBIW R24,1
000078 f7e1      	BRNE __GLOBAL_INI_LOOP
000079 01fb      	MOVW R30,R22
00007a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007c bfed      	OUT  SPL,R30
00007d e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000080 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000081 940c 0083 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <tm1637.h>
                 ;
                 ;//PORTD=0x12;
                 ;//PORTC=0x15;
                 ;//PORTB=0x18;
                 ;//PORTA=0x1b;
                 ;
                 ;#asm
                  .equ __tm1637_port=0X1b; //PORTA
                  .equ __clk_bit=0;
                  .equ __dio_bit=1;
                 ; 0000 000D #endasm
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0011 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0012 tm1637_init();
000083 d127      	RCALL _tm1637_init
                 ; 0000 0013 tm1637_scrolldelay(400);
000084 e9a0      	LDI  R26,LOW(400)
000085 e0b1      	LDI  R27,HIGH(400)
000086 d13b      	RCALL _tm1637_scrolldelay
                 ; 0000 0014 
                 ; 0000 0015 while (1)
                 _0x3:
                 ; 0000 0016       {
                 ; 0000 0017       tm1637_scroll("    ----HELLO----    ");
                +
000087 e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000088 e0b1     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000089 d171      	RCALL _tm1637_scroll
                 ; 0000 0018       }
00008a cffc      	RJMP _0x3
                 ; 0000 0019 }
                 _0x7:
00008b cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x16
                 
                 	.DSEG
                 
                 	.CSEG
                 _Tm1637_table_str:
                 ; .FSTART _Tm1637_table_str
00008c 93aa      	ST   -Y,R26
00008d 931a      	ST   -Y,R17
00008e 81e9      	LDD  R30,Y+1
00008f e0f0      	LDI  R31,0
000090 33e0      	CPI  R30,LOW(0x30)
000091 e0a0      	LDI  R26,HIGH(0x30)
000092 07fa      	CPC  R31,R26
000093 f411      	BRNE _0x2000008
000094 e010      	LDI  R17,LOW(0)
000095 c113      	RJMP _0x2000007
                 _0x2000008:
000096 33e1      	CPI  R30,LOW(0x31)
000097 e0a0      	LDI  R26,HIGH(0x31)
000098 07fa      	CPC  R31,R26
000099 f411      	BRNE _0x2000009
00009a e011      	LDI  R17,LOW(1)
00009b c10d      	RJMP _0x2000007
                 _0x2000009:
00009c 33e2      	CPI  R30,LOW(0x32)
00009d e0a0      	LDI  R26,HIGH(0x32)
00009e 07fa      	CPC  R31,R26
00009f f411      	BRNE _0x200000A
0000a0 e012      	LDI  R17,LOW(2)
0000a1 c107      	RJMP _0x2000007
                 _0x200000A:
0000a2 33e3      	CPI  R30,LOW(0x33)
0000a3 e0a0      	LDI  R26,HIGH(0x33)
0000a4 07fa      	CPC  R31,R26
0000a5 f411      	BRNE _0x200000B
0000a6 e013      	LDI  R17,LOW(3)
0000a7 c101      	RJMP _0x2000007
                 _0x200000B:
0000a8 33e4      	CPI  R30,LOW(0x34)
0000a9 e0a0      	LDI  R26,HIGH(0x34)
0000aa 07fa      	CPC  R31,R26
0000ab f411      	BRNE _0x200000C
0000ac e014      	LDI  R17,LOW(4)
0000ad c0fb      	RJMP _0x2000007
                 _0x200000C:
0000ae 33e5      	CPI  R30,LOW(0x35)
0000af e0a0      	LDI  R26,HIGH(0x35)
0000b0 07fa      	CPC  R31,R26
0000b1 f411      	BRNE _0x200000D
0000b2 e015      	LDI  R17,LOW(5)
0000b3 c0f5      	RJMP _0x2000007
                 _0x200000D:
0000b4 33e6      	CPI  R30,LOW(0x36)
0000b5 e0a0      	LDI  R26,HIGH(0x36)
0000b6 07fa      	CPC  R31,R26
0000b7 f411      	BRNE _0x200000E
0000b8 e016      	LDI  R17,LOW(6)
0000b9 c0ef      	RJMP _0x2000007
                 _0x200000E:
0000ba 33e7      	CPI  R30,LOW(0x37)
0000bb e0a0      	LDI  R26,HIGH(0x37)
0000bc 07fa      	CPC  R31,R26
0000bd f411      	BRNE _0x200000F
0000be e017      	LDI  R17,LOW(7)
0000bf c0e9      	RJMP _0x2000007
                 _0x200000F:
0000c0 33e8      	CPI  R30,LOW(0x38)
0000c1 e0a0      	LDI  R26,HIGH(0x38)
0000c2 07fa      	CPC  R31,R26
0000c3 f411      	BRNE _0x2000010
0000c4 e018      	LDI  R17,LOW(8)
0000c5 c0e3      	RJMP _0x2000007
                 _0x2000010:
0000c6 33e9      	CPI  R30,LOW(0x39)
0000c7 e0a0      	LDI  R26,HIGH(0x39)
0000c8 07fa      	CPC  R31,R26
0000c9 f411      	BRNE _0x2000011
0000ca e019      	LDI  R17,LOW(9)
0000cb c0dd      	RJMP _0x2000007
                 _0x2000011:
0000cc 34e1      	CPI  R30,LOW(0x41)
0000cd e0a0      	LDI  R26,HIGH(0x41)
0000ce 07fa      	CPC  R31,R26
0000cf f411      	BRNE _0x2000012
0000d0 e01a      	LDI  R17,LOW(10)
0000d1 c0d7      	RJMP _0x2000007
                 _0x2000012:
0000d2 36e1      	CPI  R30,LOW(0x61)
0000d3 e0a0      	LDI  R26,HIGH(0x61)
0000d4 07fa      	CPC  R31,R26
0000d5 f411      	BRNE _0x2000013
0000d6 e212      	LDI  R17,LOW(34)
0000d7 c0d1      	RJMP _0x2000007
                 _0x2000013:
0000d8 34e2      	CPI  R30,LOW(0x42)
0000d9 e0a0      	LDI  R26,HIGH(0x42)
0000da 07fa      	CPC  R31,R26
0000db f411      	BRNE _0x2000014
0000dc e01b      	LDI  R17,LOW(11)
0000dd c0cb      	RJMP _0x2000007
                 _0x2000014:
0000de 36e2      	CPI  R30,LOW(0x62)
0000df e0a0      	LDI  R26,HIGH(0x62)
0000e0 07fa      	CPC  R31,R26
0000e1 f411      	BRNE _0x2000015
0000e2 e01b      	LDI  R17,LOW(11)
0000e3 c0c5      	RJMP _0x2000007
                 _0x2000015:
0000e4 34e3      	CPI  R30,LOW(0x43)
0000e5 e0a0      	LDI  R26,HIGH(0x43)
0000e6 07fa      	CPC  R31,R26
0000e7 f411      	BRNE _0x2000016
0000e8 e01c      	LDI  R17,LOW(12)
0000e9 c0bf      	RJMP _0x2000007
                 _0x2000016:
0000ea 36e3      	CPI  R30,LOW(0x63)
0000eb e0a0      	LDI  R26,HIGH(0x63)
0000ec 07fa      	CPC  R31,R26
0000ed f411      	BRNE _0x2000017
0000ee e214      	LDI  R17,LOW(36)
0000ef c0b9      	RJMP _0x2000007
                 _0x2000017:
0000f0 34e4      	CPI  R30,LOW(0x44)
0000f1 e0a0      	LDI  R26,HIGH(0x44)
0000f2 07fa      	CPC  R31,R26
0000f3 f411      	BRNE _0x2000018
0000f4 e01d      	LDI  R17,LOW(13)
0000f5 c0b3      	RJMP _0x2000007
                 _0x2000018:
0000f6 36e4      	CPI  R30,LOW(0x64)
0000f7 e0a0      	LDI  R26,HIGH(0x64)
0000f8 07fa      	CPC  R31,R26
0000f9 f411      	BRNE _0x2000019
0000fa e01d      	LDI  R17,LOW(13)
0000fb c0ad      	RJMP _0x2000007
                 _0x2000019:
0000fc 34e5      	CPI  R30,LOW(0x45)
0000fd e0a0      	LDI  R26,HIGH(0x45)
0000fe 07fa      	CPC  R31,R26
0000ff f411      	BRNE _0x200001A
000100 e01e      	LDI  R17,LOW(14)
000101 c0a7      	RJMP _0x2000007
                 _0x200001A:
000102 34e6      	CPI  R30,LOW(0x46)
000103 e0a0      	LDI  R26,HIGH(0x46)
000104 07fa      	CPC  R31,R26
000105 f411      	BRNE _0x200001B
000106 e01f      	LDI  R17,LOW(15)
000107 c0a1      	RJMP _0x2000007
                 _0x200001B:
000108 34e7      	CPI  R30,LOW(0x47)
000109 e0a0      	LDI  R26,HIGH(0x47)
00010a 07fa      	CPC  R31,R26
00010b f411      	BRNE _0x200001C
00010c e110      	LDI  R17,LOW(16)
00010d c09b      	RJMP _0x2000007
                 _0x200001C:
00010e 34e8      	CPI  R30,LOW(0x48)
00010f e0a0      	LDI  R26,HIGH(0x48)
000110 07fa      	CPC  R31,R26
000111 f411      	BRNE _0x200001D
000112 e111      	LDI  R17,LOW(17)
000113 c095      	RJMP _0x2000007
                 _0x200001D:
000114 34e9      	CPI  R30,LOW(0x49)
000115 e0a0      	LDI  R26,HIGH(0x49)
000116 07fa      	CPC  R31,R26
000117 f411      	BRNE _0x200001E
000118 e112      	LDI  R17,LOW(18)
000119 c08f      	RJMP _0x2000007
                 _0x200001E:
00011a 34ea      	CPI  R30,LOW(0x4A)
00011b e0a0      	LDI  R26,HIGH(0x4A)
00011c 07fa      	CPC  R31,R26
00011d f411      	BRNE _0x200001F
00011e e113      	LDI  R17,LOW(19)
00011f c089      	RJMP _0x2000007
                 _0x200001F:
000120 34ec      	CPI  R30,LOW(0x4C)
000121 e0a0      	LDI  R26,HIGH(0x4C)
000122 07fa      	CPC  R31,R26
000123 f411      	BRNE _0x2000020
000124 e114      	LDI  R17,LOW(20)
000125 c083      	RJMP _0x2000007
                 _0x2000020:
000126 35e5      	CPI  R30,LOW(0x55)
000127 e0a0      	LDI  R26,HIGH(0x55)
000128 07fa      	CPC  R31,R26
000129 f411      	BRNE _0x2000021
00012a e11b      	LDI  R17,LOW(27)
00012b c07d      	RJMP _0x2000007
                 _0x2000021:
00012c 35e3      	CPI  R30,LOW(0x53)
00012d e0a0      	LDI  R26,HIGH(0x53)
00012e 07fa      	CPC  R31,R26
00012f f411      	BRNE _0x2000022
000130 e015      	LDI  R17,LOW(5)
000131 c077      	RJMP _0x2000007
                 _0x2000022:
000132 37e9      	CPI  R30,LOW(0x79)
000133 e0a0      	LDI  R26,HIGH(0x79)
000134 07fa      	CPC  R31,R26
000135 f411      	BRNE _0x2000023
000136 e215      	LDI  R17,LOW(37)
000137 c071      	RJMP _0x2000007
                 _0x2000023:
000138 35e9      	CPI  R30,LOW(0x59)
000139 e0a0      	LDI  R26,HIGH(0x59)
00013a 07fa      	CPC  R31,R26
00013b f411      	BRNE _0x2000024
00013c e215      	LDI  R17,LOW(37)
00013d c06b      	RJMP _0x2000007
                 _0x2000024:
00013e 36ee      	CPI  R30,LOW(0x6E)
00013f e0a0      	LDI  R26,HIGH(0x6E)
000140 07fa      	CPC  R31,R26
000141 f411      	BRNE _0x2000025
000142 e115      	LDI  R17,LOW(21)
000143 c065      	RJMP _0x2000007
                 _0x2000025:
000144 34ef      	CPI  R30,LOW(0x4F)
000145 e0a0      	LDI  R26,HIGH(0x4F)
000146 07fa      	CPC  R31,R26
000147 f411      	BRNE _0x2000026
000148 e010      	LDI  R17,LOW(0)
000149 c05f      	RJMP _0x2000007
                 _0x2000026:
00014a 36ef      	CPI  R30,LOW(0x6F)
00014b e0a0      	LDI  R26,HIGH(0x6F)
00014c 07fa      	CPC  R31,R26
00014d f411      	BRNE _0x2000027
00014e e116      	LDI  R17,LOW(22)
00014f c059      	RJMP _0x2000007
                 _0x2000027:
000150 37e0      	CPI  R30,LOW(0x70)
000151 e0a0      	LDI  R26,HIGH(0x70)
000152 07fa      	CPC  R31,R26
000153 f411      	BRNE _0x2000028
000154 e117      	LDI  R17,LOW(23)
000155 c053      	RJMP _0x2000007
                 _0x2000028:
000156 37e1      	CPI  R30,LOW(0x71)
000157 e0a0      	LDI  R26,HIGH(0x71)
000158 07fa      	CPC  R31,R26
000159 f411      	BRNE _0x2000029
00015a e213      	LDI  R17,LOW(35)
00015b c04d      	RJMP _0x2000007
                 _0x2000029:
00015c 37e2      	CPI  R30,LOW(0x72)
00015d e0a0      	LDI  R26,HIGH(0x72)
00015e 07fa      	CPC  R31,R26
00015f f411      	BRNE _0x200002A
000160 e118      	LDI  R17,LOW(24)
000161 c047      	RJMP _0x2000007
                 _0x200002A:
000162 37e4      	CPI  R30,LOW(0x74)
000163 e0a0      	LDI  R26,HIGH(0x74)
000164 07fa      	CPC  R31,R26
000165 f411      	BRNE _0x200002B
000166 e11a      	LDI  R17,LOW(26)
000167 c041      	RJMP _0x2000007
                 _0x200002B:
000168 37e5      	CPI  R30,LOW(0x75)
000169 e0a0      	LDI  R26,HIGH(0x75)
00016a 07fa      	CPC  R31,R26
00016b f411      	BRNE _0x200002C
00016c e119      	LDI  R17,LOW(25)
00016d c03b      	RJMP _0x2000007
                 _0x200002C:
00016e 36e5      	CPI  R30,LOW(0x65)
00016f e0a0      	LDI  R26,HIGH(0x65)
000170 07fa      	CPC  R31,R26
000171 f411      	BRNE _0x200002D
000172 e211      	LDI  R17,LOW(33)
000173 c035      	RJMP _0x2000007
                 _0x200002D:
000174 32e0      	CPI  R30,LOW(0x20)
000175 e0a0      	LDI  R26,HIGH(0x20)
000176 07fa      	CPC  R31,R26
000177 f181      	BREQ _0x2000050
000178 32ed      	CPI  R30,LOW(0x2D)
000179 e0a0      	LDI  R26,HIGH(0x2D)
00017a 07fa      	CPC  R31,R26
00017b f411      	BRNE _0x200002F
00017c e11d      	LDI  R17,LOW(29)
00017d c02b      	RJMP _0x2000007
                 _0x200002F:
00017e 35ef      	CPI  R30,LOW(0x5F)
00017f e0a0      	LDI  R26,HIGH(0x5F)
000180 07fa      	CPC  R31,R26
000181 f411      	BRNE _0x2000030
000182 e11e      	LDI  R17,LOW(30)
000183 c025      	RJMP _0x2000007
                 _0x2000030:
000184 35ed      	CPI  R30,LOW(0x5D)
000185 e0a0      	LDI  R26,HIGH(0x5D)
000186 07fa      	CPC  R31,R26
000187 f411      	BRNE _0x2000031
000188 e11f      	LDI  R17,LOW(31)
000189 c01f      	RJMP _0x2000007
                 _0x2000031:
00018a 35eb      	CPI  R30,LOW(0x5B)
00018b e0a0      	LDI  R26,HIGH(0x5B)
00018c 07fa      	CPC  R31,R26
00018d f411      	BRNE _0x2000032
00018e e210      	LDI  R17,LOW(32)
00018f c019      	RJMP _0x2000007
                 _0x2000032:
000190 32ea      	CPI  R30,LOW(0x2A)
000191 e0a0      	LDI  R26,HIGH(0x2A)
000192 07fa      	CPC  R31,R26
000193 f411      	BRNE _0x2000033
000194 e216      	LDI  R17,LOW(38)
000195 c013      	RJMP _0x2000007
                 _0x2000033:
000196 36ec      	CPI  R30,LOW(0x6C)
000197 e0a0      	LDI  R26,HIGH(0x6C)
000198 07fa      	CPC  R31,R26
000199 f411      	BRNE _0x2000034
00019a e217      	LDI  R17,LOW(39)
00019b c00d      	RJMP _0x2000007
                 _0x2000034:
00019c 36e8      	CPI  R30,LOW(0x68)
00019d e0a0      	LDI  R26,HIGH(0x68)
00019e 07fa      	CPC  R31,R26
00019f f411      	BRNE _0x2000035
0001a0 e218      	LDI  R17,LOW(40)
0001a1 c007      	RJMP _0x2000007
                 _0x2000035:
0001a2 36e9      	CPI  R30,LOW(0x69)
0001a3 e0a0      	LDI  R26,HIGH(0x69)
0001a4 07fa      	CPC  R31,R26
0001a5 f411      	BRNE _0x2000037
0001a6 e219      	LDI  R17,LOW(41)
0001a7 c001      	RJMP _0x2000007
                 _0x2000037:
                 _0x2000050:
0001a8 e11c      	LDI  R17,LOW(28)
                 _0x2000007:
0001a9 2fe1      	MOV  R30,R17
0001aa c0c6      	RJMP _0x2040002
                 ; .FEND
                 _tm1637_init:
                 ; .FSTART _tm1637_init
0001ab 931a      	ST   -Y,R17
0001ac 91e0 0179 	LDS  R30,__brightness
0001ae 70e7      	ANDI R30,LOW(0x7)
0001af 2f1e      	MOV  R17,R30
0001b0 3010      	CPI  R17,0
0001b1 f009      	BREQ _0x2000038
0001b2 6018      	ORI  R17,LOW(8)
                 _0x2000038:
0001b3 5810      	SUBI R17,-LOW(128)
0001b4 9ad0      	 SBI __tm1637_port-1,__clk_bit 
0001b5 9ad1      	 SBI __tm1637_port-1,__dio_bit 
0001b6 e0e0      	LDI  R30,LOW(0)
0001b7 93ea      	ST   -Y,R30
0001b8 93ea      	ST   -Y,R30
0001b9 93ea      	ST   -Y,R30
0001ba e0a0      	LDI  R26,LOW(0)
0001bb d00f      	RCALL _tm1637_display_all
0001bc d07f      	RCALL _I2CStart
0001bd 2fa1      	MOV  R26,R17
0001be d09a      	RCALL _I2CWrByte
0001bf d08b      	RCALL _I2CStop
0001c0 9119      	LD   R17,Y+
0001c1 9508      	RET
                 ; .FEND
                 _tm1637_scrolldelay:
                 ; .FSTART _tm1637_scrolldelay
0001c2 93ba      	ST   -Y,R27
0001c3 93aa      	ST   -Y,R26
0001c4 81e8      	LD   R30,Y
0001c5 81f9      	LDD  R31,Y+1
0001c6 93e0 0177 	STS  __scrolldelay,R30
0001c8 93f0 0178 	STS  __scrolldelay+1,R31
0001ca c0a7      	RJMP _0x2040001
                 ; .FEND
                 _tm1637_display_all:
                 ; .FSTART _tm1637_display_all
0001cb 93aa      	ST   -Y,R26
0001cc 81eb      	LDD  R30,Y+3
0001cd 940e 0280 	CALL SUBOPT_0x0
0001cf 820b      	STD  Y+3,R0
0001d0 81ea      	LDD  R30,Y+2
0001d1 940e 0280 	CALL SUBOPT_0x0
0001d3 820a      	STD  Y+2,R0
0001d4 81e9      	LDD  R30,Y+1
0001d5 940e 0280 	CALL SUBOPT_0x0
0001d7 8209      	STD  Y+1,R0
0001d8 81e8      	LD   R30,Y
0001d9 940e 0280 	CALL SUBOPT_0x0
0001db 8208      	ST   Y,R0
0001dc 91e0 0176 	LDS  R30,__point
0001de 30e0      	CPI  R30,0
0001df f019      	BREQ _0x2000039
0001e0 81ea      	LDD  R30,Y+2
0001e1 68e0      	ORI  R30,0x80
0001e2 83ea      	STD  Y+2,R30
                 _0x2000039:
0001e3 d058      	RCALL _I2CStart
0001e4 e4a0      	LDI  R26,LOW(64)
0001e5 940e 0285 	CALL SUBOPT_0x1
0001e7 d063      	RCALL _I2CStop
0001e8 d053      	RCALL _I2CStart
0001e9 eca0      	LDI  R26,LOW(192)
0001ea 940e 0285 	CALL SUBOPT_0x1
0001ec 81ab      	LDD  R26,Y+3
0001ed 940e 0285 	CALL SUBOPT_0x1
0001ef 81aa      	LDD  R26,Y+2
0001f0 940e 0285 	CALL SUBOPT_0x1
0001f2 81a9      	LDD  R26,Y+1
0001f3 940e 0285 	CALL SUBOPT_0x1
0001f5 81a8      	LD   R26,Y
0001f6 940e 0285 	CALL SUBOPT_0x1
0001f8 d052      	RCALL _I2CStop
0001f9 9624      	ADIW R28,4
0001fa 9508      	RET
                 ; .FEND
                 _tm1637_scroll:
                 ; .FSTART _tm1637_scroll
0001fb 93ba      	ST   -Y,R27
0001fc 93aa      	ST   -Y,R26
0001fd 9724      	SBIW R28,4
0001fe 931a      	ST   -Y,R17
0001ff 930a      	ST   -Y,R16
000200 e010      	LDI  R17,0
000201 e000      	LDI  R16,0
000202 e010      	LDI  R17,LOW(0)
                 _0x2000046:
000203 81ae      	LDD  R26,Y+6
000204 81bf      	LDD  R27,Y+6+1
000205 940e 0274 	CALL _strlen
000207 2fa1      	MOV  R26,R17
000208 e0b0      	LDI  R27,0
000209 17ea      	CP   R30,R26
00020a 07fb      	CPC  R31,R27
00020b f160      	BRLO _0x2000047
00020c e000      	LDI  R16,LOW(0)
                 _0x2000049:
00020d 3004      	CPI  R16,4
00020e f4c8      	BRSH _0x200004A
00020f 2fe0      	MOV  R30,R16
000210 e0f0      	LDI  R31,0
000211 01de      	MOVW R26,R28
000212 9612      	ADIW R26,2
000213 0fea      	ADD  R30,R26
000214 1ffb      	ADC  R31,R27
000215 93ff      	PUSH R31
000216 93ef      	PUSH R30
000217 2fa0      	MOV  R26,R16
000218 27bb      	CLR  R27
000219 2fe1      	MOV  R30,R17
00021a e0f0      	LDI  R31,0
00021b 0fea      	ADD  R30,R26
00021c 1ffb      	ADC  R31,R27
00021d 81ae      	LDD  R26,Y+6
00021e 81bf      	LDD  R27,Y+6+1
00021f 0fae      	ADD  R26,R30
000220 1fbf      	ADC  R27,R31
000221 91ac      	LD   R26,X
000222 de69      	RCALL _Tm1637_table_str
000223 91af      	POP  R26
000224 91bf      	POP  R27
000225 93ec      	ST   X,R30
000226 5f0f      	SUBI R16,-1
000227 cfe5      	RJMP _0x2000049
                 _0x200004A:
000228 81ea      	LDD  R30,Y+2
000229 93ea      	ST   -Y,R30
00022a 81ec      	LDD  R30,Y+4
00022b 93ea      	ST   -Y,R30
00022c 81ee      	LDD  R30,Y+6
00022d 93ea      	ST   -Y,R30
00022e 85a8      	LDD  R26,Y+8
00022f df9b      	RCALL _tm1637_display_all
000230 91a0 0177 	LDS  R26,__scrolldelay
000232 91b0 0178 	LDS  R27,__scrolldelay+1
000234 940e 0289 	CALL _delay_ms
000236 5f1f      	SUBI R17,-1
000237 cfcb      	RJMP _0x2000046
                 _0x2000047:
000238 8119      	LDD  R17,Y+1
000239 8108      	LDD  R16,Y+0
00023a 9628      	ADIW R28,8
00023b 9508      	RET
                 ; .FEND
                 _I2CStart:
                 ; .FSTART _I2CStart
00023c 9ad8      	 SBI __tm1637_port,__clk_bit 
00023d 9ad9      	 SBI __tm1637_port,__dio_bit 
                +
00023e e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00023f 958a     +DEC R24
000240 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000241 98d9      	 CBI __tm1637_port,__dio_bit 
000242 9508      	RET
                 ; .FEND
                 _I2Cack:
                 ; .FSTART _I2Cack
000243 98d8      	 CBI __tm1637_port,__clk_bit 
000244 98d9      	 CBI __tm1637_port,__dio_bit 
000245 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
000246 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000247 958a     +DEC R24
000248 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000249 98d8      	 CBI __tm1637_port,__clk_bit 
00024a 9508      	RET
                 ; .FEND
                 _I2CStop:
                 ; .FSTART _I2CStop
00024b 98d8      	 CBI __tm1637_port,__clk_bit 
                +
00024c e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00024d 958a     +DEC R24
00024e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00024f 98d9      	 CBI __tm1637_port,__dio_bit 
                +
000250 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000251 958a     +DEC R24
000252 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000253 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
000254 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000255 958a     +DEC R24
000256 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000257 9ad9      	 SBI __tm1637_port,__dio_bit 
000258 9508      	RET
                 ; .FEND
                 _I2CWrByte:
                 ; .FSTART _I2CWrByte
000259 93aa      	ST   -Y,R26
00025a 931a      	ST   -Y,R17
00025b e010      	LDI  R17,LOW(0)
                 _0x200004C:
00025c 3018      	CPI  R17,8
00025d f498      	BRSH _0x200004D
00025e 98d8      	 CBI __tm1637_port,__clk_bit 
00025f 81e9      	LDD  R30,Y+1
000260 70e1      	ANDI R30,LOW(0x1)
000261 f011      	BREQ _0x200004E
000262 9ad9      	 SBI __tm1637_port,__dio_bit 
000263 c001      	RJMP _0x200004F
                 _0x200004E:
000264 98d9      	 CBI __tm1637_port,__dio_bit 
                 _0x200004F:
                +
000265 e088     +LDI R24 , LOW ( 8 )
                +__DELAY_USB_LOOP :
000266 958a     +DEC R24
000267 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 8
000268 81e9      	LDD  R30,Y+1
000269 95e6      	LSR  R30
00026a 83e9      	STD  Y+1,R30
00026b 9ad8      	 SBI __tm1637_port,__clk_bit 
                +
00026c e088     +LDI R24 , LOW ( 8 )
                +__DELAY_USB_LOOP :
00026d 958a     +DEC R24
00026e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 8
00026f 5f1f      	SUBI R17,-1
000270 cfeb      	RJMP _0x200004C
                 _0x200004D:
                 _0x2040002:
000271 8118      	LDD  R17,Y+0
                 _0x2040001:
000272 9622      	ADIW R28,2
000273 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000274 93ba      	ST   -Y,R27
000275 93aa      	ST   -Y,R26
000276 91a9          ld   r26,y+
000277 91b9          ld   r27,y+
000278 27ee          clr  r30
000279 27ff          clr  r31
                 strlen0:
00027a 916d          ld   r22,x+
00027b 2366          tst  r22
00027c f011          breq strlen1
00027d 9631          adiw r30,1
00027e cffb          rjmp strlen0
                 strlen1:
00027f 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __point:
000176           	.BYTE 0x1
                 __scrolldelay:
000177           	.BYTE 0x2
                 __brightness:
000179           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000280 e0f0      	LDI  R31,0
000281 5aec      	SUBI R30,LOW(-_Table_7s*2)
000282 4fff      	SBCI R31,HIGH(-_Table_7s*2)
000283 9004      	LPM  R0,Z
000284 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000285 940e 0259 	CALL _I2CWrByte
000287 940c 0243 	JMP  _I2Cack
                 
                 
                 	.CSEG
                 _delay_ms:
000289 9610      	adiw r26,0
00028a f039      	breq __delay_ms1
                 __delay_ms0:
00028b 95a8      	wdr
                +
00028c ed80     +LDI R24 , LOW ( 0x7D0 )
00028d e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00028e 9701     +SBIW R24 , 1
00028f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000290 9711      	sbiw r26,1
000291 f7c9      	brne __delay_ms0
                 __delay_ms1:
000292 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   9 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  68 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   0 
r24:  23 r25:   3 r26: 130 r27:  18 r28:   6 r29:   1 r30: 103 r31:  63 
x  :   6 y  :  54 z  :   8 
Registers used: 16 out of 35 (45.7%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   3 
adiw  :   6 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  58 brpl  :   0 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  13 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   5 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :  48 cpi   :  51 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  23 ld    :   8 ldd   :  22 ldi   : 133 
lds   :   4 lpm   :   9 lsl   :   0 lsr   :   1 mov   :   7 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   2 out   :   6 pop   :   2 push  :   2 rcall :  13 ret   :  10 
reti  :   0 rjmp  :  56 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :   9 sbic  :   0 sbis  :   0 sbiw  :   6 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  25 std   :   5 sts   :   2 sub   :   0 subi  :   5 swap  :   0 
tst   :   1 wdr   :   1 
Instructions used: 41 out of 116 (35.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000526   1230     88   1318   16384   8.0%
[.dseg] 0x000060 0x00017a      0     26     26    1024   2.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 1 warnings
