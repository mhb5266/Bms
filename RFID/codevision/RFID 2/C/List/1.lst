
AVRASM ver. 2.1.30  C:\Users\Mahdi\Desktop\RFID 2\C\List\1.asm Sun Aug 02 14:26:58 2015

C:\Users\Mahdi\Desktop\RFID 2\C\List\1.asm(1051): warning: Register r5 already defined by the .DEF directive
C:\Users\Mahdi\Desktop\RFID 2\C\List\1.asm(1052): warning: Register r4 already defined by the .DEF directive
C:\Users\Mahdi\Desktop\RFID 2\C\List\1.asm(1053): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 006a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000033 3030
000034 3030
000035 3030
000036 3030      	.DB  0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30
000037 3030      	.DB  0x30,0x30
                 _0x4:
000038 3030
000039 3130
00003a 3533
00003b 3534      	.DB  0x30,0x30,0x30,0x31,0x33,0x35,0x34,0x35
00003c 3839      	.DB  0x39,0x38
                 _0x5:
00003d 3030
00003e 3130
00003f 3531
000040 3137      	.DB  0x30,0x30,0x30,0x31,0x31,0x35,0x37,0x31
000041 3638      	.DB  0x38,0x36
                 _0x0:
000042 4143
000043 5452
000044 3120
000045 4300      	.DB  0x43,0x41,0x52,0x54,0x20,0x31,0x0,0x43
000046 5241
000047 2054
000048 0032
000049 4e20      	.DB  0x41,0x52,0x54,0x20,0x32,0x0,0x20,0x4E
00004a 746f
00004b 4320
00004c 7261
00004d 2064      	.DB  0x6F,0x74,0x20,0x43,0x61,0x72,0x64,0x20
00004e 6544
00004f 6966
000050 656e
000051 2164      	.DB  0x44,0x65,0x66,0x69,0x6E,0x65,0x64,0x21
C:\Users\Mahdi\Desktop\RFID 2\C\List\1.asm(1101): warning: .cseg .db misalignment - padding zero byte
000052 0000      	.DB  0x0
                 _0x2020003:
000053 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000054 000a      	.DW  0x0A
000055 0181      	.DW  _str
000056 0066      	.DW  _0x3*2
                 
000057 000a      	.DW  0x0A
000058 018b      	.DW  _card1
000059 0070      	.DW  _0x4*2
                 
00005a 000a      	.DW  0x0A
00005b 0195      	.DW  _card2
00005c 007a      	.DW  _0x5*2
                 
00005d 0007      	.DW  0x07
00005e 0160      	.DW  _0xC
00005f 0084      	.DW  _0x0*2
                 
000060 0007      	.DW  0x07
000061 0167      	.DW  _0xC+7
000062 008b      	.DW  _0x0*2+7
                 
000063 0013      	.DW  0x13
000064 016e      	.DW  _0xC+14
000065 0092      	.DW  _0x0*2+14
                 
000066 0002      	.DW  0x02
000067 019f      	.DW  __base_y_G101
000068 00a6      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000069 0000      	.DW  0
                 
                 __RESET:
00006a 94f8      	CLI
00006b 27ee      	CLR  R30
00006c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006d e0f1      	LDI  R31,1
00006e bffb      	OUT  GICR,R31
00006f bfeb      	OUT  GICR,R30
000070 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000071 e1f8      	LDI  R31,0x18
000072 bdf1      	OUT  WDTCR,R31
000073 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000074 e08d      	LDI  R24,(14-2)+1
000075 e0a2      	LDI  R26,2
000076 27bb      	CLR  R27
                 __CLEAR_REG:
000077 93ed      	ST   X+,R30
000078 958a      	DEC  R24
000079 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007a e080      	LDI  R24,LOW(0x400)
00007b e094      	LDI  R25,HIGH(0x400)
00007c e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
00007d 93ed      	ST   X+,R30
00007e 9701      	SBIW R24,1
00007f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000080 eae8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000081 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000082 9185      	LPM  R24,Z+
000083 9195      	LPM  R25,Z+
000084 9700      	SBIW R24,0
000085 f061      	BREQ __GLOBAL_INI_END
000086 91a5      	LPM  R26,Z+
000087 91b5      	LPM  R27,Z+
000088 9005      	LPM  R0,Z+
000089 9015      	LPM  R1,Z+
00008a 01bf      	MOVW R22,R30
00008b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008c 9005      	LPM  R0,Z+
00008d 920d      	ST   X+,R0
00008e 9701      	SBIW R24,1
00008f f7e1      	BRNE __GLOBAL_INI_LOOP
000090 01fb      	MOVW R30,R22
000091 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
000092 e5ef      	LDI  R30,LOW(0x45F)
000093 bfed      	OUT  SPL,R30
000094 e0e4      	LDI  R30,HIGH(0x45F)
000095 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000096 e6c0      	LDI  R28,LOW(0x160)
000097 e0d1      	LDI  R29,HIGH(0x160)
                 
000098 940c 009a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 ;#asm
                    .equ __lcd_port=0x1B  //PORTA
                 ; 0000 0007 #endasm
                 ;
                 ;
                 ;char str[]={'0','0','0','0','0','0','0','0','0','0'};
                 
                 	.DSEG
                 ;
                 ;char card1[]={'0','0','0','1','3','5','4','5','9','8'};
                 ;char card2[]={'0','0','0','1','1','5','7','1','8','6'};
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0011 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0012     UCSRA=0x00;
00009a e0e0      	LDI  R30,LOW(0)
00009b b9eb      	OUT  0xB,R30
                 ; 0000 0013     UCSRB=0x10;
00009c e1e0      	LDI  R30,LOW(16)
00009d b9ea      	OUT  0xA,R30
                 ; 0000 0014     UCSRC=0x86;
00009e e8e6      	LDI  R30,LOW(134)
00009f bde0      	OUT  0x20,R30
                 ; 0000 0015     UBRRH=0x00;
0000a0 e0e0      	LDI  R30,LOW(0)
0000a1 bde0      	OUT  0x20,R30
                 ; 0000 0016     UBRRL=51;
0000a2 e3e3      	LDI  R30,LOW(51)
0000a3 b9e9      	OUT  0x9,R30
                 ; 0000 0017 
                 ; 0000 0018     lcd_init(20);
0000a4 e1e4      	LDI  R30,LOW(20)
0000a5 93ea      	ST   -Y,R30
0000a6 940e 01fe 	CALL _lcd_init
                 ; 0000 0019 
                 ; 0000 001A 
                 ; 0000 001B     while (1)
                 _0x6:
                 ; 0000 001C     {
                 ; 0000 001D         UCSRB=0x90;
0000a8 e9e0      	LDI  R30,LOW(144)
0000a9 b9ea      	OUT  0xA,R30
                 ; 0000 001E         gets(str,10);
0000aa e8e1      	LDI  R30,LOW(_str)
0000ab e0f1      	LDI  R31,HIGH(_str)
0000ac 93fa      	ST   -Y,R31
0000ad 93ea      	ST   -Y,R30
0000ae e0ea      	LDI  R30,LOW(10)
0000af e0f0      	LDI  R31,HIGH(10)
0000b0 93fa      	ST   -Y,R31
0000b1 93ea      	ST   -Y,R30
0000b2 940e 0134 	CALL _gets
                 ; 0000 001F         UCSRB=0x00;
0000b4 e0e0      	LDI  R30,LOW(0)
0000b5 b9ea      	OUT  0xA,R30
                 ; 0000 0020 
                 ; 0000 0021 
                 ; 0000 0022         lcd_clear();
0000b6 940e 01b0 	CALL _lcd_clear
                 ; 0000 0023         lcd_puts(str);
0000b8 e8e1      	LDI  R30,LOW(_str)
0000b9 e0f1      	LDI  R31,HIGH(_str)
0000ba 940e 0232 	CALL SUBOPT_0x0
                 ; 0000 0024 
                 ; 0000 0025         if      (str[9]==card1[9] && str[8]==card1[8] && str[7]==card1[7] && str[6]==card1[6] && str[5]==card1[5] && str[4]==card1[4] && str[3]==card1[3]){lcd_gotoxy(5,1);lcd_puts("CART 1");delay_ms(1000);}
                +
0000bc 91a0 018a+LDS R26 , _str + ( 9 )
                 	__GETB2MN _str,9
                +
0000be 91e0 0194+LDS R30 , _card1 + ( 9 )
                 	__GETB1MN _card1,9
0000c0 17ea      	CP   R30,R26
0000c1 f521      	BRNE _0xA
                +
0000c2 91a0 0189+LDS R26 , _str + ( 8 )
                 	__GETB2MN _str,8
                +
0000c4 91e0 0193+LDS R30 , _card1 + ( 8 )
                 	__GETB1MN _card1,8
0000c6 17ea      	CP   R30,R26
0000c7 f4f1      	BRNE _0xA
                +
0000c8 91a0 0188+LDS R26 , _str + ( 7 )
                 	__GETB2MN _str,7
                +
0000ca 91e0 0192+LDS R30 , _card1 + ( 7 )
                 	__GETB1MN _card1,7
0000cc 17ea      	CP   R30,R26
0000cd f4c1      	BRNE _0xA
                +
0000ce 91a0 0187+LDS R26 , _str + ( 6 )
                 	__GETB2MN _str,6
                +
0000d0 91e0 0191+LDS R30 , _card1 + ( 6 )
                 	__GETB1MN _card1,6
0000d2 17ea      	CP   R30,R26
0000d3 f491      	BRNE _0xA
                +
0000d4 91a0 0186+LDS R26 , _str + ( 5 )
                 	__GETB2MN _str,5
                +
0000d6 91e0 0190+LDS R30 , _card1 + ( 5 )
                 	__GETB1MN _card1,5
0000d8 17ea      	CP   R30,R26
0000d9 f461      	BRNE _0xA
                +
0000da 91a0 0185+LDS R26 , _str + ( 4 )
                 	__GETB2MN _str,4
                +
0000dc 91e0 018f+LDS R30 , _card1 + ( 4 )
                 	__GETB1MN _card1,4
0000de 17ea      	CP   R30,R26
0000df f431      	BRNE _0xA
                +
0000e0 91a0 0184+LDS R26 , _str + ( 3 )
                 	__GETB2MN _str,3
                +
0000e2 91e0 018e+LDS R30 , _card1 + ( 3 )
                 	__GETB1MN _card1,3
0000e4 17ea      	CP   R30,R26
0000e5 f009      	BREQ _0xB
                 _0xA:
0000e6 c009      	RJMP _0x9
                 _0xB:
0000e7 940e 0236 	CALL SUBOPT_0x1
                +
0000e9 e6e0     +LDI R30 , LOW ( _0xC + ( 0 ) )
0000ea e0f1     +LDI R31 , HIGH ( _0xC + ( 0 ) )
                 	__POINTW1MN _0xC,0
0000eb 940e 0232 	CALL SUBOPT_0x0
0000ed 940e 023c 	CALL SUBOPT_0x2
                 ; 0000 0026         else if (str[9]==card2[9] && str[8]==card2[8] && str[7]==card2[7] && str[6]==card2[6] && str[5]==card2[5] && str[4]==card2[4] && str[3]==card2[3]){lcd_gotoxy(5,1);lcd_puts("CART 2");delay_ms(1000);}
0000ef c03e      	RJMP _0xD
                 _0x9:
                +
0000f0 91a0 018a+LDS R26 , _str + ( 9 )
                 	__GETB2MN _str,9
                +
0000f2 91e0 019e+LDS R30 , _card2 + ( 9 )
                 	__GETB1MN _card2,9
0000f4 17ea      	CP   R30,R26
0000f5 f521      	BRNE _0xF
                +
0000f6 91a0 0189+LDS R26 , _str + ( 8 )
                 	__GETB2MN _str,8
                +
0000f8 91e0 019d+LDS R30 , _card2 + ( 8 )
                 	__GETB1MN _card2,8
0000fa 17ea      	CP   R30,R26
0000fb f4f1      	BRNE _0xF
                +
0000fc 91a0 0188+LDS R26 , _str + ( 7 )
                 	__GETB2MN _str,7
                +
0000fe 91e0 019c+LDS R30 , _card2 + ( 7 )
                 	__GETB1MN _card2,7
000100 17ea      	CP   R30,R26
000101 f4c1      	BRNE _0xF
                +
000102 91a0 0187+LDS R26 , _str + ( 6 )
                 	__GETB2MN _str,6
                +
000104 91e0 019b+LDS R30 , _card2 + ( 6 )
                 	__GETB1MN _card2,6
000106 17ea      	CP   R30,R26
000107 f491      	BRNE _0xF
                +
000108 91a0 0186+LDS R26 , _str + ( 5 )
                 	__GETB2MN _str,5
                +
00010a 91e0 019a+LDS R30 , _card2 + ( 5 )
                 	__GETB1MN _card2,5
00010c 17ea      	CP   R30,R26
00010d f461      	BRNE _0xF
                +
00010e 91a0 0185+LDS R26 , _str + ( 4 )
                 	__GETB2MN _str,4
                +
000110 91e0 0199+LDS R30 , _card2 + ( 4 )
                 	__GETB1MN _card2,4
000112 17ea      	CP   R30,R26
000113 f431      	BRNE _0xF
                +
000114 91a0 0184+LDS R26 , _str + ( 3 )
                 	__GETB2MN _str,3
                +
000116 91e0 0198+LDS R30 , _card2 + ( 3 )
                 	__GETB1MN _card2,3
000118 17ea      	CP   R30,R26
000119 f009      	BREQ _0x10
                 _0xF:
00011a c009      	RJMP _0xE
                 _0x10:
00011b 940e 0236 	CALL SUBOPT_0x1
                +
00011d e6e7     +LDI R30 , LOW ( _0xC + ( 7 ) )
00011e e0f1     +LDI R31 , HIGH ( _0xC + ( 7 ) )
                 	__POINTW1MN _0xC,7
00011f 940e 0232 	CALL SUBOPT_0x0
000121 940e 023c 	CALL SUBOPT_0x2
                 ; 0000 0027         else {lcd_gotoxy(0,1);lcd_puts(" Not Card Defined!");}
000123 c00a      	RJMP _0x11
                 _0xE:
000124 e0e0      	LDI  R30,LOW(0)
000125 93ea      	ST   -Y,R30
000126 e0e1      	LDI  R30,LOW(1)
000127 93ea      	ST   -Y,R30
000128 940e 01a0 	CALL _lcd_gotoxy
                +
00012a e6ee     +LDI R30 , LOW ( _0xC + ( 14 ) )
00012b e0f1     +LDI R31 , HIGH ( _0xC + ( 14 ) )
                 	__POINTW1MN _0xC,14
00012c 940e 0232 	CALL SUBOPT_0x0
                 _0x11:
                 _0xD:
                 ; 0000 0028     }
00012e cf79      	RJMP _0x6
                 ; 0000 0029 }
                 _0x12:
00012f cfff      	RJMP _0x12
                 
                 	.DSEG
                 _0xC:
000160           	.BYTE 0x21
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 getchar0:
000130 9b5f           sbis usr,rxc
000131 cffe           rjmp getchar0
000132 b1ec           in   r30,udr
000133 9508      	RET
                 _gets:
000134 940e 0259 	CALL __SAVELOCR6
                +
000136 810e     +LDD R16 , Y + 6
000137 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
000138 8528     +LDD R18 , Y + 8
000139 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2000009:
00013a 2e00      	MOV  R0,R16
00013b 2a01      	OR   R0,R17
00013c f0d9      	BREQ _0x200000B
                 _0x200000C:
00013d dff2      	RCALL _getchar
00013e 2f5e      	MOV  R21,R30
00013f 3058      	CPI  R21,8
000140 f451      	BRNE _0x200000D
000141 81ae      	LDD  R26,Y+6
000142 81bf      	LDD  R27,Y+6+1
000143 170a      	CP   R16,R26
000144 071b      	CPC  R17,R27
000145 f420      	BRSH _0x200000E
                +
000146 5021     +SUBI R18 , LOW ( 1 )
000147 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
000148 5f0f     +SUBI R16 , LOW ( - 1 )
000149 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x200000E:
00014a cff2      	RJMP _0x200000C
                 _0x200000D:
00014b 305a      	CPI  R21,10
00014c f059      	BREQ _0x200000B
00014d 933f      	PUSH R19
00014e 932f      	PUSH R18
                +
00014f 5f2f     +SUBI R18 , LOW ( - 1 )
000150 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000151 2fe5      	MOV  R30,R21
000152 91af      	POP  R26
000153 91bf      	POP  R27
000154 93ec      	ST   X,R30
                +
000155 5001     +SUBI R16 , LOW ( 1 )
000156 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000157 cfe2      	RJMP _0x2000009
                 _0x200000B:
000158 01d9      	MOVW R26,R18
000159 e0e0      	LDI  R30,LOW(0)
00015a 93ec      	ST   X,R30
00015b 85e8      	LDD  R30,Y+8
00015c 85f9      	LDD  R31,Y+8+1
00015d 940e 0260 	CALL __LOADLOCR6
00015f 962a      	ADIW R28,10
000160 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
000161 e0ff          ldi   r31,15
                 __lcd_delay0:
000162 95fa          dec   r31
000163 f7f1          brne  __lcd_delay0
000164 9508      	RET
                 __lcd_ready:
000165 b3aa          in    r26,__lcd_direction
000166 70af          andi  r26,0xf                 ;set as input
000167 bbaa          out   __lcd_direction,r26
000168 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000169 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
00016a dff6      	RCALL __lcd_delay_G101
00016b 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00016c dff4      	RCALL __lcd_delay_G101
00016d b3a9          in    r26,__lcd_pin
00016e 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00016f dff1      	RCALL __lcd_delay_G101
000170 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
000171 dfef      	RCALL __lcd_delay_G101
000172 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000173 fda7          sbrc  r26,__lcd_busy_flag
000174 cff5          rjmp  __lcd_busy
000175 9508      	RET
                 __lcd_write_nibble_G101:
000176 7fa0          andi  r26,0xf0
000177 2bab          or    r26,r27
000178 bbab          out   __lcd_port,r26          ;write
000179 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00017a 940e 0161 	CALL __lcd_delay_G101
00017c 98da          cbi   __lcd_port,__lcd_enable ;EN=0
00017d 940e 0161 	CALL __lcd_delay_G101
00017f 9508      	RET
                 __lcd_write_data:
000180 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000181 b3aa          in    r26,__lcd_direction
000182 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000183 bbaa          out   __lcd_direction,r26
000184 b3bb          in    r27,__lcd_port
000185 70bf          andi  r27,0xf
000186 81a8          ld    r26,y
000187 dfee      	RCALL __lcd_write_nibble_G101
000188 81a8          ld    r26,y
000189 95a2          swap  r26
00018a dfeb      	RCALL __lcd_write_nibble_G101
00018b 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
00018c 940c 0230 	JMP  _0x2080001
                 __lcd_read_nibble_G101:
00018e 9ada          sbi   __lcd_port,__lcd_enable ;EN=1
00018f 940e 0161 	CALL __lcd_delay_G101
000191 b3e9          in    r30,__lcd_pin           ;read
000192 98da          cbi   __lcd_port,__lcd_enable ;EN=0
000193 940e 0161 	CALL __lcd_delay_G101
000195 7fe0          andi  r30,0xf0
000196 9508      	RET
                 _lcd_read_byte0_G101:
000197 940e 0161 	CALL __lcd_delay_G101
000199 dff4      	RCALL __lcd_read_nibble_G101
00019a 2fae          mov   r26,r30
00019b dff2      	RCALL __lcd_read_nibble_G101
00019c 98d9          cbi   __lcd_port,__lcd_rd     ;RD=0
00019d 95e2          swap  r30
00019e 2bea          or    r30,r26
00019f 9508      	RET
                 _lcd_gotoxy:
0001a0 940e 0165 	CALL __lcd_ready
0001a2 81e8      	LD   R30,Y
0001a3 e0f0      	LDI  R31,0
0001a4 56e1      	SUBI R30,LOW(-__base_y_G101)
0001a5 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0001a6 81e0      	LD   R30,Z
0001a7 81a9      	LDD  R26,Y+1
0001a8 0fea      	ADD  R30,R26
0001a9 93ea      	ST   -Y,R30
0001aa 940e 0180 	CALL __lcd_write_data
0001ac 8059      	LDD  R5,Y+1
0001ad 8048      	LDD  R4,Y+0
0001ae 9622      	ADIW R28,2
0001af 9508      	RET
                 _lcd_clear:
0001b0 940e 0165 	CALL __lcd_ready
0001b2 e0e2      	LDI  R30,LOW(2)
0001b3 93ea      	ST   -Y,R30
0001b4 940e 0180 	CALL __lcd_write_data
0001b6 940e 0165 	CALL __lcd_ready
0001b8 e0ec      	LDI  R30,LOW(12)
0001b9 93ea      	ST   -Y,R30
0001ba 940e 0180 	CALL __lcd_write_data
0001bc 940e 0165 	CALL __lcd_ready
0001be e0e1      	LDI  R30,LOW(1)
0001bf 93ea      	ST   -Y,R30
0001c0 940e 0180 	CALL __lcd_write_data
0001c2 e0e0      	LDI  R30,LOW(0)
0001c3 2e4e      	MOV  R4,R30
0001c4 2e5e      	MOV  R5,R30
0001c5 9508      	RET
                 _lcd_putchar:
0001c6 93ef          push r30
0001c7 93ff          push r31
0001c8 81a8          ld   r26,y
0001c9 9468          set
0001ca 30aa          cpi  r26,10
0001cb f019          breq __lcd_putchar1
0001cc 94e8          clt
0001cd 1457      	CP   R5,R7
0001ce f030      	BRLO _0x2020004
                 	__lcd_putchar1:
0001cf 9443      	INC  R4
0001d0 e0e0      	LDI  R30,LOW(0)
0001d1 93ea      	ST   -Y,R30
0001d2 924a      	ST   -Y,R4
0001d3 dfcc      	RCALL _lcd_gotoxy
0001d4 f036      	brts __lcd_putchar0
                 _0x2020004:
0001d5 9453      	INC  R5
0001d6 df8e          rcall __lcd_ready
0001d7 9ad8          sbi  __lcd_port,__lcd_rs ;RS=1
0001d8 81a8          ld   r26,y
0001d9 93aa          st   -y,r26
0001da dfa5          rcall __lcd_write_data
                 __lcd_putchar0:
0001db 91ff          pop  r31
0001dc 91ef          pop  r30
0001dd 940c 0230 	JMP  _0x2080001
                 _lcd_puts:
0001df 931a      	ST   -Y,R17
                 _0x2020005:
0001e0 81a9      	LDD  R26,Y+1
0001e1 81ba      	LDD  R27,Y+1+1
0001e2 91ed      	LD   R30,X+
0001e3 83a9      	STD  Y+1,R26
0001e4 83ba      	STD  Y+1+1,R27
0001e5 2f1e      	MOV  R17,R30
0001e6 30e0      	CPI  R30,0
0001e7 f019      	BREQ _0x2020007
0001e8 931a      	ST   -Y,R17
0001e9 dfdc      	RCALL _lcd_putchar
0001ea cff5      	RJMP _0x2020005
                 _0x2020007:
0001eb 8118      	LDD  R17,Y+0
0001ec 9623      	ADIW R28,3
0001ed 9508      	RET
                 __long_delay_G101:
0001ee 27aa          clr   r26
0001ef 27bb          clr   r27
                 __long_delay0:
0001f0 9711          sbiw  r26,1         ;2 cycles
0001f1 f7f1          brne  __long_delay0 ;2 cycles
0001f2 9508      	RET
                 __lcd_init_write_G101:
0001f3 98d9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0001f4 b3aa          in    r26,__lcd_direction
0001f5 6fa7          ori   r26,0xf7                ;set as output
0001f6 bbaa          out   __lcd_direction,r26
0001f7 b3bb          in    r27,__lcd_port
0001f8 70bf          andi  r27,0xf
0001f9 81a8          ld    r26,y
0001fa 940e 0176 	CALL __lcd_write_nibble_G101
0001fc 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001fd c032      	RJMP _0x2080001
                 _lcd_init:
0001fe 98da          cbi   __lcd_port,__lcd_enable ;EN=0
0001ff 98d8          cbi   __lcd_port,__lcd_rs     ;RS=0
000200 8078      	LDD  R7,Y+0
000201 81e8      	LD   R30,Y
000202 58e0      	SUBI R30,-LOW(128)
                +
000203 93e0 01a1+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000205 81e8      	LD   R30,Y
000206 54e0      	SUBI R30,-LOW(192)
                +
000207 93e0 01a2+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000209 940e 0242 	CALL SUBOPT_0x3
00020b 940e 0242 	CALL SUBOPT_0x3
00020d 940e 0242 	CALL SUBOPT_0x3
00020f dfde      	RCALL __long_delay_G101
000210 e2e0      	LDI  R30,LOW(32)
000211 93ea      	ST   -Y,R30
000212 dfe0      	RCALL __lcd_init_write_G101
000213 dfda      	RCALL __long_delay_G101
000214 e2e8      	LDI  R30,LOW(40)
000215 940e 0248 	CALL SUBOPT_0x4
000217 e0e4      	LDI  R30,LOW(4)
000218 940e 0248 	CALL SUBOPT_0x4
00021a e8e5      	LDI  R30,LOW(133)
00021b 940e 0248 	CALL SUBOPT_0x4
00021d b3aa          in    r26,__lcd_direction
00021e 70af          andi  r26,0xf                 ;set as input
00021f bbaa          out   __lcd_direction,r26
000220 9ad9          sbi   __lcd_port,__lcd_rd     ;RD=1
000221 940e 0197 	CALL _lcd_read_byte0_G101
000223 30e5      	CPI  R30,LOW(0x5)
000224 f011      	BREQ _0x202000B
000225 e0e0      	LDI  R30,LOW(0)
000226 c009      	RJMP _0x2080001
                 _0x202000B:
000227 940e 0165 	CALL __lcd_ready
000229 e0e6      	LDI  R30,LOW(6)
00022a 93ea      	ST   -Y,R30
00022b 940e 0180 	CALL __lcd_write_data
00022d 940e 01b0 	CALL _lcd_clear
00022f e0e1      	LDI  R30,LOW(1)
                 _0x2080001:
000230 9621      	ADIW R28,1
000231 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _str:
000181           	.BYTE 0xA
                 _card1:
00018b           	.BYTE 0xA
                 _card2:
000195           	.BYTE 0xA
                 __base_y_G101:
00019f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000232 93fa      	ST   -Y,R31
000233 93ea      	ST   -Y,R30
000234 940c 01df 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000236 e0e5      	LDI  R30,LOW(5)
000237 93ea      	ST   -Y,R30
000238 e0e1      	LDI  R30,LOW(1)
000239 93ea      	ST   -Y,R30
00023a 940c 01a0 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00023c eee8      	LDI  R30,LOW(1000)
00023d e0f3      	LDI  R31,HIGH(1000)
00023e 93fa      	ST   -Y,R31
00023f 93ea      	ST   -Y,R30
000240 940c 024d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000242 940e 01ee 	CALL __long_delay_G101
000244 e3e0      	LDI  R30,LOW(48)
000245 93ea      	ST   -Y,R30
000246 940c 01f3 	JMP  __lcd_init_write_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000248 93ea      	ST   -Y,R30
000249 940e 0180 	CALL __lcd_write_data
00024b 940c 01ee 	JMP  __long_delay_G101
                 
                 
                 	.CSEG
                 _delay_ms:
00024d 91e9      	ld   r30,y+
00024e 91f9      	ld   r31,y+
00024f 9630      	adiw r30,0
000250 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000251 ed80     +LDI R24 , LOW ( 0x7D0 )
000252 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000253 9701     +SBIW R24 , 1
000254 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000255 95a8      	wdr
000256 9731      	sbiw r30,1
000257 f7c9      	brne __delay_ms0
                 __delay_ms1:
000258 9508      	ret
                 
                 __SAVELOCR6:
000259 935a      	ST   -Y,R21
                 __SAVELOCR5:
00025a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00025b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00025c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00025d 931a      	ST   -Y,R17
00025e 930a      	ST   -Y,R16
00025f 9508      	RET
                 
                 __LOADLOCR6:
000260 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000261 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000262 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000263 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000264 8119      	LDD  R17,Y+1
000265 8108      	LD   R16,Y
000266 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   6 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:  11 r18:   7 r19:   6 r20:   2 r21:   6 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  68 r27:  13 r28:   5 r29:   1 r30: 133 r31:  24 
x  :   6 y  :  65 z  :   8 
Registers used: 23 out of 35 (65.7%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   5 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   9 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  20 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  40 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   4 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :  16 cpc   :   1 cpi   :   5 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   9 inc   :   2 jmp   :  29 ld    :  13 ldd   :  20 ldi   :  57 
lds   :  28 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   7 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   3 
ori   :   2 out   :  20 pop   :   4 push  :   4 rcall :  16 ret   :  15 
reti  :   0 rjmp  :  14 rol   :   0 ror   :   0 sbc   :   0 sbci  :   5 
sbi   :   9 sbic  :   0 sbis  :   1 sbiw  :   6 sbr   :   0 sbrc  :   1 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  37 std   :   2 sts   :   2 sub   :   0 subi  :   7 swap  :   2 
tst   :   0 wdr   :   1 
Instructions used: 47 out of 116 (40.5%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004ce   1102    128   1230   16384   7.5%
[.dseg] 0x000060 0x0001a3      0     67     67    1024   6.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
