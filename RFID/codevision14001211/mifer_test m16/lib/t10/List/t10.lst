
AVRASM ver. 2.1.30  C:\Users\EHSAN\Desktop\rfid\codevision\t10\List\t10.asm Mon Jun 23 18:26:29 2014

C:\Users\EHSAN\Desktop\rfid\codevision\t10\List\t10.asm(1071): warning: Register r5 already defined by the .DEF directive
C:\Users\EHSAN\Desktop\rfid\codevision\t10\List\t10.asm(1072): warning: Register r4 already defined by the .DEF directive
C:\Users\EHSAN\Desktop\rfid\codevision\t10\List\t10.asm(1073): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32A
                 ;Program type             : Application
                 ;Clock frequency          : 7.372800 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rx_wr_index=R5
                 	.DEF _rx_rd_index=R4
                 	.DEF _rx_counter=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0446 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 _0x75:
000034 3412
000035 7856
000036 cbed
000037 87a9      	.DB  0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87
000038 3412
000039 7856
00003a fe01
00003b fe01      	.DB  0x12,0x34,0x56,0x78,0x1,0xFE,0x1,0xFE
                 _0x76:
00003c 0000
00003d 0100      	.DB  0x0,0x0,0x0,0x1
                 _0x77:
00003e ffff
00003f ffff
000040 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x0:
000041 6568
000042 6c6c
000043 0d6f
000044 7000      	.DB  0x68,0x65,0x6C,0x6C,0x6F,0xD,0x0,0x70
000045 6972
000046 746e
000047 0031
000048 5825      	.DB  0x72,0x69,0x6E,0x74,0x31,0x0,0x25,0x58
000049 7000
00004a 6972
00004b 746e
00004c 3a32      	.DB  0x0,0x70,0x72,0x69,0x6E,0x74,0x32,0x3A
00004d 7000
00004e 6972
00004f 746e
000050 0033      	.DB  0x0,0x70,0x72,0x69,0x6E,0x74,0x33,0x0
000051 000a      	.DB  0xA,0x0
                 
                 __GLOBAL_INI_TBL:
000052 0001      	.DW  0x01
000053 0002      	.DW  0x02
000054 0066      	.DW  __REG_BIT_VARS*2
                 
000055 0010      	.DW  0x10
000056 035a      	.DW  _data1
000057 0068      	.DW  _0x75*2
                 
000058 0004      	.DW  0x04
000059 036a      	.DW  _data2
00005a 0078      	.DW  _0x76*2
                 
00005b 0006      	.DW  0x06
00005c 036e      	.DW  _DefaultKey
00005d 007c      	.DW  _0x77*2
                 
                 _0xFFFFFFFF:
00005e 0000      	.DW  0
                 
                 __RESET:
00005f 94f8      	CLI
000060 27ee      	CLR  R30
000061 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000062 e0f1      	LDI  R31,1
000063 bff5      	OUT  MCUCR,R31
000064 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000065 e1f8      	LDI  R31,0x18
000066 bdf1      	OUT  WDTCR,R31
000067 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000068 e08d      	LDI  R24,(14-2)+1
000069 e0a2      	LDI  R26,2
00006a 27bb      	CLR  R27
                 __CLEAR_REG:
00006b 93ed      	ST   X+,R30
00006c 958a      	DEC  R24
00006d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000070 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000071 93ed      	ST   X+,R30
000072 9701      	SBIW R24,1
000073 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000074 eae4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000075 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000076 9185      	LPM  R24,Z+
000077 9195      	LPM  R25,Z+
000078 9700      	SBIW R24,0
000079 f061      	BREQ __GLOBAL_INI_END
00007a 91a5      	LPM  R26,Z+
00007b 91b5      	LPM  R27,Z+
00007c 9005      	LPM  R0,Z+
00007d 9015      	LPM  R1,Z+
00007e 01bf      	MOVW R22,R30
00007f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000080 9005      	LPM  R0,Z+
000081 920d      	ST   X+,R0
000082 9701      	SBIW R24,1
000083 f7e1      	BRNE __GLOBAL_INI_LOOP
000084 01fb      	MOVW R30,R22
000085 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000086 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000087 bfed      	OUT  SPL,R30
000088 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000089 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008b e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008c 940c 047c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega32A
                 ;AVR Core Clock frequency: 7.372800 MHz
                 ;Data Stack size         : 512
                 ;
                 ;converted from lpc 8bit 8952 micro (nxp example) to avr 8bit codevision by:
                 ;Ehsan Safamanesh.
                 ;email:  ehsan_safa66@yahoo.com
                 ;*****************************************************/
                 ;
                 ;////////////   PORTB.3 is ss (sda) pin
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include "MFRC522.h"
                 
                 	.CSEG
                 _PcdReset:
00008e e0e1      	LDI  R30,LOW(1)
00008f 93ea      	ST   -Y,R30
000090 e0af      	LDI  R26,LOW(15)
000091 d38d      	RCALL _WriteRawRC
000092 e1e1      	LDI  R30,LOW(17)
000093 93ea      	ST   -Y,R30
000094 e3ad      	LDI  R26,LOW(61)
000095 d389      	RCALL _WriteRawRC
000096 e2ed      	LDI  R30,LOW(45)
000097 93ea      	ST   -Y,R30
000098 e1ae      	LDI  R26,LOW(30)
000099 d385      	RCALL _WriteRawRC
00009a e2ec      	LDI  R30,LOW(44)
00009b 940e 06cb 	CALL SUBOPT_0x0
00009d e2ea      	LDI  R30,LOW(42)
00009e 93ea      	ST   -Y,R30
00009f e8ad      	LDI  R26,LOW(141)
0000a0 d37e      	RCALL _WriteRawRC
0000a1 e2eb      	LDI  R30,LOW(43)
0000a2 93ea      	ST   -Y,R30
0000a3 e3ae      	LDI  R26,LOW(62)
0000a4 d37a      	RCALL _WriteRawRC
0000a5 e1e5      	LDI  R30,LOW(21)
0000a6 93ea      	ST   -Y,R30
0000a7 e4a0      	LDI  R26,LOW(64)
0000a8 d376      	RCALL _WriteRawRC
0000a9 e0e0      	LDI  R30,LOW(0)
0000aa 9508      	RET
                 _PcdAntennaOn:
0000ab 931a      	ST   -Y,R17
                 ;	i -> R17
0000ac e1a4      	LDI  R26,LOW(20)
0000ad d37c      	RCALL _ReadRawRC
0000ae 2f1e      	MOV  R17,R30
0000af 2fe1      	MOV  R30,R17
0000b0 70e3      	ANDI R30,LOW(0x3)
0000b1 f421      	BRNE _0x3
0000b2 e1e4      	LDI  R30,LOW(20)
0000b3 93ea      	ST   -Y,R30
0000b4 e0a3      	LDI  R26,LOW(3)
0000b5 d381      	RCALL _SetBitMask
                 _0x3:
0000b6 9119      	LD   R17,Y+
0000b7 9508      	RET
                 _PcdAntennaOff:
0000b8 e1e4      	LDI  R30,LOW(20)
0000b9 93ea      	ST   -Y,R30
0000ba e0a3      	LDI  R26,LOW(3)
0000bb d382      	RCALL _ClearBitMask
0000bc 9508      	RET
                 _PcdRequest:
0000bd 940e 06cf 	CALL SUBOPT_0x1
                 ;	req_code -> Y+24
                 ;	*pTagType -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	ucComMF522Buf -> Y+4
0000bf 940e 06d5 	CALL SUBOPT_0x2
0000c1 93ea      	ST   -Y,R30
0000c2 e0a7      	LDI  R26,LOW(7)
0000c3 d35b      	RCALL _WriteRawRC
0000c4 e1e4      	LDI  R30,LOW(20)
0000c5 93ea      	ST   -Y,R30
0000c6 e0a3      	LDI  R26,LOW(3)
0000c7 d36f      	RCALL _SetBitMask
0000c8 8de8      	LDD  R30,Y+24
0000c9 83ec      	STD  Y+4,R30
0000ca 940e 06dc 	CALL SUBOPT_0x3
0000cc e0e1      	LDI  R30,LOW(1)
0000cd 940e 06e3 	CALL SUBOPT_0x4
0000cf b7ad      	IN   R26,SPL
0000d0 b7be      	IN   R27,SPH
0000d1 9711      	SBIW R26,1
0000d2 933f      	PUSH R19
0000d3 932f      	PUSH R18
0000d4 d24e      	RCALL _PcdComMF522
0000d5 912f      	POP  R18
0000d6 913f      	POP  R19
0000d7 2f1e      	MOV  R17,R30
0000d8 3010      	CPI  R17,0
0000d9 f429      	BRNE _0x5
0000da e1e0      	LDI  R30,LOW(16)
0000db e0f0      	LDI  R31,HIGH(16)
0000dc 17e2      	CP   R30,R18
0000dd 07f3      	CPC  R31,R19
0000de f009      	BREQ _0x6
                 _0x5:
0000df c00a      	RJMP _0x4
                 _0x6:
0000e0 81ec      	LDD  R30,Y+4
0000e1 89ae      	LDD  R26,Y+22
0000e2 89bf      	LDD  R27,Y+22+1
0000e3 93ec      	ST   X,R30
0000e4 81ed      	LDD  R30,Y+5
                +
0000e5 89ae     +LDD R26 , Y + 22
0000e6 89bf     +LDD R27 , Y + 22 + 1
0000e7 9611     +ADIW R26 , 1
0000e8 93ec     +ST X , R30
                 	__PUTB1SNS 22,1
0000e9 c001      	RJMP _0x7
                 _0x4:
0000ea ef1e      	LDI  R17,LOW(254)
                 _0x7:
0000eb c14e      	RJMP _0x2080006
                 _PcdAnticoll:
0000ec 93ba      	ST   -Y,R27
0000ed 93aa      	ST   -Y,R26
0000ee 9762      	SBIW R28,18
0000ef 940e 07e9 	CALL __SAVELOCR6
                 ;	*pSnr -> Y+24
                 ;	status -> R17
                 ;	i -> R16
                 ;	snr_check -> R19
                 ;	unLen -> R20,R21
                 ;	ucComMF522Buf -> Y+6
0000f1 e030      	LDI  R19,0
0000f2 940e 06d5 	CALL SUBOPT_0x2
0000f4 940e 06cb 	CALL SUBOPT_0x0
0000f6 e0ee      	LDI  R30,LOW(14)
0000f7 940e 06e9 	CALL SUBOPT_0x5
0000f9 e9e3      	LDI  R30,LOW(147)
0000fa 83ee      	STD  Y+6,R30
0000fb e2e0      	LDI  R30,LOW(32)
0000fc 83ef      	STD  Y+7,R30
0000fd e0ec      	LDI  R30,LOW(12)
0000fe 93ea      	ST   -Y,R30
0000ff 01fe      	MOVW R30,R28
000100 9637      	ADIW R30,7
000101 940e 06ed 	CALL SUBOPT_0x6
000103 01fe      	MOVW R30,R28
000104 963a      	ADIW R30,10
000105 93fa      	ST   -Y,R31
000106 93ea      	ST   -Y,R30
000107 b7ad      	IN   R26,SPL
000108 b7be      	IN   R27,SPH
000109 9711      	SBIW R26,1
00010a 935f      	PUSH R21
00010b 934f      	PUSH R20
00010c d216      	RCALL _PcdComMF522
00010d 914f      	POP  R20
00010e 915f      	POP  R21
00010f 2f1e      	MOV  R17,R30
000110 3010      	CPI  R17,0
000111 f4e1      	BRNE _0x8
000112 e000      	LDI  R16,LOW(0)
                 _0xA:
000113 3004      	CPI  R16,4
000114 f490      	BRSH _0xB
000115 940e 06f2 	CALL SUBOPT_0x7
000117 01bf      	MOVW R22,R30
000118 8da8      	LDD  R26,Y+24
000119 8db9      	LDD  R27,Y+24+1
00011a 940e 06f5 	CALL SUBOPT_0x8
00011c 940e 06fa 	CALL SUBOPT_0x9
00011e 01d0      	MOVW R26,R0
00011f 93ec      	ST   X,R30
000120 940e 06f2 	CALL SUBOPT_0x7
000122 940e 06fa 	CALL SUBOPT_0x9
000124 273e      	EOR  R19,R30
000125 5f0f      	SUBI R16,-1
000126 cfec      	RJMP _0xA
                 _0xB:
000127 940e 06f2 	CALL SUBOPT_0x7
000129 940e 06fa 	CALL SUBOPT_0x9
00012b 17e3      	CP   R30,R19
00012c f009      	BREQ _0xC
00012d ef1e      	LDI  R17,LOW(254)
                 _0xC:
                 _0x8:
00012e e0ee      	LDI  R30,LOW(14)
00012f 940e 0700 	CALL SUBOPT_0xA
000131 2fe1      	MOV  R30,R17
000132 940e 07f0 	CALL __LOADLOCR6
000134 c16e      	RJMP _0x2080005
                 _PcdSelect:
000135 940e 06cf 	CALL SUBOPT_0x1
                 ;	*pSnr -> Y+22
                 ;	status -> R17
                 ;	i -> R16
                 ;	unLen -> R18,R19
                 ;	ucComMF522Buf -> Y+4
000137 e9e3      	LDI  R30,LOW(147)
000138 83ec      	STD  Y+4,R30
000139 e7e0      	LDI  R30,LOW(112)
00013a 83ed      	STD  Y+5,R30
00013b e0e0      	LDI  R30,LOW(0)
00013c 87ea      	STD  Y+10,R30
00013d e000      	LDI  R16,LOW(0)
                 _0xE:
00013e 3004      	CPI  R16,4
00013f f4a8      	BRSH _0xF
000140 940e 06f2 	CALL SUBOPT_0x7
000142 940e 0704 	CALL SUBOPT_0xB
000144 940e 0709 	CALL SUBOPT_0xC
000146 01d0      	MOVW R26,R0
000147 93ec      	ST   X,R30
000148 01fe      	MOVW R30,R28
000149 963a      	ADIW R30,10
00014a 01bf      	MOVW R22,R30
00014b 8000      	LD   R0,Z
00014c 940e 06f2 	CALL SUBOPT_0x7
00014e 940e 0709 	CALL SUBOPT_0xC
000150 25e0      	EOR  R30,R0
000151 01db      	MOVW R26,R22
000152 93ec      	ST   X,R30
000153 5f0f      	SUBI R16,-1
000154 cfe9      	RJMP _0xE
                 _0xF:
000155 940e 070f 	CALL SUBOPT_0xD
000157 e0e7      	LDI  R30,LOW(7)
000158 93ea      	ST   -Y,R30
000159 01de      	MOVW R26,R28
00015a 961e      	ADIW R26,14
00015b d287      	RCALL _CalulateCRC
00015c e0e8      	LDI  R30,LOW(8)
00015d 93ea      	ST   -Y,R30
00015e e0a8      	LDI  R26,LOW(8)
00015f d2de      	RCALL _ClearBitMask
000160 940e 06dc 	CALL SUBOPT_0x3
000162 e0e9      	LDI  R30,LOW(9)
000163 940e 06e3 	CALL SUBOPT_0x4
000165 b7ad      	IN   R26,SPL
000166 b7be      	IN   R27,SPH
000167 9711      	SBIW R26,1
000168 933f      	PUSH R19
000169 932f      	PUSH R18
00016a d1b8      	RCALL _PcdComMF522
00016b 912f      	POP  R18
00016c 913f      	POP  R19
00016d 2f1e      	MOV  R17,R30
00016e 3010      	CPI  R17,0
00016f f429      	BRNE _0x11
000170 e1e8      	LDI  R30,LOW(24)
000171 e0f0      	LDI  R31,HIGH(24)
000172 17e2      	CP   R30,R18
000173 07f3      	CPC  R31,R19
000174 f009      	BREQ _0x12
                 _0x11:
000175 c002      	RJMP _0x10
                 _0x12:
000176 e010      	LDI  R17,LOW(0)
000177 c001      	RJMP _0x13
                 _0x10:
000178 ef1e      	LDI  R17,LOW(254)
                 _0x13:
000179 c189      	RJMP _0x2080004
                 _PcdAuthState:
00017a 940e 06cf 	CALL SUBOPT_0x1
                 ;	auth_mode -> Y+27
                 ;	addr -> Y+26
                 ;	*pKey -> Y+24
                 ;	*pSnr -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	i -> R16
                 ;	ucComMF522Buf -> Y+4
00017c 8deb      	LDD  R30,Y+27
00017d 83ec      	STD  Y+4,R30
00017e 8dea      	LDD  R30,Y+26
00017f 83ed      	STD  Y+5,R30
000180 e000      	LDI  R16,LOW(0)
                 _0x15:
000181 3006      	CPI  R16,6
000182 f468      	BRSH _0x16
000183 940e 06f2 	CALL SUBOPT_0x7
000185 940e 0704 	CALL SUBOPT_0xB
000187 8da8      	LDD  R26,Y+24
000188 8db9      	LDD  R27,Y+24+1
000189 0fae      	ADD  R26,R30
00018a 1fbf      	ADC  R27,R31
00018b 91ec      	LD   R30,X
00018c 01d0      	MOVW R26,R0
00018d 93ec      	ST   X,R30
00018e 5f0f      	SUBI R16,-1
00018f cff1      	RJMP _0x15
                 _0x16:
000190 e000      	LDI  R16,LOW(0)
                 _0x18:
000191 3006      	CPI  R16,6
000192 f460      	BRSH _0x19
000193 940e 06f2 	CALL SUBOPT_0x7
000195 01bf      	MOVW R22,R30
000196 9638      	ADIW R30,8
000197 940e 0714 	CALL SUBOPT_0xE
000199 940e 0709 	CALL SUBOPT_0xC
00019b 01d0      	MOVW R26,R0
00019c 93ec      	ST   X,R30
00019d 5f0f      	SUBI R16,-1
00019e cff2      	RJMP _0x18
                 _0x19:
00019f e0ee      	LDI  R30,LOW(14)
0001a0 93ea      	ST   -Y,R30
0001a1 01fe      	MOVW R30,R28
0001a2 9635      	ADIW R30,5
0001a3 93fa      	ST   -Y,R31
0001a4 93ea      	ST   -Y,R30
0001a5 e0ec      	LDI  R30,LOW(12)
0001a6 940e 06e3 	CALL SUBOPT_0x4
0001a8 b7ad      	IN   R26,SPL
0001a9 b7be      	IN   R27,SPH
0001aa 9711      	SBIW R26,1
0001ab 933f      	PUSH R19
0001ac 932f      	PUSH R18
0001ad d175      	RCALL _PcdComMF522
0001ae 912f      	POP  R18
0001af 913f      	POP  R19
0001b0 2f1e      	MOV  R17,R30
0001b1 3010      	CPI  R17,0
0001b2 f421      	BRNE _0x1B
0001b3 e0a8      	LDI  R26,LOW(8)
0001b4 d275      	RCALL _ReadRawRC
0001b5 70e8      	ANDI R30,LOW(0x8)
0001b6 f409      	BRNE _0x1A
                 _0x1B:
0001b7 ef1e      	LDI  R17,LOW(254)
                 _0x1A:
0001b8 2fe1      	MOV  R30,R17
0001b9 940e 07f2 	CALL __LOADLOCR4
0001bb 966c      	ADIW R28,28
0001bc 9508      	RET
                 _PcdRead:
0001bd 940e 06cf 	CALL SUBOPT_0x1
                 ;	addr -> Y+24
                 ;	*pData -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	i -> R16
                 ;	ucComMF522Buf -> Y+4
0001bf e3e0      	LDI  R30,LOW(48)
0001c0 940e 0717 	CALL SUBOPT_0xF
0001c2 940e 071d 	CALL SUBOPT_0x10
0001c4 e0e4      	LDI  R30,LOW(4)
0001c5 940e 06e3 	CALL SUBOPT_0x4
0001c7 b7ad      	IN   R26,SPL
0001c8 b7be      	IN   R27,SPH
0001c9 9711      	SBIW R26,1
0001ca 933f      	PUSH R19
0001cb 932f      	PUSH R18
0001cc d156      	RCALL _PcdComMF522
0001cd 912f      	POP  R18
0001ce 913f      	POP  R19
0001cf 2f1e      	MOV  R17,R30
0001d0 3010      	CPI  R17,0
0001d1 f429      	BRNE _0x1E
0001d2 e9e0      	LDI  R30,LOW(144)
0001d3 e0f0      	LDI  R31,HIGH(144)
0001d4 17e2      	CP   R30,R18
0001d5 07f3      	CPC  R31,R19
0001d6 f009      	BREQ _0x1F
                 _0x1E:
0001d7 c014      	RJMP _0x1D
                 _0x1F:
0001d8 e000      	LDI  R16,LOW(0)
                 _0x21:
0001d9 3100      	CPI  R16,16
0001da f480      	BRSH _0x22
0001db 940e 06f2 	CALL SUBOPT_0x7
0001dd 01bf      	MOVW R22,R30
0001de 89ae      	LDD  R26,Y+22
0001df 89bf      	LDD  R27,Y+22+1
0001e0 940e 06f5 	CALL SUBOPT_0x8
0001e2 01de      	MOVW R26,R28
0001e3 9614      	ADIW R26,4
0001e4 0fae      	ADD  R26,R30
0001e5 1fbf      	ADC  R27,R31
0001e6 91ec      	LD   R30,X
0001e7 01d0      	MOVW R26,R0
0001e8 93ec      	ST   X,R30
0001e9 5f0f      	SUBI R16,-1
0001ea cfee      	RJMP _0x21
                 _0x22:
0001eb c001      	RJMP _0x23
                 _0x1D:
0001ec ef1e      	LDI  R17,LOW(254)
                 _0x23:
0001ed c04c      	RJMP _0x2080006
                 _PcdWrite:
0001ee 940e 06cf 	CALL SUBOPT_0x1
                 ;	addr -> Y+24
                 ;	*pData -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	i -> R16
                 ;	ucComMF522Buf -> Y+4
0001f0 eae0      	LDI  R30,LOW(160)
0001f1 940e 0717 	CALL SUBOPT_0xF
0001f3 940e 071d 	CALL SUBOPT_0x10
0001f5 e0e4      	LDI  R30,LOW(4)
0001f6 940e 06e3 	CALL SUBOPT_0x4
0001f8 b7ad      	IN   R26,SPL
0001f9 b7be      	IN   R27,SPH
0001fa 9711      	SBIW R26,1
0001fb 933f      	PUSH R19
0001fc 932f      	PUSH R18
0001fd d125      	RCALL _PcdComMF522
0001fe 912f      	POP  R18
0001ff 913f      	POP  R19
000200 2f1e      	MOV  R17,R30
000201 3010      	CPI  R17,0
000202 f439      	BRNE _0x25
000203 940e 0722 	CALL SUBOPT_0x11
000205 f421      	BRNE _0x25
000206 81ec      	LDD  R30,Y+4
000207 70ef      	ANDI R30,LOW(0xF)
000208 30ea      	CPI  R30,LOW(0xA)
000209 f009      	BREQ _0x24
                 _0x25:
00020a ef1e      	LDI  R17,LOW(254)
                 _0x24:
00020b 3010      	CPI  R17,0
00020c f569      	BRNE _0x27
00020d e000      	LDI  R16,LOW(0)
                 _0x29:
00020e 3100      	CPI  R16,16
00020f f458      	BRSH _0x2A
000210 940e 06f2 	CALL SUBOPT_0x7
000212 01bf      	MOVW R22,R30
000213 940e 0714 	CALL SUBOPT_0xE
000215 940e 0709 	CALL SUBOPT_0xC
000217 01d0      	MOVW R26,R0
000218 93ec      	ST   X,R30
000219 5f0f      	SUBI R16,-1
00021a cff3      	RJMP _0x29
                 _0x2A:
00021b 940e 070f 	CALL SUBOPT_0xD
00021d e1e0      	LDI  R30,LOW(16)
00021e 93ea      	ST   -Y,R30
00021f 01de      	MOVW R26,R28
000220 9657      	ADIW R26,23
000221 d1c1      	RCALL _CalulateCRC
000222 940e 06dc 	CALL SUBOPT_0x3
000224 e1e2      	LDI  R30,LOW(18)
000225 940e 06e3 	CALL SUBOPT_0x4
000227 b7ad      	IN   R26,SPL
000228 b7be      	IN   R27,SPH
000229 9711      	SBIW R26,1
00022a 933f      	PUSH R19
00022b 932f      	PUSH R18
00022c d0f6      	RCALL _PcdComMF522
00022d 912f      	POP  R18
00022e 913f      	POP  R19
00022f 2f1e      	MOV  R17,R30
000230 3010      	CPI  R17,0
000231 f439      	BRNE _0x2C
000232 940e 0722 	CALL SUBOPT_0x11
000234 f421      	BRNE _0x2C
000235 81ec      	LDD  R30,Y+4
000236 70ef      	ANDI R30,LOW(0xF)
000237 30ea      	CPI  R30,LOW(0xA)
000238 f009      	BREQ _0x2B
                 _0x2C:
000239 ef1e      	LDI  R17,LOW(254)
                 _0x2B:
                 _0x27:
                 _0x2080006:
00023a 2fe1      	MOV  R30,R17
00023b 940e 07f2 	CALL __LOADLOCR4
00023d 9669      	ADIW R28,25
00023e 9508      	RET
                 _PcdValue:
00023f 940e 06cf 	CALL SUBOPT_0x1
                 ;	dd_mode -> Y+25
                 ;	addr -> Y+24
                 ;	*pValue -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	i -> R16
                 ;	ucComMF522Buf -> Y+4
000241 8de9      	LDD  R30,Y+25
000242 940e 0717 	CALL SUBOPT_0xF
000244 940e 071d 	CALL SUBOPT_0x10
000246 e0e4      	LDI  R30,LOW(4)
000247 940e 06e3 	CALL SUBOPT_0x4
000249 b7ad      	IN   R26,SPL
00024a b7be      	IN   R27,SPH
00024b 9711      	SBIW R26,1
00024c 933f      	PUSH R19
00024d 932f      	PUSH R18
00024e d0d4      	RCALL _PcdComMF522
00024f 912f      	POP  R18
000250 913f      	POP  R19
000251 2f1e      	MOV  R17,R30
000252 3010      	CPI  R17,0
000253 f439      	BRNE _0x2F
000254 940e 0722 	CALL SUBOPT_0x11
000256 f421      	BRNE _0x2F
000257 81ec      	LDD  R30,Y+4
000258 70ef      	ANDI R30,LOW(0xF)
000259 30ea      	CPI  R30,LOW(0xA)
00025a f009      	BREQ _0x2E
                 _0x2F:
00025b ef1e      	LDI  R17,LOW(254)
                 _0x2E:
00025c 3010      	CPI  R17,0
00025d f529      	BRNE _0x31
00025e e000      	LDI  R16,LOW(0)
                 _0x33:
00025f 3100      	CPI  R16,16
000260 f458      	BRSH _0x34
000261 940e 06f2 	CALL SUBOPT_0x7
000263 01bf      	MOVW R22,R30
000264 940e 0714 	CALL SUBOPT_0xE
000266 940e 0709 	CALL SUBOPT_0xC
000268 01d0      	MOVW R26,R0
000269 93ec      	ST   X,R30
00026a 5f0f      	SUBI R16,-1
00026b cff3      	RJMP _0x33
                 _0x34:
00026c 940e 070f 	CALL SUBOPT_0xD
00026e 940e 0727 	CALL SUBOPT_0x12
                +
000270 e020     +LDI R18 , LOW ( 0 )
000271 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000272 940e 06dc 	CALL SUBOPT_0x3
000274 e0e6      	LDI  R30,LOW(6)
000275 940e 06e3 	CALL SUBOPT_0x4
000277 b7ad      	IN   R26,SPL
000278 b7be      	IN   R27,SPH
000279 9711      	SBIW R26,1
00027a 933f      	PUSH R19
00027b 932f      	PUSH R18
00027c d0a6      	RCALL _PcdComMF522
00027d 912f      	POP  R18
00027e 913f      	POP  R19
00027f 940e 072d 	CALL SUBOPT_0x13
000281 f009      	BREQ _0x35
000282 e010      	LDI  R17,LOW(0)
                 _0x35:
                 _0x31:
000283 3010      	CPI  R17,0
000284 f4d9      	BRNE _0x36
000285 ebe0      	LDI  R30,LOW(176)
000286 940e 0717 	CALL SUBOPT_0xF
000288 940e 071d 	CALL SUBOPT_0x10
00028a e0e4      	LDI  R30,LOW(4)
00028b 940e 06e3 	CALL SUBOPT_0x4
00028d b7ad      	IN   R26,SPL
00028e b7be      	IN   R27,SPH
00028f 9711      	SBIW R26,1
000290 933f      	PUSH R19
000291 932f      	PUSH R18
000292 d090      	RCALL _PcdComMF522
000293 912f      	POP  R18
000294 913f      	POP  R19
000295 2f1e      	MOV  R17,R30
000296 3010      	CPI  R17,0
000297 f439      	BRNE _0x38
000298 940e 0722 	CALL SUBOPT_0x11
00029a f421      	BRNE _0x38
00029b 81ec      	LDD  R30,Y+4
00029c 70ef      	ANDI R30,LOW(0xF)
00029d 30ea      	CPI  R30,LOW(0xA)
00029e f009      	BREQ _0x37
                 _0x38:
00029f ef1e      	LDI  R17,LOW(254)
                 _0x37:
                 _0x36:
0002a0 2fe1      	MOV  R30,R17
0002a1 940e 07f2 	CALL __LOADLOCR4
                 _0x2080005:
0002a3 966a      	ADIW R28,26
0002a4 9508      	RET
                 _PcdBakValue:
0002a5 93aa      	ST   -Y,R26
0002a6 9762      	SBIW R28,18
0002a7 940e 07eb 	CALL __SAVELOCR4
                 ;	sourceaddr -> Y+23
                 ;	goaladdr -> Y+22
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	ucComMF522Buf -> Y+4
0002a9 ece2      	LDI  R30,LOW(194)
0002aa 83ec      	STD  Y+4,R30
0002ab 89ef      	LDD  R30,Y+23
0002ac 940e 0735 	CALL SUBOPT_0x14
0002ae 940e 071d 	CALL SUBOPT_0x10
0002b0 e0e4      	LDI  R30,LOW(4)
0002b1 940e 06e3 	CALL SUBOPT_0x4
0002b3 b7ad      	IN   R26,SPL
0002b4 b7be      	IN   R27,SPH
0002b5 9711      	SBIW R26,1
0002b6 933f      	PUSH R19
0002b7 932f      	PUSH R18
0002b8 d06a      	RCALL _PcdComMF522
0002b9 912f      	POP  R18
0002ba 913f      	POP  R19
0002bb 2f1e      	MOV  R17,R30
0002bc 3010      	CPI  R17,0
0002bd f439      	BRNE _0x3B
0002be 940e 0722 	CALL SUBOPT_0x11
0002c0 f421      	BRNE _0x3B
0002c1 81ec      	LDD  R30,Y+4
0002c2 70ef      	ANDI R30,LOW(0xF)
0002c3 30ea      	CPI  R30,LOW(0xA)
0002c4 f009      	BREQ _0x3A
                 _0x3B:
0002c5 ef1e      	LDI  R17,LOW(254)
                 _0x3A:
0002c6 3010      	CPI  R17,0
0002c7 f4d1      	BRNE _0x3D
0002c8 e0e0      	LDI  R30,LOW(0)
0002c9 83ec      	STD  Y+4,R30
0002ca 83ed      	STD  Y+5,R30
0002cb 83ee      	STD  Y+6,R30
0002cc 83ef      	STD  Y+7,R30
0002cd 940e 070f 	CALL SUBOPT_0xD
0002cf 940e 0727 	CALL SUBOPT_0x12
0002d1 940e 06dc 	CALL SUBOPT_0x3
0002d3 e0e6      	LDI  R30,LOW(6)
0002d4 940e 06e3 	CALL SUBOPT_0x4
0002d6 b7ad      	IN   R26,SPL
0002d7 b7be      	IN   R27,SPH
0002d8 9711      	SBIW R26,1
0002d9 933f      	PUSH R19
0002da 932f      	PUSH R18
0002db d047      	RCALL _PcdComMF522
0002dc 912f      	POP  R18
0002dd 913f      	POP  R19
0002de 940e 072d 	CALL SUBOPT_0x13
0002e0 f009      	BREQ _0x3E
0002e1 e010      	LDI  R17,LOW(0)
                 _0x3E:
                 _0x3D:
0002e2 3010      	CPI  R17,0
0002e3 f011      	BREQ _0x3F
0002e4 efee      	LDI  R30,LOW(254)
0002e5 c01e      	RJMP _0x2080003
                 _0x3F:
0002e6 ebe0      	LDI  R30,LOW(176)
0002e7 83ec      	STD  Y+4,R30
0002e8 89ee      	LDD  R30,Y+22
0002e9 940e 0735 	CALL SUBOPT_0x14
0002eb 940e 071d 	CALL SUBOPT_0x10
0002ed e0e4      	LDI  R30,LOW(4)
0002ee 940e 06e3 	CALL SUBOPT_0x4
0002f0 b7ad      	IN   R26,SPL
0002f1 b7be      	IN   R27,SPH
0002f2 9711      	SBIW R26,1
0002f3 933f      	PUSH R19
0002f4 932f      	PUSH R18
0002f5 d02d      	RCALL _PcdComMF522
0002f6 912f      	POP  R18
0002f7 913f      	POP  R19
0002f8 2f1e      	MOV  R17,R30
0002f9 3010      	CPI  R17,0
0002fa f439      	BRNE _0x41
0002fb 940e 0722 	CALL SUBOPT_0x11
0002fd f421      	BRNE _0x41
0002fe 81ec      	LDD  R30,Y+4
0002ff 70ef      	ANDI R30,LOW(0xF)
000300 30ea      	CPI  R30,LOW(0xA)
000301 f009      	BREQ _0x40
                 _0x41:
000302 ef1e      	LDI  R17,LOW(254)
                 _0x40:
                 _0x2080004:
000303 2fe1      	MOV  R30,R17
                 _0x2080003:
000304 940e 07f2 	CALL __LOADLOCR4
000306 9668      	ADIW R28,24
000307 9508      	RET
                 _PcdHalt:
000308 9762      	SBIW R28,18
000309 940e 07eb 	CALL __SAVELOCR4
                 ;	status -> R17
                 ;	unLen -> R18,R19
                 ;	ucComMF522Buf -> Y+4
00030b e5e0      	LDI  R30,LOW(80)
00030c 83ec      	STD  Y+4,R30
00030d e0e0      	LDI  R30,LOW(0)
00030e 940e 0735 	CALL SUBOPT_0x14
000310 940e 071d 	CALL SUBOPT_0x10
000312 e0e4      	LDI  R30,LOW(4)
000313 940e 06e3 	CALL SUBOPT_0x4
000315 b7ad      	IN   R26,SPL
000316 b7be      	IN   R27,SPH
000317 9711      	SBIW R26,1
000318 933f      	PUSH R19
000319 932f      	PUSH R18
00031a d008      	RCALL _PcdComMF522
00031b 912f      	POP  R18
00031c 913f      	POP  R19
00031d 2f1e      	MOV  R17,R30
00031e e0e0      	LDI  R30,LOW(0)
00031f 940e 07f2 	CALL __LOADLOCR4
000321 9666      	ADIW R28,22
000322 9508      	RET
                 _PcdComMF522:
000323 93ba      	ST   -Y,R27
000324 93aa      	ST   -Y,R26
000325 9722      	SBIW R28,2
000326 940e 07e9 	CALL __SAVELOCR6
                 ;	Command -> Y+15
                 ;	*pInData -> Y+13
                 ;	InLenByte -> Y+12
                 ;	*pOutData -> Y+10
                 ;	*pOutLenBit -> Y+8
                 ;	status -> R17
                 ;	irqEn -> R16
                 ;	waitFor -> R19
                 ;	lastBits -> R18
                 ;	n -> R21
                 ;	i -> Y+6
000328 ef1e      	LDI  R17,254
000329 e000      	LDI  R16,0
00032a e030      	LDI  R19,0
00032b 85ef      	LDD  R30,Y+15
00032c e0f0      	LDI  R31,0
00032d 30ee      	CPI  R30,LOW(0xE)
00032e e0a0      	LDI  R26,HIGH(0xE)
00032f 07fa      	CPC  R31,R26
000330 f419      	BRNE _0x46
000331 e102      	LDI  R16,LOW(18)
000332 e130      	LDI  R19,LOW(16)
000333 c006      	RJMP _0x45
                 _0x46:
000334 30ec      	CPI  R30,LOW(0xC)
000335 e0a0      	LDI  R26,HIGH(0xC)
000336 07fa      	CPC  R31,R26
000337 f411      	BRNE _0x48
000338 e707      	LDI  R16,LOW(119)
000339 e330      	LDI  R19,LOW(48)
                 _0x48:
                 _0x45:
00033a e0e2      	LDI  R30,LOW(2)
00033b 93ea      	ST   -Y,R30
00033c 2fe0      	MOV  R30,R16
00033d 68e0      	ORI  R30,0x80
00033e 2fae      	MOV  R26,R30
00033f d0df      	RCALL _WriteRawRC
000340 e0e4      	LDI  R30,LOW(4)
000341 940e 06e9 	CALL SUBOPT_0x5
000343 e0e1      	LDI  R30,LOW(1)
000344 940e 06cb 	CALL SUBOPT_0x0
000346 e0ea      	LDI  R30,LOW(10)
000347 940e 0700 	CALL SUBOPT_0xA
000349 e0e0      	LDI  R30,LOW(0)
00034a 83ee      	STD  Y+6,R30
00034b 83ef      	STD  Y+6+1,R30
                 _0x4A:
00034c 85ec      	LDD  R30,Y+12
00034d 940e 0739 	CALL SUBOPT_0x15
00034f f480      	BRSH _0x4B
000350 e0e9      	LDI  R30,LOW(9)
000351 93ea      	ST   -Y,R30
000352 81ef      	LDD  R30,Y+7
000353 85f8      	LDD  R31,Y+7+1
000354 85ae      	LDD  R26,Y+14
000355 85bf      	LDD  R27,Y+14+1
000356 0fae      	ADD  R26,R30
000357 1fbf      	ADC  R27,R31
000358 91ac      	LD   R26,X
000359 d0c5      	RCALL _WriteRawRC
00035a 81ee      	LDD  R30,Y+6
00035b 81ff      	LDD  R31,Y+6+1
00035c 9631      	ADIW R30,1
00035d 83ee      	STD  Y+6,R30
00035e 83ff      	STD  Y+6+1,R31
00035f cfec      	RJMP _0x4A
                 _0x4B:
000360 e0e1      	LDI  R30,LOW(1)
000361 93ea      	ST   -Y,R30
000362 89a8      	LDD  R26,Y+16
000363 d0bb      	RCALL _WriteRawRC
000364 85af      	LDD  R26,Y+15
000365 30ac      	CPI  R26,LOW(0xC)
000366 f419      	BRNE _0x4C
000367 e0ed      	LDI  R30,LOW(13)
000368 940e 0700 	CALL SUBOPT_0xA
                 _0x4C:
00036a e5e8      	LDI  R30,LOW(600)
00036b e0f2      	LDI  R31,HIGH(600)
00036c 83ee      	STD  Y+6,R30
00036d 83ff      	STD  Y+6+1,R31
                 _0x4E:
00036e e0a4      	LDI  R26,LOW(4)
00036f d0ba      	RCALL _ReadRawRC
000370 2f5e      	MOV  R21,R30
000371 81ee      	LDD  R30,Y+6
000372 81ff      	LDD  R31,Y+6+1
000373 9731      	SBIW R30,1
000374 83ee      	STD  Y+6,R30
000375 83ff      	STD  Y+6+1,R31
000376 81ae      	LDD  R26,Y+6
000377 81bf      	LDD  R27,Y+6+1
000378 9710      	SBIW R26,0
000379 f029      	BREQ _0x50
00037a fd50      	SBRC R21,0
00037b c003      	RJMP _0x50
00037c 2fe3      	MOV  R30,R19
00037d 23e5      	AND  R30,R21
00037e f009      	BREQ _0x51
                 _0x50:
00037f c001      	RJMP _0x4F
                 _0x51:
000380 cfed      	RJMP _0x4E
                 _0x4F:
000381 e0ed      	LDI  R30,LOW(13)
000382 940e 06e9 	CALL SUBOPT_0x5
000384 81ee      	LDD  R30,Y+6
000385 81ff      	LDD  R31,Y+6+1
000386 9730      	SBIW R30,0
000387 f411      	BRNE PC+3
000388 940c 03d8 	JMP _0x52
00038a e0a6      	LDI  R26,LOW(6)
00038b d09e      	RCALL _ReadRawRC
00038c 71eb      	ANDI R30,LOW(0x1B)
00038d f011      	BREQ PC+3
00038e 940c 03d7 	JMP _0x53
000390 e010      	LDI  R17,LOW(0)
000391 2fe0      	MOV  R30,R16
000392 23e5      	AND  R30,R21
000393 70e1      	ANDI R30,LOW(0x1)
000394 f009      	BREQ _0x54
000395 ef1f      	LDI  R17,LOW(255)
                 _0x54:
000396 85af      	LDD  R26,Y+15
000397 30ac      	CPI  R26,LOW(0xC)
000398 f011      	BREQ PC+3
000399 940c 03d6 	JMP _0x55
00039b e0aa      	LDI  R26,LOW(10)
00039c d08d      	RCALL _ReadRawRC
00039d 2f5e      	MOV  R21,R30
00039e e0ac      	LDI  R26,LOW(12)
00039f d08a      	RCALL _ReadRawRC
0003a0 70e7      	ANDI R30,LOW(0x7)
0003a1 2f2e      	MOV  R18,R30
0003a2 3020      	CPI  R18,0
0003a3 f059      	BREQ _0x56
0003a4 2fe5      	MOV  R30,R21
0003a5 e0f0      	LDI  R31,0
0003a6 9731      	SBIW R30,1
0003a7 940e 07d5 	CALL __LSLW3
0003a9 01df      	MOVW R26,R30
0003aa 2fe2      	MOV  R30,R18
0003ab e0f0      	LDI  R31,0
0003ac 0fea      	ADD  R30,R26
0003ad 1ffb      	ADC  R31,R27
0003ae c003      	RJMP _0x9F
                 _0x56:
0003af e0e8      	LDI  R30,LOW(8)
0003b0 9fe5      	MUL  R30,R21
0003b1 01f0      	MOVW R30,R0
                 _0x9F:
0003b2 85a8      	LDD  R26,Y+8
0003b3 85b9      	LDD  R27,Y+8+1
0003b4 93ed      	ST   X+,R30
0003b5 93fc      	ST   X,R31
0003b6 3050      	CPI  R21,0
0003b7 f409      	BRNE _0x58
0003b8 e051      	LDI  R21,LOW(1)
                 _0x58:
0003b9 3153      	CPI  R21,19
0003ba f008      	BRLO _0x59
0003bb e152      	LDI  R21,LOW(18)
                 _0x59:
0003bc e0e0      	LDI  R30,LOW(0)
0003bd 83ee      	STD  Y+6,R30
0003be 83ef      	STD  Y+6+1,R30
                 _0x5B:
0003bf 2fe5      	MOV  R30,R21
0003c0 940e 0739 	CALL SUBOPT_0x15
0003c2 f498      	BRSH _0x5C
0003c3 81ee      	LDD  R30,Y+6
0003c4 81ff      	LDD  R31,Y+6+1
0003c5 85aa      	LDD  R26,Y+10
0003c6 85bb      	LDD  R27,Y+10+1
0003c7 0fea      	ADD  R30,R26
0003c8 1ffb      	ADC  R31,R27
0003c9 93ff      	PUSH R31
0003ca 93ef      	PUSH R30
0003cb e0a9      	LDI  R26,LOW(9)
0003cc d05d      	RCALL _ReadRawRC
0003cd 91af      	POP  R26
0003ce 91bf      	POP  R27
0003cf 93ec      	ST   X,R30
0003d0 81ee      	LDD  R30,Y+6
0003d1 81ff      	LDD  R31,Y+6+1
0003d2 9631      	ADIW R30,1
0003d3 83ee      	STD  Y+6,R30
0003d4 83ff      	STD  Y+6+1,R31
0003d5 cfe9      	RJMP _0x5B
                 _0x5C:
                 _0x55:
0003d6 c001      	RJMP _0x5D
                 _0x53:
0003d7 ef1e      	LDI  R17,LOW(254)
                 _0x5D:
                 _0x52:
0003d8 e0ec      	LDI  R30,LOW(12)
0003d9 940e 0700 	CALL SUBOPT_0xA
0003db e0e1      	LDI  R30,LOW(1)
0003dc 940e 06cb 	CALL SUBOPT_0x0
0003de 2fe1      	MOV  R30,R17
0003df 940e 07f0 	CALL __LOADLOCR6
0003e1 9660      	ADIW R28,16
0003e2 9508      	RET
                 _CalulateCRC:
0003e3 93ba      	ST   -Y,R27
0003e4 93aa      	ST   -Y,R26
0003e5 931a      	ST   -Y,R17
0003e6 930a      	ST   -Y,R16
                 ;	*pIndata -> Y+5
                 ;	len -> Y+4
                 ;	*pOutData -> Y+2
                 ;	i -> R17
                 ;	n -> R16
0003e7 e0e5      	LDI  R30,LOW(5)
0003e8 93ea      	ST   -Y,R30
0003e9 e0a4      	LDI  R26,LOW(4)
0003ea d053      	RCALL _ClearBitMask
0003eb e0e1      	LDI  R30,LOW(1)
0003ec 940e 06cb 	CALL SUBOPT_0x0
0003ee e0ea      	LDI  R30,LOW(10)
0003ef 940e 0700 	CALL SUBOPT_0xA
0003f1 e010      	LDI  R17,LOW(0)
                 _0x5F:
0003f2 81ec      	LDD  R30,Y+4
0003f3 171e      	CP   R17,R30
0003f4 f460      	BRSH _0x60
0003f5 e0e9      	LDI  R30,LOW(9)
0003f6 93ea      	ST   -Y,R30
0003f7 2fe1      	MOV  R30,R17
0003f8 e0f0      	LDI  R31,0
0003f9 81ae      	LDD  R26,Y+6
0003fa 81bf      	LDD  R27,Y+6+1
0003fb 0fae      	ADD  R26,R30
0003fc 1fbf      	ADC  R27,R31
0003fd 91ac      	LD   R26,X
0003fe d020      	RCALL _WriteRawRC
0003ff 5f1f      	SUBI R17,-1
000400 cff1      	RJMP _0x5F
                 _0x60:
000401 e0e1      	LDI  R30,LOW(1)
000402 93ea      	ST   -Y,R30
000403 e0a3      	LDI  R26,LOW(3)
000404 d01a      	RCALL _WriteRawRC
000405 ef1f      	LDI  R17,LOW(255)
                 _0x62:
000406 e0a5      	LDI  R26,LOW(5)
000407 d022      	RCALL _ReadRawRC
000408 2f0e      	MOV  R16,R30
000409 5011      	SUBI R17,1
00040a 3010      	CPI  R17,0
00040b f011      	BREQ _0x64
00040c ff02      	SBRS R16,2
00040d c001      	RJMP _0x65
                 _0x64:
00040e c001      	RJMP _0x63
                 _0x65:
00040f cff6      	RJMP _0x62
                 _0x63:
000410 e2a2      	LDI  R26,LOW(34)
000411 d018      	RCALL _ReadRawRC
000412 81aa      	LDD  R26,Y+2
000413 81bb      	LDD  R27,Y+2+1
000414 93ec      	ST   X,R30
000415 e2a1      	LDI  R26,LOW(33)
000416 d013      	RCALL _ReadRawRC
                +
000417 81aa     +LDD R26 , Y + 2
000418 81bb     +LDD R27 , Y + 2 + 1
000419 9611     +ADIW R26 , 1
00041a 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00041b 8119      	LDD  R17,Y+1
00041c 8108      	LDD  R16,Y+0
00041d 9627      	ADIW R28,7
00041e 9508      	RET
                 _WriteRawRC:
00041f 93aa      	ST   -Y,R26
                 ;	reg -> Y+1
                 ;	value -> Y+0
000420 98c3      	CBI  0x18,3
000421 81e9      	LDD  R30,Y+1
000422 0fee      	LSL  R30
000423 2fae      	MOV  R26,R30
000424 d116      	RCALL _spi
000425 81a8      	LD   R26,Y
000426 d114      	RCALL _spi
000427 9ac3      	SBI  0x18,3
000428 9622      	ADIW R28,2
000429 9508      	RET
                 _ReadRawRC:
00042a 93aa      	ST   -Y,R26
                 ;	reg -> Y+0
00042b 98c3      	CBI  0x18,3
00042c 81e8      	LD   R30,Y
00042d 0fee      	LSL  R30
00042e 68e0      	ORI  R30,0x80
00042f 2fae      	MOV  R26,R30
000430 d10a      	RCALL _spi
000431 e0a0      	LDI  R26,LOW(0)
000432 d108      	RCALL _spi
000433 83e8      	ST   Y,R30
000434 9ac3      	SBI  0x18,3
000435 940c 0547 	JMP  _0x2080002
                 _SetBitMask:
000437 940e 073f 	CALL SUBOPT_0x16
                 ;	reg -> Y+2
                 ;	mask -> Y+1
                 ;	tmp -> R17
000439 2b1e      	OR   R17,R30
00043a 940e 0747 	CALL SUBOPT_0x17
00043c 940c 0554 	JMP  _0x2080001
                 _ClearBitMask:
00043e 940e 073f 	CALL SUBOPT_0x16
                 ;	reg -> Y+2
                 ;	mask -> Y+1
                 ;	tmp -> R17
000440 95e0      	COM  R30
000441 231e      	AND  R17,R30
000442 940e 0747 	CALL SUBOPT_0x17
000444 940c 0554 	JMP  _0x2080001
                 ;
                 ;#define LED_GREEN  PORTA.0
                 ;
                 ;#ifndef RXB8
                 ;#define RXB8 1
                 ;#endif
                 ;
                 ;#ifndef TXB8
                 ;#define TXB8 0
                 ;#endif
                 ;
                 ;#ifndef UPE
                 ;#define UPE 2
                 ;#endif
                 ;
                 ;#ifndef DOR
                 ;#define DOR 3
                 ;#endif
                 ;
                 ;#ifndef FE
                 ;#define FE 4
                 ;#endif
                 ;
                 ;#ifndef UDRE
                 ;#define UDRE 5
                 ;#endif
                 ;
                 ;#ifndef RXC
                 ;#define RXC 7
                 ;#endif
                 ;
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 250
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index,rx_rd_index,rx_counter;
                 ;#else
                 ;unsigned int rx_wr_index,rx_rd_index,rx_counter;
                 ;#endif
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0044 {
                 _usart_rx_isr:
000446 93ea      	ST   -Y,R30
000447 93fa      	ST   -Y,R31
000448 b7ef      	IN   R30,SREG
000449 93ea      	ST   -Y,R30
                 ; 0000 0045 char status,data;
                 ; 0000 0046 status=UCSRA;
00044a 931a      	ST   -Y,R17
00044b 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
00044c b11b      	IN   R17,11
                 ; 0000 0047 data=UDR;
00044d b10c      	IN   R16,12
                 ; 0000 0048 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00044e 2fe1      	MOV  R30,R17
00044f 71ec      	ANDI R30,LOW(0x1C)
000450 f489      	BRNE _0x6E
                 ; 0000 0049    {
                 ; 0000 004A    rx_buffer[rx_wr_index++]=data;
000451 2de5      	MOV  R30,R5
000452 9453      	INC  R5
000453 e0f0      	LDI  R31,0
000454 5ae0      	SUBI R30,LOW(-_rx_buffer)
000455 4ffd      	SBCI R31,HIGH(-_rx_buffer)
000456 8300      	ST   Z,R16
                 ; 0000 004B #if RX_BUFFER_SIZE == 256
                 ; 0000 004C    // special case for receiver buffer size=256
                 ; 0000 004D    if (++rx_counter == 0) rx_buffer_overflow=1;
                 ; 0000 004E #else
                 ; 0000 004F    if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
000457 efea      	LDI  R30,LOW(250)
000458 15e5      	CP   R30,R5
000459 f409      	BRNE _0x6F
00045a 2455      	CLR  R5
                 ; 0000 0050    if (++rx_counter == RX_BUFFER_SIZE)
                 _0x6F:
00045b 9473      	INC  R7
00045c efea      	LDI  R30,LOW(250)
00045d 15e7      	CP   R30,R7
00045e f419      	BRNE _0x70
                 ; 0000 0051       {
                 ; 0000 0052       rx_counter=0;
00045f 2477      	CLR  R7
                 ; 0000 0053       rx_buffer_overflow=1;
000460 9468      	SET
000461 f820      	BLD  R2,0
                 ; 0000 0054       }
                 ; 0000 0055 #endif
                 ; 0000 0056    }
                 _0x70:
                 ; 0000 0057 }
                 _0x6E:
000462 9109      	LD   R16,Y+
000463 9119      	LD   R17,Y+
000464 91e9      	LD   R30,Y+
000465 bfef      	OUT  SREG,R30
000466 91f9      	LD   R31,Y+
000467 91e9      	LD   R30,Y+
000468 9518      	RETI
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 005E {
                 ; 0000 005F char data;
                 ; 0000 0060 while (rx_counter==0);
                 ;	data -> R17
                 ; 0000 0061 data=rx_buffer[rx_rd_index++];
                 ; 0000 0062 #if RX_BUFFER_SIZE != 256
                 ; 0000 0063 if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
                 ; 0000 0064 #endif
                 ; 0000 0065 #asm("cli")
                 ; 0000 0066 --rx_counter;
                 ; 0000 0067 #asm("sei")
                 ; 0000 0068 return data;
                 ; 0000 0069 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;// SPI functions
                 ;#include <spi.h>
                 ;
                 ;// Declare your global variables here
                 ;//flash
                 ;unsigned char data1[16] = {0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87,0x12,0x34,0x56,0x78,0x01,0xFE,0x01,0xFE};
                 
                 	.DSEG
                 ;unsigned char data2[4]  = {0,0,0,0x01};
                 ;unsigned char DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
                 ;
                 ;unsigned char g_ucTempbuf[20];
                 ;void delay1(unsigned int z)
                 ; 0000 007B {
                 
                 	.CSEG
                 _delay1:
                 ; 0000 007C 	unsigned int x;
                 ; 0000 007D     //unsigned int y;
                 ; 0000 007E 	for(x=z;x>0;x--) delay_ms(1);
000469 93ba      	ST   -Y,R27
00046a 93aa      	ST   -Y,R26
00046b 931a      	ST   -Y,R17
00046c 930a      	ST   -Y,R16
                 ;	z -> Y+2
                 ;	x -> R16,R17
                +
00046d 810a     +LDD R16 , Y + 2
00046e 811b     +LDD R17 , Y + 2 + 1
                 	__GETWRS 16,17,2
                 _0x79:
00046f 2400      	CLR  R0
000470 1600      	CP   R0,R16
000471 0601      	CPC  R0,R17
000472 f428      	BRSH _0x7A
000473 940e 074e 	CALL SUBOPT_0x18
                +
000475 5001     +SUBI R16 , LOW ( 1 )
000476 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000477 cff7      	RJMP _0x79
                 _0x7A:
                 ; 0000 0080 }
000478 8119      	LDD  R17,Y+1
000479 8108      	LDD  R16,Y+0
00047a 9624      	ADIW R28,4
00047b 9508      	RET
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0084 {
                 _main:
                 ; 0000 0085 // Declare your local variables here
                 ; 0000 0086     unsigned char status,i;
                 ; 0000 0087     unsigned int temp;
                 ; 0000 0088 
                 ; 0000 0089 // Input/Output Ports initialization
                 ; 0000 008A // Port A initialization
                 ; 0000 008B // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 008C // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 008D PORTA=0x00;
                 ;	status -> R17
                 ;	i -> R16
                 ;	temp -> R18,R19
00047c e0e0      	LDI  R30,LOW(0)
00047d bbeb      	OUT  0x1B,R30
                 ; 0000 008E DDRA=0xFF;
00047e efef      	LDI  R30,LOW(255)
00047f bbea      	OUT  0x1A,R30
                 ; 0000 008F 
                 ; 0000 0090 // Port B initialization
                 ; 0000 0091 // Func7=Out Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0000 0092 // State7=0 State6=T State5=0 State4=0 State3=1 State2=T State1=T State0=T
                 ; 0000 0093 PORTB=0x08;
000480 e0e8      	LDI  R30,LOW(8)
000481 bbe8      	OUT  0x18,R30
                 ; 0000 0094 DDRB=0xB8;
000482 ebe8      	LDI  R30,LOW(184)
000483 bbe7      	OUT  0x17,R30
                 ; 0000 0095 
                 ; 0000 0096 // Port C initialization
                 ; 0000 0097 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0098 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0099 PORTC=0x00;
000484 e0e0      	LDI  R30,LOW(0)
000485 bbe5      	OUT  0x15,R30
                 ; 0000 009A DDRC=0x00;
000486 bbe4      	OUT  0x14,R30
                 ; 0000 009B 
                 ; 0000 009C // Port D initialization
                 ; 0000 009D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 009E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 009F PORTD=0x00;
000487 bbe2      	OUT  0x12,R30
                 ; 0000 00A0 DDRD=0x00;
000488 bbe1      	OUT  0x11,R30
                 ; 0000 00A1 
                 ; 0000 00A2 // Timer/Counter 0 initialization
                 ; 0000 00A3 // Clock source: System Clock
                 ; 0000 00A4 // Clock value: Timer 0 Stopped
                 ; 0000 00A5 // Mode: Normal top=0xFF
                 ; 0000 00A6 // OC0 output: Disconnected
                 ; 0000 00A7 TCCR0=0x00;
000489 bfe3      	OUT  0x33,R30
                 ; 0000 00A8 TCNT0=0x00;
00048a bfe2      	OUT  0x32,R30
                 ; 0000 00A9 OCR0=0x00;
00048b bfec      	OUT  0x3C,R30
                 ; 0000 00AA 
                 ; 0000 00AB // Timer/Counter 1 initialization
                 ; 0000 00AC // Clock source: System Clock
                 ; 0000 00AD // Clock value: Timer1 Stopped
                 ; 0000 00AE // Mode: Normal top=0xFFFF
                 ; 0000 00AF // OC1A output: Discon.
                 ; 0000 00B0 // OC1B output: Discon.
                 ; 0000 00B1 // Noise Canceler: Off
                 ; 0000 00B2 // Input Capture on Falling Edge
                 ; 0000 00B3 // Timer1 Overflow Interrupt: Off
                 ; 0000 00B4 // Input Capture Interrupt: Off
                 ; 0000 00B5 // Compare A Match Interrupt: Off
                 ; 0000 00B6 // Compare B Match Interrupt: Off
                 ; 0000 00B7 TCCR1A=0x00;
00048c bdef      	OUT  0x2F,R30
                 ; 0000 00B8 TCCR1B=0x00;
00048d bdee      	OUT  0x2E,R30
                 ; 0000 00B9 TCNT1H=0x00;
00048e bded      	OUT  0x2D,R30
                 ; 0000 00BA TCNT1L=0x00;
00048f bdec      	OUT  0x2C,R30
                 ; 0000 00BB ICR1H=0x00;
000490 bde7      	OUT  0x27,R30
                 ; 0000 00BC ICR1L=0x00;
000491 bde6      	OUT  0x26,R30
                 ; 0000 00BD OCR1AH=0x00;
000492 bdeb      	OUT  0x2B,R30
                 ; 0000 00BE OCR1AL=0x00;
000493 bdea      	OUT  0x2A,R30
                 ; 0000 00BF OCR1BH=0x00;
000494 bde9      	OUT  0x29,R30
                 ; 0000 00C0 OCR1BL=0x00;
000495 bde8      	OUT  0x28,R30
                 ; 0000 00C1 
                 ; 0000 00C2 // Timer/Counter 2 initialization
                 ; 0000 00C3 // Clock source: System Clock
                 ; 0000 00C4 // Clock value: Timer2 Stopped
                 ; 0000 00C5 // Mode: Normal top=0xFF
                 ; 0000 00C6 // OC2 output: Disconnected
                 ; 0000 00C7 ASSR=0x00;
000496 bde2      	OUT  0x22,R30
                 ; 0000 00C8 TCCR2=0x00;
000497 bde5      	OUT  0x25,R30
                 ; 0000 00C9 TCNT2=0x00;
000498 bde4      	OUT  0x24,R30
                 ; 0000 00CA OCR2=0x00;
000499 bde3      	OUT  0x23,R30
                 ; 0000 00CB 
                 ; 0000 00CC // External Interrupt(s) initialization
                 ; 0000 00CD // INT0: Off
                 ; 0000 00CE // INT1: Off
                 ; 0000 00CF // INT2: Off
                 ; 0000 00D0 MCUCR=0x00;
00049a bfe5      	OUT  0x35,R30
                 ; 0000 00D1 MCUCSR=0x00;
00049b bfe4      	OUT  0x34,R30
                 ; 0000 00D2 
                 ; 0000 00D3 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00D4 TIMSK=0x00;
00049c bfe9      	OUT  0x39,R30
                 ; 0000 00D5 
                 ; 0000 00D6 // USART initialization
                 ; 0000 00D7 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 00D8 // USART Receiver: On
                 ; 0000 00D9 // USART Transmitter: On
                 ; 0000 00DA // USART Mode: Asynchronous
                 ; 0000 00DB // USART Baud Rate: 115200
                 ; 0000 00DC UCSRA=0x00;
00049d b9eb      	OUT  0xB,R30
                 ; 0000 00DD UCSRB=0x98;
00049e e9e8      	LDI  R30,LOW(152)
00049f b9ea      	OUT  0xA,R30
                 ; 0000 00DE UCSRC=0x06;
0004a0 e0e6      	LDI  R30,LOW(6)
0004a1 bde0      	OUT  0x20,R30
                 ; 0000 00DF UBRRH=0x00;
0004a2 e0e0      	LDI  R30,LOW(0)
0004a3 bde0      	OUT  0x20,R30
                 ; 0000 00E0 UBRRL=0x03;
0004a4 e0e3      	LDI  R30,LOW(3)
0004a5 b9e9      	OUT  0x9,R30
                 ; 0000 00E1 
                 ; 0000 00E2 // Analog Comparator initialization
                 ; 0000 00E3 // Analog Comparator: Off
                 ; 0000 00E4 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 00E5 ACSR=0x80;
0004a6 e8e0      	LDI  R30,LOW(128)
0004a7 b9e8      	OUT  0x8,R30
                 ; 0000 00E6 SFIOR=0x00;
0004a8 e0e0      	LDI  R30,LOW(0)
0004a9 bfe0      	OUT  0x30,R30
                 ; 0000 00E7 
                 ; 0000 00E8 // ADC initialization
                 ; 0000 00E9 // ADC disabled
                 ; 0000 00EA ADCSRA=0x00;
0004aa b9e6      	OUT  0x6,R30
                 ; 0000 00EB 
                 ; 0000 00EC // SPI initialization
                 ; 0000 00ED // SPI Type: Master
                 ; 0000 00EE // SPI Clock Rate: 460.800 kHz
                 ; 0000 00EF // SPI Clock Phase: Cycle Start
                 ; 0000 00F0 // SPI Clock Polarity: Low
                 ; 0000 00F1 // SPI Data Order: MSB First
                 ; 0000 00F2 SPCR=0x51;
0004ab e5e1      	LDI  R30,LOW(81)
0004ac b9ed      	OUT  0xD,R30
                 ; 0000 00F3 SPSR=0x00;
0004ad e0e0      	LDI  R30,LOW(0)
0004ae b9ee      	OUT  0xE,R30
                 ; 0000 00F4 
                 ; 0000 00F5 // TWI initialization
                 ; 0000 00F6 // TWI disabled
                 ; 0000 00F7 TWCR=0x00;
0004af bfe6      	OUT  0x36,R30
                 ; 0000 00F8 
                 ; 0000 00F9 // Global enable interrupts
                 ; 0000 00FA #asm("sei")
0004b0 9478      	sei
                 ; 0000 00FB 
                 ; 0000 00FC printf("hello\r");
                +
0004b1 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0004b2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0004b3 940e 0752 	CALL SUBOPT_0x19
                 ; 0000 00FD 
                 ; 0000 00FE PcdReset();
0004b5 940e 0759 	CALL SUBOPT_0x1A
                 ; 0000 00FF delay_ms(1);
                 ; 0000 0100 PcdAntennaOff();
0004b7 940e 075c 	CALL SUBOPT_0x1B
                 ; 0000 0101 delay_ms(1);
                 ; 0000 0102 PcdAntennaOn();
0004b9 940e 075f 	CALL SUBOPT_0x1C
                 ; 0000 0103 delay_ms(1);
                 ; 0000 0104 
                 ; 0000 0105 while (1)
                 _0x7B:
                 ; 0000 0106     {
                 ; 0000 0107         status = PcdRequest(PICC_REQALL, g_ucTempbuf);
0004bb 940e 0762 	CALL SUBOPT_0x1D
                 ; 0000 0108         if (status != MI_OK)
0004bd f039      	BREQ _0x7E
                 ; 0000 0109         {
                 ; 0000 010A             PcdReset();
0004be 940e 0759 	CALL SUBOPT_0x1A
                 ; 0000 010B             delay_ms(1);
                 ; 0000 010C             PcdAntennaOff();
0004c0 940e 075c 	CALL SUBOPT_0x1B
                 ; 0000 010D             delay_ms(1);
                 ; 0000 010E             PcdAntennaOn();
0004c2 940e 075f 	CALL SUBOPT_0x1C
                 ; 0000 010F             delay_ms(1);
                 ; 0000 0110 			continue;
0004c4 cff6      	RJMP _0x7B
                 ; 0000 0111         }
                 ; 0000 0112 
                 ; 0000 0113 		printf("print1");
                 _0x7E:
                +
0004c5 e8e9     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
0004c6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
0004c7 940e 0752 	CALL SUBOPT_0x19
                 ; 0000 0114 
                 ; 0000 0115         for(i=0;i<2;i++)
0004c9 e000      	LDI  R16,LOW(0)
                 _0x80:
0004ca 3002      	CPI  R16,2
0004cb f430      	BRSH _0x81
                 ; 0000 0116 		{
                 ; 0000 0117 		    temp=g_ucTempbuf[i];
0004cc 940e 06f2 	CALL SUBOPT_0x7
0004ce 940e 076b 	CALL SUBOPT_0x1E
                 ; 0000 0118 			printf("%X",temp);
                 ; 0000 0119 		}
0004d0 5f0f      	SUBI R16,-1
0004d1 cff8      	RJMP _0x80
                 _0x81:
                 ; 0000 011A 
                 ; 0000 011B         status = PcdAnticoll(g_ucTempbuf);
0004d2 940e 077d 	CALL SUBOPT_0x1F
                 ; 0000 011C         if (status != MI_OK) continue;
0004d4 f731      	BRNE _0x7B
                 ; 0000 011D 
                 ; 0000 011E 		printf("print2:");
                +
0004d5 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
0004d6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
0004d7 940e 0752 	CALL SUBOPT_0x19
                 ; 0000 011F 
                 ; 0000 0120         for(i=0;i<4;i++)
0004d9 e000      	LDI  R16,LOW(0)
                 _0x84:
0004da 3004      	CPI  R16,4
0004db f430      	BRSH _0x85
                 ; 0000 0121 		{
                 ; 0000 0122 		    temp=g_ucTempbuf[i];
0004dc 940e 06f2 	CALL SUBOPT_0x7
0004de 940e 076b 	CALL SUBOPT_0x1E
                 ; 0000 0123 			printf("%X",temp);
                 ; 0000 0124 		}
0004e0 5f0f      	SUBI R16,-1
0004e1 cff8      	RJMP _0x84
                 _0x85:
                 ; 0000 0125 
                 ; 0000 0126 		///////////////////////////////////////////////////////////
                 ; 0000 0127 
                 ; 0000 0128          status = PcdSelect(g_ucTempbuf);
0004e2 940e 0784 	CALL SUBOPT_0x20
                 ; 0000 0129          if (status != MI_OK) continue;
0004e4 f6b1      	BRNE _0x7B
                 ; 0000 012A 
                 ; 0000 012B          status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);
0004e5 940e 078b 	CALL SUBOPT_0x21
                 ; 0000 012C          if (status != MI_OK) continue;
0004e7 f699      	BRNE _0x7B
                 ; 0000 012D 
                 ; 0000 012E          status = PcdWrite(1, data1);
0004e8 e0e1      	LDI  R30,LOW(1)
0004e9 93ea      	ST   -Y,R30
0004ea e5aa      	LDI  R26,LOW(_data1)
0004eb e0b3      	LDI  R27,HIGH(_data1)
0004ec dd01      	RCALL _PcdWrite
0004ed 2f1e      	MOV  R17,R30
                 ; 0000 012F          if (status != MI_OK) continue;
0004ee 3010      	CPI  R17,0
0004ef f659      	BRNE _0x7B
                 ; 0000 0130 
                 ; 0000 0131         while(1)
                 _0x89:
                 ; 0000 0132 		{
                 ; 0000 0133             status = PcdRequest(PICC_REQALL, g_ucTempbuf);
0004f0 940e 0762 	CALL SUBOPT_0x1D
                 ; 0000 0134             if (status != MI_OK)
0004f2 f039      	BREQ _0x8C
                 ; 0000 0135             {
                 ; 0000 0136                 PcdReset();
0004f3 940e 0759 	CALL SUBOPT_0x1A
                 ; 0000 0137                 delay_ms(1);
                 ; 0000 0138                 PcdAntennaOff();
0004f5 940e 075c 	CALL SUBOPT_0x1B
                 ; 0000 0139                 delay_ms(1);
                 ; 0000 013A                 PcdAntennaOn();
0004f7 940e 075f 	CALL SUBOPT_0x1C
                 ; 0000 013B                 delay_ms(1);;
                 ; 0000 013C 			    continue;
0004f9 cff6      	RJMP _0x89
                 ; 0000 013D             }
                 ; 0000 013E 
                 ; 0000 013F 		    status = PcdAnticoll(g_ucTempbuf);
                 _0x8C:
0004fa 940e 077d 	CALL SUBOPT_0x1F
                 ; 0000 0140             if (status != MI_OK)continue;
0004fc f799      	BRNE _0x89
                 ; 0000 0141 
                 ; 0000 0142 		    status = PcdSelect(g_ucTempbuf);
0004fd 940e 0784 	CALL SUBOPT_0x20
                 ; 0000 0143             if (status != MI_OK)continue;
0004ff f781      	BRNE _0x89
                 ; 0000 0144 
                 ; 0000 0145             status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);
000500 940e 078b 	CALL SUBOPT_0x21
                 ; 0000 0146             if (status != MI_OK) continue;
000502 f769      	BRNE _0x89
                 ; 0000 0147 
                 ; 0000 0148             status = PcdValue(PICC_DECREMENT,1,data2);
000503 ece0      	LDI  R30,LOW(192)
000504 93ea      	ST   -Y,R30
000505 e0e1      	LDI  R30,LOW(1)
000506 93ea      	ST   -Y,R30
000507 e6aa      	LDI  R26,LOW(_data2)
000508 e0b3      	LDI  R27,HIGH(_data2)
000509 dd35      	RCALL _PcdValue
00050a 2f1e      	MOV  R17,R30
                 ; 0000 0149             if (status != MI_OK) continue;
00050b 3010      	CPI  R17,0
00050c f719      	BRNE _0x89
                 ; 0000 014A 
                 ; 0000 014B             status = PcdBakValue(1, 2);
00050d e0e1      	LDI  R30,LOW(1)
00050e 93ea      	ST   -Y,R30
00050f e0a2      	LDI  R26,LOW(2)
000510 dd94      	RCALL _PcdBakValue
000511 2f1e      	MOV  R17,R30
                 ; 0000 014C             if (status != MI_OK)continue;
000512 3010      	CPI  R17,0
000513 f6e1      	BRNE _0x89
                 ; 0000 014D 
                 ; 0000 014E             status = PcdRead(2, g_ucTempbuf);
000514 e0e2      	LDI  R30,LOW(2)
000515 93ea      	ST   -Y,R30
000516 e7a4      	LDI  R26,LOW(_g_ucTempbuf)
000517 e0b3      	LDI  R27,HIGH(_g_ucTempbuf)
000518 dca4      	RCALL _PcdRead
000519 2f1e      	MOV  R17,R30
                 ; 0000 014F             if (status != MI_OK)continue;
00051a 3010      	CPI  R17,0
00051b f6a1      	BRNE _0x89
                 ; 0000 0150 
                 ; 0000 0151         	printf("print3");
                +
00051c e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 25 ) )
00051d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 25 ) )
                 	__POINTW1FN _0x0,25
00051e 940e 0752 	CALL SUBOPT_0x19
                 ; 0000 0152             for(i=0;i<16;i++)
000520 e000      	LDI  R16,LOW(0)
                 _0x94:
000521 3100      	CPI  R16,16
000522 f430      	BRSH _0x95
                 ; 0000 0153 			{
                 ; 0000 0154 			    temp=g_ucTempbuf[i];
000523 940e 06f2 	CALL SUBOPT_0x7
000525 940e 076b 	CALL SUBOPT_0x1E
                 ; 0000 0155 				printf("%X",temp);
                 ; 0000 0156 			}
000527 5f0f      	SUBI R16,-1
000528 cff8      	RJMP _0x94
                 _0x95:
                 ; 0000 0157 
                 ; 0000 0158 		    printf("\n");
                +
000529 eae2     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
00052a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
00052b 940e 0752 	CALL SUBOPT_0x19
                 ; 0000 0159 		    LED_GREEN = 0;
00052d 98d8      	CBI  0x1B,0
                 ; 0000 015A 		    delay1(100);
00052e 940e 079a 	CALL SUBOPT_0x22
                 ; 0000 015B 		    LED_GREEN = 1;
000530 9ad8      	SBI  0x1B,0
                 ; 0000 015C 		    delay1(100);
000531 940e 079a 	CALL SUBOPT_0x22
                 ; 0000 015D 		    LED_GREEN = 0;
000533 98d8      	CBI  0x1B,0
                 ; 0000 015E 		    delay1(200);
000534 eca8      	LDI  R26,LOW(200)
000535 e0b0      	LDI  R27,0
000536 df32      	RCALL _delay1
                 ; 0000 015F 		    LED_GREEN = 1;
000537 9ad8      	SBI  0x1B,0
                 ; 0000 0160 		    PcdHalt();
000538 ddcf      	RCALL _PcdHalt
                 ; 0000 0161 		}
000539 cfb6      	RJMP _0x89
                 ; 0000 0162     }
                 ; 0000 0163 }
                 _0x9E:
00053a cfff      	RJMP _0x9E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _spi:
00053b 93aa      	ST   -Y,R26
00053c 81e8      	LD   R30,Y
00053d b9ef      	OUT  0xF,R30
                 _0x2000003:
00053e 9b77      	SBIS 0xE,7
00053f cffe      	RJMP _0x2000003
000540 b1ef      	IN   R30,0xF
000541 c005      	RJMP _0x2080002
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
000542 93aa      	ST   -Y,R26
                 putchar0:
000543 9b5d           sbis usr,udre
000544 cffe           rjmp putchar0
000545 81e8           ld   r30,y
000546 b9ec           out  udr,r30
                 _0x2080002:
000547 9621      	ADIW R28,1
000548 9508      	RET
                 _put_usart_G101:
000549 93ba      	ST   -Y,R27
00054a 93aa      	ST   -Y,R26
00054b 81aa      	LDD  R26,Y+2
00054c dff5      	RCALL _putchar
00054d 81a8      	LD   R26,Y
00054e 81b9      	LDD  R27,Y+1
00054f 91ed      	LD   R30,X+
000550 91fd      	LD   R31,X+
000551 9631      	ADIW R30,1
000552 93fe      	ST   -X,R31
000553 93ee      	ST   -X,R30
                 _0x2080001:
000554 9623      	ADIW R28,3
000555 9508      	RET
                 __print_G101:
000556 93ba      	ST   -Y,R27
000557 93aa      	ST   -Y,R26
000558 9726      	SBIW R28,6
000559 940e 07e9 	CALL __SAVELOCR6
00055b e010      	LDI  R17,0
00055c 85ac      	LDD  R26,Y+12
00055d 85bd      	LDD  R27,Y+12+1
00055e e0e0      	LDI  R30,LOW(0)
00055f e0f0      	LDI  R31,HIGH(0)
000560 93ed      	ST   X+,R30
000561 93fc      	ST   X,R31
                 _0x2020016:
000562 89ea      	LDD  R30,Y+18
000563 89fb      	LDD  R31,Y+18+1
000564 9631      	ADIW R30,1
000565 8bea      	STD  Y+18,R30
000566 8bfb      	STD  Y+18+1,R31
000567 9731      	SBIW R30,1
000568 91e4      	LPM  R30,Z
000569 2f2e      	MOV  R18,R30
00056a 30e0      	CPI  R30,0
00056b f411      	BRNE PC+3
00056c 940c 0685 	JMP _0x2020018
00056e 2fe1      	MOV  R30,R17
00056f 30e0      	CPI  R30,0
000570 f439      	BRNE _0x202001C
000571 3225      	CPI  R18,37
000572 f411      	BRNE _0x202001D
000573 e011      	LDI  R17,LOW(1)
000574 c002      	RJMP _0x202001E
                 _0x202001D:
000575 940e 079e 	CALL SUBOPT_0x23
                 _0x202001E:
000577 c10c      	RJMP _0x202001B
                 _0x202001C:
000578 30e1      	CPI  R30,LOW(0x1)
000579 f4a9      	BRNE _0x202001F
00057a 3225      	CPI  R18,37
00057b f419      	BRNE _0x2020020
00057c 940e 079e 	CALL SUBOPT_0x23
00057e c104      	RJMP _0x20200C9
                 _0x2020020:
00057f e012      	LDI  R17,LOW(2)
000580 e040      	LDI  R20,LOW(0)
000581 e000      	LDI  R16,LOW(0)
000582 322d      	CPI  R18,45
000583 f411      	BRNE _0x2020021
000584 e001      	LDI  R16,LOW(1)
000585 c0fe      	RJMP _0x202001B
                 _0x2020021:
000586 322b      	CPI  R18,43
000587 f411      	BRNE _0x2020022
000588 e24b      	LDI  R20,LOW(43)
000589 c0fa      	RJMP _0x202001B
                 _0x2020022:
00058a 3220      	CPI  R18,32
00058b f411      	BRNE _0x2020023
00058c e240      	LDI  R20,LOW(32)
00058d c0f6      	RJMP _0x202001B
                 _0x2020023:
00058e c002      	RJMP _0x2020024
                 _0x202001F:
00058f 30e2      	CPI  R30,LOW(0x2)
000590 f439      	BRNE _0x2020025
                 _0x2020024:
000591 e050      	LDI  R21,LOW(0)
000592 e013      	LDI  R17,LOW(3)
000593 3320      	CPI  R18,48
000594 f411      	BRNE _0x2020026
000595 6800      	ORI  R16,LOW(128)
000596 c0ed      	RJMP _0x202001B
                 _0x2020026:
000597 c004      	RJMP _0x2020027
                 _0x2020025:
000598 30e3      	CPI  R30,LOW(0x3)
000599 f011      	BREQ PC+3
00059a 940c 0684 	JMP _0x202001B
                 _0x2020027:
00059c 3320      	CPI  R18,48
00059d f010      	BRLO _0x202002A
00059e 332a      	CPI  R18,58
00059f f008      	BRLO _0x202002B
                 _0x202002A:
0005a0 c007      	RJMP _0x2020029
                 _0x202002B:
0005a1 e0aa      	LDI  R26,LOW(10)
0005a2 9f5a      	MUL  R21,R26
0005a3 2d50      	MOV  R21,R0
0005a4 2fe2      	MOV  R30,R18
0005a5 53e0      	SUBI R30,LOW(48)
0005a6 0f5e      	ADD  R21,R30
0005a7 c0dc      	RJMP _0x202001B
                 _0x2020029:
0005a8 2fe2      	MOV  R30,R18
0005a9 36e3      	CPI  R30,LOW(0x63)
0005aa f449      	BRNE _0x202002F
0005ab 940e 07a5 	CALL SUBOPT_0x24
0005ad 89e8      	LDD  R30,Y+16
0005ae 89f9      	LDD  R31,Y+16+1
0005af 81a4      	LDD  R26,Z+4
0005b0 93aa      	ST   -Y,R26
0005b1 940e 07ab 	CALL SUBOPT_0x25
0005b3 c0cf      	RJMP _0x2020030
                 _0x202002F:
0005b4 37e3      	CPI  R30,LOW(0x73)
0005b5 f441      	BRNE _0x2020032
0005b6 940e 07a5 	CALL SUBOPT_0x24
0005b8 940e 07b1 	CALL SUBOPT_0x26
0005ba 940e 06b2 	CALL _strlen
0005bc 2f1e      	MOV  R17,R30
0005bd c00a      	RJMP _0x2020033
                 _0x2020032:
0005be 37e0      	CPI  R30,LOW(0x70)
0005bf f461      	BRNE _0x2020035
0005c0 940e 07a5 	CALL SUBOPT_0x24
0005c2 940e 07b1 	CALL SUBOPT_0x26
0005c4 940e 06be 	CALL _strlenf
0005c6 2f1e      	MOV  R17,R30
0005c7 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0005c8 6002      	ORI  R16,LOW(2)
0005c9 770f      	ANDI R16,LOW(127)
0005ca e030      	LDI  R19,LOW(0)
0005cb c035      	RJMP _0x2020036
                 _0x2020035:
0005cc 36e4      	CPI  R30,LOW(0x64)
0005cd f011      	BREQ _0x2020039
0005ce 36e9      	CPI  R30,LOW(0x69)
0005cf f411      	BRNE _0x202003A
                 _0x2020039:
0005d0 6004      	ORI  R16,LOW(4)
0005d1 c002      	RJMP _0x202003B
                 _0x202003A:
0005d2 37e5      	CPI  R30,LOW(0x75)
0005d3 f431      	BRNE _0x202003C
                 _0x202003B:
0005d4 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0005d5 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0005d6 83ee      	STD  Y+6,R30
0005d7 83ff      	STD  Y+6+1,R31
0005d8 e015      	LDI  R17,LOW(5)
0005d9 c00d      	RJMP _0x202003D
                 _0x202003C:
0005da 35e8      	CPI  R30,LOW(0x58)
0005db f411      	BRNE _0x202003F
0005dc 6008      	ORI  R16,LOW(8)
0005dd c004      	RJMP _0x2020040
                 _0x202003F:
0005de 37e8      	CPI  R30,LOW(0x78)
0005df f011      	BREQ PC+3
0005e0 940c 0683 	JMP _0x2020071
                 _0x2020040:
0005e2 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0005e3 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0005e4 83ee      	STD  Y+6,R30
0005e5 83ff      	STD  Y+6+1,R31
0005e6 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0005e7 ff02      	SBRS R16,2
0005e8 c014      	RJMP _0x2020042
0005e9 940e 07a5 	CALL SUBOPT_0x24
0005eb 940e 07bb 	CALL SUBOPT_0x27
0005ed 85ab      	LDD  R26,Y+11
0005ee 23aa      	TST  R26
0005ef f43a      	BRPL _0x2020043
0005f0 85ea      	LDD  R30,Y+10
0005f1 85fb      	LDD  R31,Y+10+1
0005f2 940e 07d1 	CALL __ANEGW1
0005f4 87ea      	STD  Y+10,R30
0005f5 87fb      	STD  Y+10+1,R31
0005f6 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0005f7 3040      	CPI  R20,0
0005f8 f011      	BREQ _0x2020044
0005f9 5f1f      	SUBI R17,-LOW(1)
0005fa c001      	RJMP _0x2020045
                 _0x2020044:
0005fb 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0005fc c004      	RJMP _0x2020046
                 _0x2020042:
0005fd 940e 07a5 	CALL SUBOPT_0x24
0005ff 940e 07bb 	CALL SUBOPT_0x27
                 _0x2020046:
                 _0x2020036:
000601 fd00      	SBRC R16,0
000602 c011      	RJMP _0x2020047
                 _0x2020048:
000603 1715      	CP   R17,R21
000604 f478      	BRSH _0x202004A
000605 ff07      	SBRS R16,7
000606 c008      	RJMP _0x202004B
000607 ff02      	SBRS R16,2
000608 c004      	RJMP _0x202004C
000609 7f0b      	ANDI R16,LOW(251)
00060a 2f24      	MOV  R18,R20
00060b 5011      	SUBI R17,LOW(1)
00060c c001      	RJMP _0x202004D
                 _0x202004C:
00060d e320      	LDI  R18,LOW(48)
                 _0x202004D:
00060e c001      	RJMP _0x202004E
                 _0x202004B:
00060f e220      	LDI  R18,LOW(32)
                 _0x202004E:
000610 940e 079e 	CALL SUBOPT_0x23
000612 5051      	SUBI R21,LOW(1)
000613 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000614 2f31      	MOV  R19,R17
000615 ff01      	SBRS R16,1
000616 c017      	RJMP _0x202004F
                 _0x2020050:
000617 3030      	CPI  R19,0
000618 f0a1      	BREQ _0x2020052
000619 ff03      	SBRS R16,3
00061a c006      	RJMP _0x2020053
00061b 81ee      	LDD  R30,Y+6
00061c 81ff      	LDD  R31,Y+6+1
00061d 9125      	LPM  R18,Z+
00061e 83ee      	STD  Y+6,R30
00061f 83ff      	STD  Y+6+1,R31
000620 c005      	RJMP _0x2020054
                 _0x2020053:
000621 81ae      	LDD  R26,Y+6
000622 81bf      	LDD  R27,Y+6+1
000623 912d      	LD   R18,X+
000624 83ae      	STD  Y+6,R26
000625 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000626 940e 079e 	CALL SUBOPT_0x23
000628 3050      	CPI  R21,0
000629 f009      	BREQ _0x2020055
00062a 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00062b 5031      	SUBI R19,LOW(1)
00062c cfea      	RJMP _0x2020050
                 _0x2020052:
00062d c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00062e e320      	LDI  R18,LOW(48)
00062f 81ee      	LDD  R30,Y+6
000630 81ff      	LDD  R31,Y+6+1
000631 940e 07e0 	CALL __GETW1PF
000633 87e8      	STD  Y+8,R30
000634 87f9      	STD  Y+8+1,R31
000635 81ee      	LDD  R30,Y+6
000636 81ff      	LDD  R31,Y+6+1
000637 9632      	ADIW R30,2
000638 83ee      	STD  Y+6,R30
000639 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00063a 85e8      	LDD  R30,Y+8
00063b 85f9      	LDD  R31,Y+8+1
00063c 85aa      	LDD  R26,Y+10
00063d 85bb      	LDD  R27,Y+10+1
00063e 17ae      	CP   R26,R30
00063f 07bf      	CPC  R27,R31
000640 f050      	BRLO _0x202005C
000641 5f2f      	SUBI R18,-LOW(1)
000642 85a8      	LDD  R26,Y+8
000643 85b9      	LDD  R27,Y+8+1
000644 85ea      	LDD  R30,Y+10
000645 85fb      	LDD  R31,Y+10+1
000646 1bea      	SUB  R30,R26
000647 0bfb      	SBC  R31,R27
000648 87ea      	STD  Y+10,R30
000649 87fb      	STD  Y+10+1,R31
00064a cfef      	RJMP _0x202005A
                 _0x202005C:
00064b 332a      	CPI  R18,58
00064c f028      	BRLO _0x202005D
00064d ff03      	SBRS R16,3
00064e c002      	RJMP _0x202005E
00064f 5f29      	SUBI R18,-LOW(7)
000650 c001      	RJMP _0x202005F
                 _0x202005E:
000651 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000652 fd04      	SBRC R16,4
000653 c01a      	RJMP _0x2020061
000654 3321      	CPI  R18,49
000655 f420      	BRSH _0x2020063
000656 85a8      	LDD  R26,Y+8
000657 85b9      	LDD  R27,Y+8+1
000658 9711      	SBIW R26,1
000659 f409      	BRNE _0x2020062
                 _0x2020063:
00065a c009      	RJMP _0x20200CA
                 _0x2020062:
00065b 1753      	CP   R21,R19
00065c f010      	BRLO _0x2020067
00065d ff00      	SBRS R16,0
00065e c001      	RJMP _0x2020068
                 _0x2020067:
00065f c013      	RJMP _0x2020066
                 _0x2020068:
000660 e220      	LDI  R18,LOW(32)
000661 ff07      	SBRS R16,7
000662 c00b      	RJMP _0x2020069
000663 e320      	LDI  R18,LOW(48)
                 _0x20200CA:
000664 6100      	ORI  R16,LOW(16)
000665 ff02      	SBRS R16,2
000666 c007      	RJMP _0x202006A
000667 7f0b      	ANDI R16,LOW(251)
000668 934a      	ST   -Y,R20
000669 940e 07ab 	CALL SUBOPT_0x25
00066b 3050      	CPI  R21,0
00066c f009      	BREQ _0x202006B
00066d 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00066e 940e 079e 	CALL SUBOPT_0x23
000670 3050      	CPI  R21,0
000671 f009      	BREQ _0x202006C
000672 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000673 5031      	SUBI R19,LOW(1)
000674 85a8      	LDD  R26,Y+8
000675 85b9      	LDD  R27,Y+8+1
000676 9712      	SBIW R26,2
000677 f008      	BRLO _0x2020059
000678 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000679 ff00      	SBRS R16,0
00067a c008      	RJMP _0x202006D
                 _0x202006E:
00067b 3050      	CPI  R21,0
00067c f031      	BREQ _0x2020070
00067d 5051      	SUBI R21,LOW(1)
00067e e2e0      	LDI  R30,LOW(32)
00067f 93ea      	ST   -Y,R30
000680 940e 07ab 	CALL SUBOPT_0x25
000682 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
000683 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000684 cedd      	RJMP _0x2020016
                 _0x2020018:
000685 85ac      	LDD  R26,Y+12
000686 85bd      	LDD  R27,Y+12+1
000687 940e 07dc 	CALL __GETW1P
000689 940e 07f0 	CALL __LOADLOCR6
00068b 9664      	ADIW R28,20
00068c 9508      	RET
                 _printf:
00068d 92ff      	PUSH R15
00068e 2ef8      	MOV  R15,R24
00068f 9726      	SBIW R28,6
000690 931a      	ST   -Y,R17
000691 930a      	ST   -Y,R16
000692 01de      	MOVW R26,R28
000693 9614      	ADIW R26,4
000694 940e 07cd 	CALL __ADDW2R15
000696 018d      	MOVW R16,R26
000697 e0e0      	LDI  R30,LOW(0)
000698 83ec      	STD  Y+4,R30
000699 83ed      	STD  Y+4+1,R30
00069a 83ee      	STD  Y+6,R30
00069b 83ef      	STD  Y+6+1,R30
00069c 01de      	MOVW R26,R28
00069d 9618      	ADIW R26,8
00069e 940e 07cd 	CALL __ADDW2R15
0006a0 940e 07dc 	CALL __GETW1P
0006a2 93fa      	ST   -Y,R31
0006a3 93ea      	ST   -Y,R30
0006a4 931a      	ST   -Y,R17
0006a5 930a      	ST   -Y,R16
0006a6 e4e9      	LDI  R30,LOW(_put_usart_G101)
0006a7 e0f5      	LDI  R31,HIGH(_put_usart_G101)
0006a8 93fa      	ST   -Y,R31
0006a9 93ea      	ST   -Y,R30
0006aa 01de      	MOVW R26,R28
0006ab 9618      	ADIW R26,8
0006ac dea9      	RCALL __print_G101
0006ad 8119      	LDD  R17,Y+1
0006ae 8108      	LDD  R16,Y+0
0006af 9628      	ADIW R28,8
0006b0 90ff      	POP  R15
0006b1 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
0006b2 93ba      	ST   -Y,R27
0006b3 93aa      	ST   -Y,R26
0006b4 91a9          ld   r26,y+
0006b5 91b9          ld   r27,y+
0006b6 27ee          clr  r30
0006b7 27ff          clr  r31
                 strlen0:
0006b8 916d          ld   r22,x+
0006b9 2366          tst  r22
0006ba f011          breq strlen1
0006bb 9631          adiw r30,1
0006bc cffb          rjmp strlen0
                 strlen1:
0006bd 9508          ret
                 _strlenf:
0006be 93ba      	ST   -Y,R27
0006bf 93aa      	ST   -Y,R26
0006c0 27aa          clr  r26
0006c1 27bb          clr  r27
0006c2 91e9          ld   r30,y+
0006c3 91f9          ld   r31,y+
                 strlenf0:
0006c4 9005      	lpm  r0,z+
0006c5 2000          tst  r0
0006c6 f011          breq strlenf1
0006c7 9611          adiw r26,1
0006c8 cffb          rjmp strlenf0
                 strlenf1:
0006c9 01fd          movw r30,r26
0006ca 9508          ret
                 
                 	.DSEG
                 _rx_buffer:
000260           	.BYTE 0xFA
                 _data1:
00035a           	.BYTE 0x10
                 _data2:
00036a           	.BYTE 0x4
                 _DefaultKey:
00036e           	.BYTE 0x6
                 _g_ucTempbuf:
000374           	.BYTE 0x14
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0006cb 93ea      	ST   -Y,R30
0006cc e0a0      	LDI  R26,LOW(0)
0006cd 940c 041f 	JMP  _WriteRawRC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
0006cf 93ba      	ST   -Y,R27
0006d0 93aa      	ST   -Y,R26
0006d1 9762      	SBIW R28,18
0006d2 940e 07eb 	CALL __SAVELOCR4
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0006d5 e0e8      	LDI  R30,LOW(8)
0006d6 93ea      	ST   -Y,R30
0006d7 e0a8      	LDI  R26,LOW(8)
0006d8 940e 043e 	CALL _ClearBitMask
0006da e0ed      	LDI  R30,LOW(13)
0006db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x3:
0006dc e0ec      	LDI  R30,LOW(12)
0006dd 93ea      	ST   -Y,R30
0006de 01fe      	MOVW R30,R28
0006df 9635      	ADIW R30,5
0006e0 93fa      	ST   -Y,R31
0006e1 93ea      	ST   -Y,R30
0006e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x4:
0006e3 93ea      	ST   -Y,R30
0006e4 01fe      	MOVW R30,R28
0006e5 9638      	ADIW R30,8
0006e6 93fa      	ST   -Y,R31
0006e7 93ea      	ST   -Y,R30
0006e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0006e9 93ea      	ST   -Y,R30
0006ea e8a0      	LDI  R26,LOW(128)
0006eb 940c 043e 	JMP  _ClearBitMask
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x6:
0006ed 93fa      	ST   -Y,R31
0006ee 93ea      	ST   -Y,R30
0006ef e0e2      	LDI  R30,LOW(2)
0006f0 93ea      	ST   -Y,R30
0006f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
0006f2 2fe0      	MOV  R30,R16
0006f3 e0f0      	LDI  R31,0
0006f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8:
0006f5 0fea      	ADD  R30,R26
0006f6 1ffb      	ADC  R31,R27
0006f7 010f      	MOVW R0,R30
0006f8 01fb      	MOVW R30,R22
0006f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
0006fa 01de      	MOVW R26,R28
0006fb 9616      	ADIW R26,6
0006fc 0fae      	ADD  R26,R30
0006fd 1fbf      	ADC  R27,R31
0006fe 91ec      	LD   R30,X
0006ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000700 93ea      	ST   -Y,R30
000701 e8a0      	LDI  R26,LOW(128)
000702 940c 0437 	JMP  _SetBitMask
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000704 01bf      	MOVW R22,R30
000705 9632      	ADIW R30,2
000706 01de      	MOVW R26,R28
000707 9614      	ADIW R26,4
000708 cfec      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
000709 89ae      	LDD  R26,Y+22
00070a 89bf      	LDD  R27,Y+22+1
00070b 0fae      	ADD  R26,R30
00070c 1fbf      	ADC  R27,R31
00070d 91ec      	LD   R30,X
00070e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
00070f 01fe      	MOVW R30,R28
000710 9634      	ADIW R30,4
000711 93fa      	ST   -Y,R31
000712 93ea      	ST   -Y,R30
000713 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000714 01de      	MOVW R26,R28
000715 9614      	ADIW R26,4
000716 cfde      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xF:
000717 83ec      	STD  Y+4,R30
000718 8de8      	LDD  R30,Y+24
000719 83ed      	STD  Y+5,R30
00071a 01fe      	MOVW R30,R28
00071b 9634      	ADIW R30,4
00071c cfd0      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
00071d 01de      	MOVW R26,R28
00071e 9619      	ADIW R26,9
00071f 940e 03e3 	CALL _CalulateCRC
000721 cfba      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11:
000722 e0e4      	LDI  R30,LOW(4)
000723 e0f0      	LDI  R31,HIGH(4)
000724 17e2      	CP   R30,R18
000725 07f3      	CPC  R31,R19
000726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000727 e0e4      	LDI  R30,LOW(4)
000728 93ea      	ST   -Y,R30
000729 01de      	MOVW R26,R28
00072a 961b      	ADIW R26,11
00072b 940c 03e3 	JMP  _CalulateCRC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
00072d 2f1e      	MOV  R17,R30
00072e 2fa1      	MOV  R26,R17
00072f efee      	LDI  R30,LOW(254)
000730 e0b0      	LDI  R27,0
000731 efff      	SER  R31
000732 17ea      	CP   R30,R26
000733 07fb      	CPC  R31,R27
000734 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000735 83ed      	STD  Y+5,R30
000736 01fe      	MOVW R30,R28
000737 9634      	ADIW R30,4
000738 cfb4      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
000739 81ae      	LDD  R26,Y+6
00073a 81bf      	LDD  R27,Y+6+1
00073b e0f0      	LDI  R31,0
00073c 17ae      	CP   R26,R30
00073d 07bf      	CPC  R27,R31
00073e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00073f 93aa      	ST   -Y,R26
000740 931a      	ST   -Y,R17
000741 81aa      	LDD  R26,Y+2
000742 940e 042a 	CALL _ReadRawRC
000744 2f1e      	MOV  R17,R30
000745 81e9      	LDD  R30,Y+1
000746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000747 81ea      	LDD  R30,Y+2
000748 93ea      	ST   -Y,R30
000749 2fa1      	MOV  R26,R17
00074a 940e 041f 	CALL _WriteRawRC
00074c 8118      	LDD  R17,Y+0
00074d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x18:
00074e e0a1      	LDI  R26,LOW(1)
00074f e0b0      	LDI  R27,0
000750 940c 07c3 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x19:
000752 93fa      	ST   -Y,R31
000753 93ea      	ST   -Y,R30
000754 e080      	LDI  R24,0
000755 940e 068d 	CALL _printf
000757 9622      	ADIW R28,2
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000759 940e 008e 	CALL _PcdReset
00075b cff2      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
00075c 940e 00b8 	CALL _PcdAntennaOff
00075e cfef      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
00075f 940e 00ab 	CALL _PcdAntennaOn
000761 cfec      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000762 e5e2      	LDI  R30,LOW(82)
000763 93ea      	ST   -Y,R30
000764 e7a4      	LDI  R26,LOW(_g_ucTempbuf)
000765 e0b3      	LDI  R27,HIGH(_g_ucTempbuf)
000766 940e 00bd 	CALL _PcdRequest
000768 2f1e      	MOV  R17,R30
000769 3010      	CPI  R17,0
00076a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1E:
00076b 58ec      	SUBI R30,LOW(-_g_ucTempbuf)
00076c 4ffc      	SBCI R31,HIGH(-_g_ucTempbuf)
00076d 8120      	LD   R18,Z
00076e 2733      	CLR  R19
                +
00076f e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
000770 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
000771 93fa      	ST   -Y,R31
000772 93ea      	ST   -Y,R30
000773 01f9      	MOVW R30,R18
000774 2766      	CLR  R22
000775 2777      	CLR  R23
000776 940e 07e4 	CALL __PUTPARD1
000778 e084      	LDI  R24,4
000779 940e 068d 	CALL _printf
00077b 9626      	ADIW R28,6
00077c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
00077d e7a4      	LDI  R26,LOW(_g_ucTempbuf)
00077e e0b3      	LDI  R27,HIGH(_g_ucTempbuf)
00077f 940e 00ec 	CALL _PcdAnticoll
000781 2f1e      	MOV  R17,R30
000782 3010      	CPI  R17,0
000783 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000784 e7a4      	LDI  R26,LOW(_g_ucTempbuf)
000785 e0b3      	LDI  R27,HIGH(_g_ucTempbuf)
000786 940e 0135 	CALL _PcdSelect
000788 2f1e      	MOV  R17,R30
000789 3010      	CPI  R17,0
00078a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21:
00078b e6e0      	LDI  R30,LOW(96)
00078c 93ea      	ST   -Y,R30
00078d e0e1      	LDI  R30,LOW(1)
00078e 93ea      	ST   -Y,R30
00078f e6ee      	LDI  R30,LOW(_DefaultKey)
000790 e0f3      	LDI  R31,HIGH(_DefaultKey)
000791 93fa      	ST   -Y,R31
000792 93ea      	ST   -Y,R30
000793 e7a4      	LDI  R26,LOW(_g_ucTempbuf)
000794 e0b3      	LDI  R27,HIGH(_g_ucTempbuf)
000795 940e 017a 	CALL _PcdAuthState
000797 2f1e      	MOV  R17,R30
000798 3010      	CPI  R17,0
000799 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
00079a e6a4      	LDI  R26,LOW(100)
00079b e0b0      	LDI  R27,0
00079c 940c 0469 	JMP  _delay1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
00079e 932a      	ST   -Y,R18
00079f 85ad      	LDD  R26,Y+13
0007a0 85be      	LDD  R27,Y+13+1
0007a1 85ef      	LDD  R30,Y+15
0007a2 89f8      	LDD  R31,Y+15+1
0007a3 9509      	ICALL
0007a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
0007a5 89e8      	LDD  R30,Y+16
0007a6 89f9      	LDD  R31,Y+16+1
0007a7 9734      	SBIW R30,4
0007a8 8be8      	STD  Y+16,R30
0007a9 8bf9      	STD  Y+16+1,R31
0007aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
0007ab 85ad      	LDD  R26,Y+13
0007ac 85be      	LDD  R27,Y+13+1
0007ad 85ef      	LDD  R30,Y+15
0007ae 89f8      	LDD  R31,Y+15+1
0007af 9509      	ICALL
0007b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x26:
0007b1 89a8      	LDD  R26,Y+16
0007b2 89b9      	LDD  R27,Y+16+1
0007b3 9614      	ADIW R26,4
0007b4 940e 07dc 	CALL __GETW1P
0007b6 83ee      	STD  Y+6,R30
0007b7 83ff      	STD  Y+6+1,R31
0007b8 81ae      	LDD  R26,Y+6
0007b9 81bf      	LDD  R27,Y+6+1
0007ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
0007bb 89a8      	LDD  R26,Y+16
0007bc 89b9      	LDD  R27,Y+16+1
0007bd 9614      	ADIW R26,4
0007be 940e 07dc 	CALL __GETW1P
0007c0 87ea      	STD  Y+10,R30
0007c1 87fb      	STD  Y+10+1,R31
0007c2 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0007c3 9610      	adiw r26,0
0007c4 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0007c5 e383     +LDI R24 , LOW ( 0x733 )
0007c6 e097     +LDI R25 , HIGH ( 0x733 )
                +__DELAY_USW_LOOP :
0007c7 9701     +SBIW R24 , 1
0007c8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x733
0007c9 95a8      	wdr
0007ca 9711      	sbiw r26,1
0007cb f7c9      	brne __delay_ms0
                 __delay_ms1:
0007cc 9508      	ret
                 
                 __ADDW2R15:
0007cd 2400      	CLR  R0
0007ce 0daf      	ADD  R26,R15
0007cf 1db0      	ADC  R27,R0
0007d0 9508      	RET
                 
                 __ANEGW1:
0007d1 95f1      	NEG  R31
0007d2 95e1      	NEG  R30
0007d3 40f0      	SBCI R31,0
0007d4 9508      	RET
                 
                 __LSLW3:
0007d5 0fee      	LSL  R30
0007d6 1fff      	ROL  R31
                 __LSLW2:
0007d7 0fee      	LSL  R30
0007d8 1fff      	ROL  R31
0007d9 0fee      	LSL  R30
0007da 1fff      	ROL  R31
0007db 9508      	RET
                 
                 __GETW1P:
0007dc 91ed      	LD   R30,X+
0007dd 91fc      	LD   R31,X
0007de 9711      	SBIW R26,1
0007df 9508      	RET
                 
                 __GETW1PF:
0007e0 9005      	LPM  R0,Z+
0007e1 91f4      	LPM  R31,Z
0007e2 2de0      	MOV  R30,R0
0007e3 9508      	RET
                 
                 __PUTPARD1:
0007e4 937a      	ST   -Y,R23
0007e5 936a      	ST   -Y,R22
0007e6 93fa      	ST   -Y,R31
0007e7 93ea      	ST   -Y,R30
0007e8 9508      	RET
                 
                 __SAVELOCR6:
0007e9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0007ea 934a      	ST   -Y,R20
                 __SAVELOCR4:
0007eb 933a      	ST   -Y,R19
                 __SAVELOCR3:
0007ec 932a      	ST   -Y,R18
                 __SAVELOCR2:
0007ed 931a      	ST   -Y,R17
0007ee 930a      	ST   -Y,R16
0007ef 9508      	RET
                 
                 __LOADLOCR6:
0007f0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0007f1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0007f2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0007f3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0007f4 8119      	LDD  R17,Y+1
0007f5 8108      	LD   R16,Y
0007f6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  25 r1 :   1 r2 :   1 r3 :   0 r4 :   0 r5 :   4 r6 :   0 r7 :   3 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  79 r17: 117 r18:  63 r19:  47 r20:  11 r21:  31 r22:  15 r23:   2 
r24:  12 r25:   3 r26: 199 r27:  81 r28:  43 r29:   1 r30: 505 r31: 110 
x  :  34 y  : 316 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :  11 
adiw  :  49 and   :   3 andi  :  16 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  35 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  63 brpl  :   1 brsh  :  16 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 186 
cbi   :   4 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   1 
cp    :  14 cpc   :  10 cpi   :  77 cpse  :   0 dec   :   1 des   :   0 
eor   :   2 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  32 inc   :   2 jmp   :  37 ld    :  30 ldd   : 129 ldi   : 265 
lds   :   0 lpm   :  14 lsl   :   5 lsr   :   0 mov   :  60 movw  :  45 
mul   :   2 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   8 out   :  49 pop   :  31 push  :  31 rcall :  55 ret   :  53 
reti  :   1 rjmp  :  96 rol   :   3 ror   :   0 sbc   :   1 sbci  :   4 
sbi   :   4 sbic  :   0 sbis  :   2 sbiw  :  35 sbr   :   0 sbrc  :   3 
sbrs  :  11 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   1 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 137 std   :  58 sts   :   0 sub   :   1 subi  :  28 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 60 out of 116 (51.7%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000fee   3972    106   4078   32768  12.4%
[.dseg] 0x000060 0x000388      0    296    296    2143  13.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
